########################################################################
#My Pending Requests Queries
MY_PENDING_REQUESTS_QUERY=SELECT K.* FROM \
    ( SELECT A.* FROM \
        (SELECT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,\
            DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION,\
            DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME RequestTypeName,\
            NVL(COUNT(DS.SW_REQUEST_ID),0) Users,\
            NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS REQUEST_STATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER,\
            NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') AS Requester \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID=MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                    WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                    WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                    FROM \
                    ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                        WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                        GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                    ) ST GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT LEFT JOIN \
                CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
            (SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
                    THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                        WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1)|| '..MORE' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) \
                    AS RN FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            $statusId$ \
            AND \
            ( \
                CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                END \
            ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
        $orderby$ ) A \
    ) K
           
MY_PENDING_REQUESTS_COUNT_QUERY=SELECT COUNT(*) FROM \
        (SELECT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,\
            DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION,\
            DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME RequestTypeName,\
            NVL(COUNT(DS.SW_REQUEST_ID),0) Users,\
            NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS REQUEST_STATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,MC.COMPANY_NAME company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER,\
            NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') AS Requester \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID=MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                    WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                    WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                    FROM \
                    ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                        WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                        GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                    ) ST GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT LEFT JOIN \
                CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
            (SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
                    THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                        WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1)|| '..MORE' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) \
                    AS RN FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            $statusId$ \
            AND \
            ( \
                CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                END \
            ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
        )

################################################################################################################################################          
          
SEARCH_SWOTHERFILES = SELECT B.* FROM \
( \
SELECT DISTINCT \
D.DOCUMENT_ID AS DOCUMENTID, \
D.DOCFILE_NAME AS docFileName, \
D.ISSOFTWARE AS type, \
DB.FILE_SIZE AS fileSize, \
SC.SWCATEGORY_DESC AS swCategoryDesc, \
D.DOCRELEASE_DATE AS docReleaseDate, \
CASE WHEN D.ISSOFTWARE = 'N' THEN MU4.NAME ELSE MU1.NAME END AS contact, \
MU2.NAME AS updatedBy, \
D.UPDATE_DATE AS updateTime, \
D.STATUS AS status, \
S.REQUIRE_SLA AS requireSLA, \
TO_CHAR( D.CREATE_DATE, 'MM/DD/YYYY' ) AS CREATTS, \
D.DECRYPTPGP, \
D.APPLYWATER_MARK AS APPLYWATERMARK, \
D.ENCRYPTED_DOWNLOAD AS ENCRYPTEDOWNLOAD, \
LAPROD.PRODNAME AS prodName, \
D.LOCKED, \
DT.DOCTYPE_NAME AS DOCTYPENAME, \
S.CREATED_BY AS CREATUSRID, \
CASE WHEN PE.ISENGINEER_FLAG IS NULL THEN 'N' ELSE PE.ISENGINEER_FLAG END AS ISENGINEER, \
CASE WHEN PLM.ISPLM_FLAG IS NULL THEN 'N' ELSE PLM.ISPLM_FLAG END AS ISPLM, \
CASE WHEN K.ISRESTRICTED IS NULL THEN 'N' ELSE K.ISRESTRICTED END AS ISRESTRICTED, \
CASE WHEN DD.ISFILEOWNER IS NULL THEN 'N' ELSE DD.ISFILEOWNER END AS ISFILEOWNER, \
LV.RELEASE_VERSION ReleaseVersion, \
D.APPLY_ACCESS_PROFILE, \
CASE WHEN D.DOC_CATEGORY IS NULL AND (D.ISSOFTWARE IS NULL OR D.ISSOFTWARE='N') THEN 'OTHER FILE' WHEN D.ISSOFTWARE='Y' THEN 'SOFTWARE' END AS FILETYPE, \
LAPROD.PRODTAXID \
FROM \
CSP.CSP_DOCUMENT D \
LEFT JOIN CSP.CSP_PRODUCT_DOCUMENTS CPD ON D.DOCUMENT_ID=CPD.DOCUMENT_ID \
LEFT JOIN CSP.CSP_L_VERSIONS LV ON d.VERSION_ID = LV.VERSION_ID \
INNER JOIN \
( \
    SELECT \
    PD.DOCUMENT_ID \
    FROM \
    CSP.CSP_PRODUCT_DOCUMENTS PD INNER JOIN  \
    MASTER.MASTER_PRODUCT_TAXONOMY P ON PD.PRODUCT_TAXID = P.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_PRODUCT_ENGINEER PE ON P.PRODUCT_TAXID = PE.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_DOCUMENT D1 ON PD.DOCUMENT_ID = D1.DOCUMENT_ID \
    WHERE  PE.ISACTIVE='Y' and \
    PE.PRODUCT_ENGINEER_ID = $userId$ \
    $AddProductName$ \
	$isSoftware$ \
	$update from date$ \
	$update to date$ \
	$status$ \
	$docFileName$ \
	UNION \
    SELECT \
    PD.DOCUMENT_ID \
    FROM \
    CSP.CSP_PRODUCT_DOCUMENTS PD INNER JOIN  \
    MASTER.MASTER_PRODUCT_TAXONOMY P ON PD.PRODUCT_TAXID = P.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_PRODUCT_PLMS PLM ON P.PRODUCT_TAXID = PLM.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_DOCUMENT D2 ON PD.DOCUMENT_ID = D2.DOCUMENT_ID \
    WHERE \
    PLM.PLMID = $userId$ \
	$AddProductName$ \
	$isSoftware2$ \
	$update from date2$ \
	$update to date2$ \
    $status2$ \
	$docFileName2$ \
) T ON D.DOCUMENT_ID = T.DOCUMENT_ID INNER JOIN \
( \
    SELECT \
    K.DOCUMENT_ID, \
    LISTAGG(K.PRODUCT_NAME,',') WITHIN GROUP (ORDER BY K.PRODUCT_NAME) PRODNAME, \
    LISTAGG(K.PRODUCT_TAXID,',') WITHIN GROUP (ORDER BY K.PRODUCT_NAME) PRODTAXID \
    FROM \
    ( \
        SELECT \
        DP.DOCUMENT_ID, \
        DPT.PRODUCT_NAME, \
        DPT.PRODUCT_TAXID, \
        ROW_NUMBER() OVER(PARTITION BY DP.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME) AS RN \
        FROM \
        CSP.CSP_PRODUCT_DOCUMENTS DP INNER JOIN  \
        MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
    ) K \
    WHERE K.RN <= 15 \
    GROUP BY K.DOCUMENT_ID \
) LAPROD ON D.DOCUMENT_ID = LAPROD.DOCUMENT_ID INNER JOIN \
( \
    SELECT \
    TO_CHAR( USER_ID ) AS USERID, \
    (FIRST_NAME || ' ' || LAST_NAME) AS NAME \
    FROM MASTER.MASTER_USER \
	$updatedBy$ \
) MU2 ON D.UPDATED_BY = MU2.USERID \
INNER JOIN( SELECT TO_CHAR( USER_ID ) AS USERID, ( FIRST_NAME || ' ' || LAST_NAME ) AS NAME FROM MASTER.MASTER_USER $updatedBy$ ) MU2 ON D.CREATED_BY = MU2.USERID LEFT JOIN  \
CSP.CSP_DOCTYPES DT ON D.DOCTYPE_ID = DT.DOCTYPE_ID LEFT JOIN  \
CSP.CSP_DOCUMENTS_BOX DB ON D.DOCUMENT_ID = DB.DOCUMENT_ID INNER JOIN  \
CSP.CSP_SWATTRIBUTES S ON D.DOCUMENT_ID = S.DOCUMENT_ID INNER JOIN  \
CSP.CSP_SDS_L_SWCATEGORIES SC ON S.SWCATEGORY_ID = SC.SWCATEGORY_ID INNER JOIN \
( \
    SELECT \
    USER_ID AS USERID, \
    (FIRST_NAME || ' ' || LAST_NAME) AS NAME \
    FROM MASTER.MASTER_USER \
) MU1 ON S.CREATED_BY = MU1.USERID INNER JOIN \
( \
    SELECT \
    TO_CHAR( USER_ID ) AS USERID, \
    (FIRST_NAME || ' ' || LAST_NAME) AS NAME \
    FROM MASTER.MASTER_USER \
) MU4 ON S.CREATED_BY = MU4.USERID  LEFT JOIN \
( \
    SELECT \
    D12.DOCUMENT_ID, \
    'Y' AS ISENGINEER_FLAG, \
    COUNT( PE1.PRODUCT_ENGINEER_ID ) \
    FROM \
    CSP.CSP_PRODUCT_DOCUMENTS PD1 INNER JOIN  \
    CSP.CSP_PRODUCT_ENGINEER PE1 ON PD1.PRODUCT_TAXID = PE1.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_DOCUMENT D12 ON PD1.DOCUMENT_ID = D12.DOCUMENT_ID \
    WHERE PE1.PRODUCT_ENGINEER_ID = $userId$ \
    GROUP BY D12.DOCUMENT_ID,'Y' \
) PE ON D.DOCUMENT_ID = PE.DOCUMENT_ID LEFT JOIN \
( \
    SELECT \
    D12.DOCUMENT_ID, \
    'Y' AS ISPLM_FLAG, \
    COUNT( PLM1.PLMID ) \
    FROM \
    CSP.CSP_PRODUCT_DOCUMENTS PD1 INNER JOIN  \
    CSP.CSP_PRODUCT_PLMS PLM1 ON PD1.PRODUCT_TAXID = PLM1.PRODUCT_TAXID INNER JOIN  \
    CSP.CSP_DOCUMENT D12 ON PD1.DOCUMENT_ID = D12.DOCUMENT_ID \
    WHERE PLM1.PLMID = $userId$ \
    GROUP BY D12.DOCUMENT_ID,'Y' \
) PLM ON D.DOCUMENT_ID = PLM.DOCUMENT_ID LEFT JOIN \
( \
	SELECT \
	DUG.DOCUMENT_ID,G.GROUP_ID,SUG.ISRESTRICTED,DUG.ISACTIVE \
	FROM \
	CSP.CSP_DOCUMENT_USER_GROUP DUG LEFT JOIN \
	CSP.CSP_SLA_GROUP G ON DUG.GROUP_ID = G.GROUP_ID LEFT JOIN \
	( \
		SELECT GROUP_ID, \
		'Y' AS ISRESTRICTED, \
		COUNT(GROUP_ID) \
		FROM CSP.CSP_SLA_USER_GROUP \
		WHERE USER_ID = $userId$ \
		GROUP BY GROUP_ID,'Y' \
	) SUG ON G.GROUP_ID = SUG.GROUP_ID \
	WHERE DUG.ISACTIVE = 'Y' \
) K ON D.DOCUMENT_ID = K.DOCUMENT_ID LEFT JOIN \
( \
	SELECT DOCUMENT_ID, \
	'Y' AS ISFILEOWNER, \
	COUNT(DOCUMENT_ID) \
	FROM CSP.CSP_DOCUMENT \
	WHERE CREATED_BY = '$userId$' \
	GROUP BY DOCUMENT_ID,'Y' \
) DD ON D.DOCUMENT_ID = DD.DOCUMENT_ID \
WHERE 1=1  \
$category$ \
$applicableSLA$ \
) B
            
GET_COMPANIES_LIST = SELECT  VS.COMPANYID,VS.COMPANYNAME FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M \
   					 WHERE M.COMPANY_ID= VS.COMPANYID \
        			 AND M.ISACTIVE='Y' AND M.VERIFIED='Y' \
       				 GROUP BY VS.COMPANYID,VS.COMPANYNAME \
       				 UNION \
        			 SELECT  VS.CHILDCOMPANYID,VS.CHILDCOMPANY FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M \
   					 WHERE M.COMPANY_ID= VS.CHILDCOMPANYID \
        			 AND M.ISACTIVE='Y' AND M.VERIFIED='Y' \
        			 GROUP BY VS.CHILDCOMPANYID,VS.CHILDCOMPANY \
   					 ORDER BY 2
     
GET_PRODUCTS_FOR_ADMIN = select pt.productTaxId , pt.prodName from ProductTaxonomy pt where pt.productTaxId in (select pt.productTaxId from  \
						 CSPProductPLM pplm, MasterUser mu where pplm.plmId = mu.id and pt.productTaxId = pplm.prodId) or \
						 pt.productTaxId in (select pt.productTaxId from CSPProductEngineer cppe, MasterUser mu where cppe.productEngineerId = mu.id and \
						 pt.productTaxId = cppe.productTaxId) and pt.recordActive = 'Y' 
						 
GET_PRODUCTS_FOR_NON_ADMIN = select pt.productTaxId , pt.prodName from ProductTaxonomy pt where pt.productTaxId in (select pt.productTaxId from \
						  CSPProductPLM pplm, MasterUser mu where pplm.plmId = mu.id and pt.productTaxId = pplm.prodId and pplm.plmId = ? ) and pt.recordActive = 'Y' or \
						 pt.productTaxId in (select pt.productTaxId from CSPProductEngineer cppe, MasterUser mu where cppe.productEngineerId = mu.id and \
						 pt.productTaxId = cppe.productTaxId and cppe.productEngineerId = ?)

LOAD_SLA_TO_VIEW = SELECT DISTINCT sw.DOCUMENT_ID as documentId, sw.COMPANY_ID as companyId, mc.COMPANY_NAME as companyName, sw.SLA_ID as slaId \
				from MASTER.MASTER_COMPANY mc, CSP.CSP_SWSLA sw \
				LEFT JOIN CSP.V_SLA v ON v.SLAID = sw.SLA_ID \
				where mc.COMPANY_ID = sw.COMPANY_ID \
				and sw.DOCUMENT_ID = :documentId $orderBy$ 
				
LOAD_RESTRICTED_GROUP =  SELECT DISTINCT G.GROUP_ID, G.GROUP_NAME FROM CSP.CSP_SLA_GROUP G, CSP.CSP_SLA_USER_GROUP UG, CSP.CSP_SLA_GROUPOWNER GO, MASTER.MASTER_USER M, \
				 CSP.CSP_SLA_GROUPSLA S  WHERE G.GROUP_ID = UG.GROUP_ID AND G.GROUP_ID = S.GROUP_ID(+) AND (G.GROUP_ID = GO.GROUP_ID (+)) \
				 AND (UG.USER_ID = M.USER_ID ) AND (1 = 1  AND G.TYPE = 0 AND (M.COMPANY_ID = 3 OR S.COMPANY_ID>0) AND G.RECORD_ACTIVE = 'Y' \
				 AND (G.CREATED_BY = :userId OR GO.USER_ID = :userId OR ug.USER_ID = :userId) ) ORDER BY LOWER(GROUP_NAME)
				 
SEARCH_RESTRICTED_GROUP= SELECT * FROM (SELECT   m.FIRST_NAME||' '||m.LAST_NAME as username, c.COMPANY_NAME AS company, \
	m.LOGIN_NAME AS email, DECODE(m.CITY, NULL, ' ', m.CITY || ',') || DECODE(m.STATE_NAME, NULL, ' ', m.STATE_NAME || ',') || DECODE(country.COUNTRY_NAME, NULL, ' ', country.COUNTRY_NAME) as Location, \
	TO_CHAR(m.UPDATE_DATE,'MM/DD/YYYY') AS updatedOn,  NVL(m2.FIRST_NAME ||' '||m2.LAST_NAME,'-') as  updatedBy \
    FROM MASTER.MASTER_USER m \
    INNER JOIN MASTER.MASTER_COMPANY c on m.COMPANY_ID = c.COMPANY_ID AND m.COMPANY_ID = 3 \
    INNER JOIN CSP.CSP_SLA_USER_GROUP MUG ON m.USER_ID = MUG.USER_ID \
    INNER JOIN MASTER.MASTER_COUNTRY country on m.COUNTRY_ID = country.COUNTRY_ID \
    INNER JOIN MASTER.MASTER_USER m2 on m2.USER_ID = m.UPDATED_BY \
    WHERE MUG.GROUP_ID = :groupId $orderBy$ \
    )
    
LOAD_UPDATED_RESTRICTED_GROUP = SELECT DISTINCT DUG.GROUP_ID,G.GROUP_NAME FROM CSP.CSP_SLA_GROUP G, CSP.CSP_DOCUMENT_USER_GROUP DUG, CSP.CSP_DOCUMENT D \
								WHERE G.GROUP_ID = DUG.GROUP_ID AND D.DOCUMENT_ID = DUG.DOCUMENT_ID AND DUG.ISACTIVE = 'Y' \
								AND DUG.DOCUMENT_ID = :documentId \

GET_NO_SLA_REQUEST_HISTORY=SELECT DCSWREQ.SW_REQUEST_ID,\
	DCSWREQ.OTHER_INFORMATION,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,\
    DCSWREQ.CONTACT_EMAIL,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,MC.COMPANY_NAME,\
    DCSWREQ.REQUEST_DATE,SWSTATUS.SW_REQUEST_STATUS_NAME,REQEMAILS.LISTAGGREMAILS USEREMAILS,\
    REQCNT.CNT SLAID,SLA.LISTAGGRSLIDS LISTAGGRSLAID,\
    DCSWTYPES.REQUEST_TYPE_NAME,DCPRODCATEGORIES.PRODUCT_CATEGORY_NAME,dcProdTax.PRODUCT_NAME,\
    DCSWREQ.CUSTOM_ENCRYPT,MU.LOGIN_NAME,DCSWREQ.GRANT_REQUESTER_ACCESS,DCSWREQ.CUSTOM_INSTRUCTIONS, MC.company_id \
    from \
    CSP.CSP_SWREQUESTS DCSWREQ \
    INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID = DCSWREQ.COMPANY_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWTYPES.REQUEST_TYPE_ID=DCSWREQ.REQUEST_TYPE_ID \
    LEFT JOIN MASTER.MASTER_PRODUCT_TAXONOMY DCPRODTAX ON DCPRODTAX.PRODUCT_TAXID = DCSWREQ.PRODUCT_ID \
    LEFT JOIN CSP.CSP_PRODUCTCATEGORIES DCPRODCATEGORIES ON DCPRODCATEGORIES.PRODUCT_CATEGORY_ID=DCSWREQ.PRODUCT_CATEGORY_ID \
    INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID=DCSWREQ.REQUESTER_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES SWSTATUS ON SWSTATUS.SW_REQUEST_STATUS_ID=DCSWREQ.SW_REQUEST_STATUS_ID \
    LEFT JOIN \
    ( SELECT SW_REQUEST_ID,\
      rtrim(xmlagg(XMLELEMENT(e,slaid,',').EXTRACT('//text()')).GetClobVal(),',') listaggrslids \
			FROM \
			( SELECT DCSWREQSLA.SW_REQUEST_ID,DCSWREQSLA.SLA_ID SLAID,ROW_NUMBER() OVER \
                (PARTITION BY DCSWREQSLA.SW_REQUEST_ID ORDER BY DCSWREQSLA.SLA_ID ASC) AS RN \
                FROM \
                CSP.CSP_SWREQUESTSLAS DCSWREQSLA order by DCSWREQSLA.SW_REQUEST_ID,SLAID \
            ) GROUP BY SW_REQUEST_ID \
        ) SLA ON SLA.SW_REQUEST_ID =  DCSWREQ.SW_REQUEST_ID \
        LEFT JOIN \
        (SELECT SW_REQUEST_ID,\
           rtrim(xmlagg(XMLELEMENT(e,email,',').EXTRACT('//text()')).GetClobVal(),',') listaggremails \
			FROM \
			( SELECT DS.SW_REQUEST_ID,MU.FIRST_NAME||' '||MU.LAST_NAME||' ('||MU.LOGIN_NAME||')' EMAIL,ROW_NUMBER() OVER \
                (PARTITION BY DS.SW_REQUEST_ID ORDER BY MU.FIRST_NAME ASC) AS RN \
                FROM \
                CSP.CSP_SWREQUESTUSERS DS \
                INNER JOIN MASTER.MASTER_USER MU ON DS.USER_ID=MU.USER_ID \
                ORDER BY DS.SW_REQUEST_ID,EMAIL \
            ) GROUP BY SW_REQUEST_ID \
        ) REQEMAILS ON REQEMAILS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
        LEFT JOIN \
        ( SELECT SW_REQUEST_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_SWREQUESTSLAS \
			GROUP BY SW_REQUEST_ID \
        ) REQCNT ON REQCNT.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
        WHERE DCSWREQ.SW_REQUEST_ID=? \
		ORDER BY DCSWREQ.SW_REQUEST_ID
			
GET_NOSLA_REQUEST_HISTORY_DOCUMENTS=select distinct dcReqSw.SW_REQUEST_ID\
			,dcReqSw.DOCUMENT_ID,dcDoc.DOC_NUMBER\
			,dcDoc.DOC_TITLE, dcSWCat.SWCATEGORY_DESC\
			,dcSWAtt.REQUIRE_SLA, swReqStatus.SW_APPROVAL_STATUS_NAME\
          	,COALESCE(PLM1.listaggruser,apr.ename) PLMID\
          	,COALESCE(PLM1.ACTIVE_FLAG,APR.ACTIVE_FLAG) ACTIVE_FLAG\
           	,dp.listaggrslids  PRODUCT_NAME, dp.product_taxid PRODUCT_TAXID, \
  			to_char(dcDoc.DOCRELEASE_DATE, 'yyyy-mm-dd') DOCRELEASE_DATE, \
  dcDoc.docfile_name as docFileName \
           	from CSP.CSP_REQUESTSWS dcReqSw\
           	,CSP.CSP_DOCUMENT dcDoc\
           	,CSP.CSP_SWATTRIBUTES dcSWAtt\
           	,CSP.CSP_SDS_L_SWCATEGORIES dcSWCat\
           	,CSP.CSP_SWAPPROVALSTATUSES swReqStatus\
         	,(select SW_REQUEST_ID,DOCUMENT_ID, PLMID \
         	,case \
          	when instr(listagg(ename,',') within group (order by ename),',',1,10)>0 \
         	then substr(listagg(ename,',') within group (order by ename),1,instr(listagg(ename,',') within group (order by ename),',',1,10)-1 )||'..more' \
         	else listagg(ename,',') within group (order by ename)  end listaggrsenames from \
         	( \
         	SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME ename, ROW_NUMBER() OVER (PARTITION BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID ORDER BY  DPlm.PLMID ASC) AS rn \
         	FROM \
         	CSP.CSP_REQUESTSWS DR \
         	,CSP.CSP_PRODUCT_DOCUMENTS DP \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	,CSP.CSP_PRODUCT_PLMS dplm \
         	,MASTER.MASTER_USER mu \
         	WHERE 1=1 \
         	AND DR.DOCUMENT_ID=DP.DOCUMENT_ID \
         	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
         	and dPT.PRODUCT_TAXID=dplm.PRODUCT_TAXID \
         	and DPlm.PLMID=mu.USER_ID \
         	and dplm.ISPRIMARY='Y' \
         	AND dplm.RECORD_ACTIVITY = 'Y' \
         	and exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and   PRODUCT_TAXID in \
         	(select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
         	group by DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME \
        	order by 1,2,3 \
         	) \
         	where rn<=15 \
         	group by SW_REQUEST_ID,DOCUMENT_ID, PLMID) PLM \
         	,(select DOCUMENT_ID,ACTIVE_FLAG \
          	,case \
           	when instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)>0 \
            then substr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),1,instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)-1 )||'..more' \
            else listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME)  end listaggruser from \
            ( \
          	SELECT DP.DOCUMENT_ID,mu.FIRST_NAME,mu.LAST_NAME,mu.ACTIVE_FLAG, ROW_NUMBER() OVER (PARTITION BY Dp.DOCUMENT_ID ORDER BY  mu.FIRST_NAME,mu.LAST_NAME ASC) AS rn \
          	FROM \
          	CSP.CSP_PRODUCT_DOCUMENTS DP \
          	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
          	,CSP.CSP_PRODUCT_PLMS dplm \
          	,MASTER.MASTER_USER mu \
          	WHERE 1=1 \
          	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
          	and dPT.PRODUCT_TAXID=dplm.PRODUCT_TAXID \
          	and dplm.PLMID=mu.USER_ID \
          	and dplm.ISPRIMARY='Y' \
          	AND dplm.RECORD_ACTIVITY = 'Y' \
          	and exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and   PRODUCT_TAXID in \
            (select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
          	group by Dp.DOCUMENT_ID,mu.FIRST_NAME,mu.LAST_NAME,mu.active_flag \
          	order by 1,2,3,4 \
          	) \
          	where rn<=15 \
          	group by DOCUMENT_ID,ACTIVE_FLAG) PLM1 \
         	,(select DOCUMENT_ID \
         	,case \
         	when instr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),',',1,20)>0 \
          	then substr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),1,instr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),',',1,20)-1 )||'..more' \
          	else listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME)  end listaggrslids, LISTAGG(PRODUCT_TAXID,',')WITHIN GROUP (ORDER BY PRODUCT_NAME) product_taxid from \
          	( \
         	SELECT dpd.DOCUMENT_ID,DPT.PRODUCT_NAME, ROW_NUMBER() OVER (PARTITION BY dpd.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME ASC) AS rn, DPT.product_taxid \
         	from CSP.CSP_PRODUCT_DOCUMENTS dpd \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	where dPT.PRODUCT_TAXID=dpd.PRODUCT_TAXID \
         	order by 1,2,3 \
         	) \
         	where rn<=15 \
         	group by DOCUMENT_ID) dp \
         	,(select DR.SW_REQUEST_ID,DR.DOCUMENT_ID,da.APPROVER_ID,mu.FIRST_NAME||' '||mu.LAST_NAME ename,mu.ACTIVE_FLAG \
         	from CSP.CSP_REQUESTSWS DR \
         	,CSP.CSP_PRODUCT_DOCUMENTS DP \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	,CSP.CSP_DOCUMENTAPPROVER da \
         	,MASTER.MASTER_USER mu \
         	where DR.DOCUMENT_ID=DP.DOCUMENT_ID \
         	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
         	AND da.APPROVER_ID=MU.USER_ID \
         	and not exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and PRODUCT_TAXID in \
         	(select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
         	and dr.DOCUMENT_ID=da.DOCUMENT_ID \
         	group by DR.SW_REQUEST_ID,DR.DOCUMENT_ID,da.APPROVER_ID,mu.FIRST_NAME||' '||mu.LAST_NAME,\
		    mu.ACTIVE_FLAG) apr \
         	where 1=1 \
         	and dcReqSw.SW_REQUEST_ID=? \
         	and dcDoc.DOCUMENT_ID=dcReqSw.DOCUMENT_ID \
         	and dcSWAtt.DOCUMENT_ID(+)=dcReqSw.DOCUMENT_ID \
         	and dcSWCat.SWCATEGORY_ID(+)=dcSWAtt.SWCATEGORY_ID \
          	and swReqStatus.SW_APPROVAL_STATUS_ID(+)=dcReqSw.SW_APPROVAL_STATUS_ID \
         	AND dcReqSw.SW_REQUEST_ID=PLM.SW_REQUEST_ID(+) \
         	AND dcReqSw.DOCUMENT_ID=PLM.DOCUMENT_ID(+) \
         	AND dcReqSW.DOCUMENT_ID=PLM1.DOCUMENT_ID(+) \
            AND dcReqSw.SW_REQUEST_ID=apr.SW_REQUEST_ID(+) \
         	AND dcReqSw.DOCUMENT_ID=apr.DOCUMENT_ID(+) \
         	and dcReqSw.DOCUMENT_ID=dp.DOCUMENT_ID(+) \
         	$PLMIDS$ order by upper(dcDoc.DOC_NUMBER) asc
         	
GET_NOSLA_REQUEST_HISTORY_DOCUMENTS_COUNT=select COUNT(*) FROM (select distinct dcReqSw.SW_REQUEST_ID\
			,dcReqSw.DOCUMENT_ID,dcDoc.DOC_NUMBER\
			,dcDoc.DOC_TITLE, dcSWCat.SWCATEGORY_DESC\
			,dcSWAtt.REQUIRE_SLA, swReqStatus.SW_APPROVAL_STATUS_NAME\
          	,COALESCE(PLM1.listaggruser,apr.ename) PLMID\
           	,dp.listaggrslids  PRODUCT_NAME \
           	from CSP.CSP_REQUESTSWS dcReqSw\
           	,CSP.CSP_DOCUMENT dcDoc\
           	,CSP.CSP_SWATTRIBUTES dcSWAtt\
           	,CSP.CSP_SDS_L_SWCATEGORIES dcSWCat\
           	,CSP.CSP_SWAPPROVALSTATUSES swReqStatus\
         	,(select SW_REQUEST_ID,DOCUMENT_ID, PLMID \
         	,case \
          	when instr(listagg(ename,',') within group (order by ename),',',1,10)>0 \
         	then substr(listagg(ename,',') within group (order by ename),1,instr(listagg(ename,',') within group (order by ename),',',1,10)-1 )||'..more' \
         	else listagg(ename,',') within group (order by ename)  end listaggrsenames from \
         	( \
         	SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME ename, ROW_NUMBER() OVER (PARTITION BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID ORDER BY  DPlm.PLMID ASC) AS rn \
         	FROM \
         	CSP.CSP_REQUESTSWS DR \
         	,CSP.CSP_PRODUCT_DOCUMENTS DP \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	,CSP.CSP_PRODUCT_PLMS dplm \
         	,MASTER.MASTER_USER mu \
         	WHERE 1=1 \
         	AND DR.DOCUMENT_ID=DP.DOCUMENT_ID \
         	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
         	and dPT.PRODUCT_TAXID=dplm.PRODUCT_TAXID \
         	and DPlm.PLMID=mu.USER_ID \
         	and dplm.ISPRIMARY='Y' \
         	and exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and   PRODUCT_TAXID in \
         	(select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
         	group by DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME \
        	order by 1,2,3 \
         	) \
         	where rn<=15 \
         	group by SW_REQUEST_ID,DOCUMENT_ID, PLMID) PLM \
         	,(select DOCUMENT_ID \
          	,case \
           	when instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)>0 \
            then substr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),1,instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)-1 )||'..more' \
            else listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME)  end listaggruser from \
            ( \
          	SELECT DP.DOCUMENT_ID,mu.FIRST_NAME,mu.LAST_NAME, ROW_NUMBER() OVER (PARTITION BY Dp.DOCUMENT_ID ORDER BY  mu.FIRST_NAME,mu.LAST_NAME ASC) AS rn \
          	FROM \
          	CSP.CSP_PRODUCT_DOCUMENTS DP \
          	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
          	,CSP.CSP_PRODUCT_PLMS dplm \
          	,MASTER.MASTER_USER mu \
          	WHERE 1=1 \
          	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
          	and dPT.PRODUCT_TAXID=dplm.PRODUCT_TAXID \
          	and dplm.PLMID=mu.USER_ID \
          	and dplm.ISPRIMARY='Y' \
          	AND dplm.RECORD_ACTIVITY = 'Y' \
          	and exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and   PRODUCT_TAXID in \
            (select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
          	group by Dp.DOCUMENT_ID,mu.FIRST_NAME,mu.LAST_NAME \
          	order by 1,2,3 \
          	) \
          	where rn<=15 \
          	group by DOCUMENT_ID) PLM1 \
         	,(select DOCUMENT_ID \
         	,case \
         	when instr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),',',1,20)>0 \
          	then substr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),1,instr(listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME),',',1,20)-1 )||'..more' \
          	else listagg(PRODUCT_NAME,',') within group (order by PRODUCT_NAME)  end listaggrslids from \
          	( \
         	SELECT dpd.DOCUMENT_ID,DPT.PRODUCT_NAME, ROW_NUMBER() OVER (PARTITION BY dpd.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME ASC) AS rn \
         	from CSP.CSP_PRODUCT_DOCUMENTS dpd \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	where dPT.PRODUCT_TAXID=dpd.PRODUCT_TAXID \
         	order by 1,2,3 \
         	) \
         	where rn<=15 \
         	group by DOCUMENT_ID) dp \
         	,(select DR.SW_REQUEST_ID,DR.DOCUMENT_ID,da.APPROVER_ID,mu.FIRST_NAME||' '||mu.LAST_NAME ename \
         	from CSP.CSP_REQUESTSWS DR \
         	,CSP.CSP_PRODUCT_DOCUMENTS DP \
         	,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         	,CSP.CSP_DOCUMENTAPPROVER da \
         	,MASTER.MASTER_USER mu \
         	where DR.DOCUMENT_ID=DP.DOCUMENT_ID \
         	AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
         	AND da.APPROVER_ID=MU.USER_ID \
         	and not exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and PRODUCT_TAXID in \
         	(select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
         	and dr.DOCUMENT_ID=da.DOCUMENT_ID \
         	group by DR.SW_REQUEST_ID,DR.DOCUMENT_ID,da.APPROVER_ID,mu.FIRST_NAME||' '||mu.LAST_NAME) apr \
         	where 1=1 \
         	and dcReqSw.SW_REQUEST_ID=? \
         	and dcDoc.DOCUMENT_ID=dcReqSw.DOCUMENT_ID \
         	and dcSWAtt.DOCUMENT_ID(+)=dcReqSw.DOCUMENT_ID \
         	and dcSWCat.SWCATEGORY_ID(+)=dcSWAtt.SWCATEGORY_ID \
          	and swReqStatus.SW_APPROVAL_STATUS_ID(+)=dcReqSw.SW_APPROVAL_STATUS_ID \
         	AND dcReqSw.SW_REQUEST_ID=PLM.SW_REQUEST_ID(+) \
         	AND dcReqSw.DOCUMENT_ID=PLM.DOCUMENT_ID(+) \
         	AND dcReqSW.DOCUMENT_ID=PLM1.DOCUMENT_ID(+) \
            AND dcReqSw.SW_REQUEST_ID=apr.SW_REQUEST_ID(+) \
         	AND dcReqSw.DOCUMENT_ID=apr.DOCUMENT_ID(+) \
         	and dcReqSw.DOCUMENT_ID=dp.DOCUMENT_ID(+) \
         	$PLMIDS$ )

FETCH_COMPLETED_SLA_COMPANIES_LIST= SELECT  VS.COMPANYID,VS.COMPANYNAME FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M \
   WHERE M.COMPANY_ID= VS.COMPANYID  \
        AND M.ISACTIVE='Y' AND M.VERIFIED='Y' \
        GROUP BY VS.COMPANYID,VS.COMPANYNAME \
        UNION \
        SELECT  VS.CHILDCOMPANYID,VS.CHILDCOMPANY FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M \
   WHERE M.COMPANY_ID= VS.CHILDCOMPANYID  \
        AND M.ISACTIVE='Y' AND M.VERIFIED='Y' \
        GROUP BY VS.CHILDCOMPANYID,VS.CHILDCOMPANY ORDER BY 2
 

FETCH_MASTER_USER_GROUPS_WITH_COMPLETED_SLA_COVERAGE= SELECT * FROM  \
(SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
FROM  \
	CSP.CSP_SLA_GROUP G inner join  \
	CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID left outer join   \
	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join   \
	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID left outer join  \
	CSP.CSP_SLA_GROUPSLA S ON G.GROUP_ID=S.GROUP_ID   \
WHERE    \
	G.TYPE  = 0    \
	AND S.COMPANY_ID>0    \
	AND G.RECORD_ACTIVE  = 'Y'   \
	AND G.GROUP_ID IN  \
	(   \
	SELECT   \
	L.GROUP_ID   \
	FROM   \
		(  \
			SELECT   \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 2   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
		) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN  \
		(   \
            SELECT CSG.GROUP_ID,COUNT(DISTINCT MU.COMPANY_ID) AS status   \
            FROM MASTER.MASTER_USER MU,CSP.CSP_SLA_USER_GROUP MUG,CSP.CSP_SLA_GROUP CSG   \
            WHERE MU.USER_ID = MUG.USER_ID   \
            AND MUG.GROUP_ID = CSG.GROUP_ID  \
            AND MU.COMPANY_ID <> 3   \
            AND EXISTS (SELECT SLA.COMPANY_ID   \
            FROM CSP.CSP_SLA_GROUPSLA SLA   \
            WHERE SLA.GROUP_ID = CSG.GROUP_ID   \
            AND MU.COMPANY_ID = COMPANY_ID)   \
            GROUP BY CSG.GROUP_ID   \
        )B ON B.GROUP_ID=L1.GROUP_ID   \
		WHERE L1.COMPANY_ID = 3   \
		UNION   \
		SELECT   \
		L.GROUP_ID   \
		FROM   \
		(   \
			SELECT    \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 1   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
		) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN   \
		CSP.CSP_SLA_GROUPSLA A ON L1.COMPANY_ID = A.COMPANY_ID   \
		WHERE L1.COMPANY_ID <> 3   \
	)   \
UNION   \
SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME    \
FROM    \
	CSP.CSP_SLA_GROUP G inner join    \
	CSP.CSP_SLA_USER_GROUP UG ON  G.GROUP_ID  = UG.GROUP_ID left outer join   \
	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join   \
	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID   \
WHERE    \
	G.TYPE  = 0    \
	AND G.RECORD_ACTIVE  = 'Y'   \
    AND G.GROUP_ID IN   \
    (   \
		SELECT    \
		L.GROUP_ID   \
		FROM   \
		(   \
			SELECT    \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 1   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
		) L1 ON L.GROUP_ID = L1.GROUP_ID   \
        WHERE L1.COMPANY_ID = 3   \
	))H   \
    ORDER BY LOWER(H.GROUP_NAME)
    
FILTER_MASTER_USER_GROUPS_WITH_LOGGEDIN_USER= SELECT * FROM  \
(SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
FROM  \
	CSP.CSP_SLA_GROUP G inner join  \
	CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID left outer join   \
	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join   \
	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID left outer join  \
	CSP.CSP_SLA_GROUPSLA S ON G.GROUP_ID=S.GROUP_ID   \
WHERE    \
	G.TYPE  = 0    \
	AND S.COMPANY_ID>0    \
	AND G.RECORD_ACTIVE  = 'Y'   \
	AND G.CREATED_BY= $user_id$ \
	AND G.GROUP_ID IN  \
	(   \
	SELECT   \
	L.GROUP_ID   \
	FROM   \
		(  \
			SELECT   \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 2   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
		) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN  \
		(   \
            SELECT CSG.GROUP_ID,COUNT(DISTINCT MU.COMPANY_ID) AS status   \
            FROM MASTER.MASTER_USER MU,CSP.CSP_SLA_USER_GROUP MUG,CSP.CSP_SLA_GROUP CSG   \
            WHERE MU.USER_ID = MUG.USER_ID   \
            AND MUG.GROUP_ID = CSG.GROUP_ID  \
            AND MU.COMPANY_ID <> 3   \
            AND EXISTS (SELECT SLA.COMPANY_ID   \
            FROM CSP.CSP_SLA_GROUPSLA SLA   \
            WHERE SLA.GROUP_ID = CSG.GROUP_ID   \
            AND MU.COMPANY_ID = COMPANY_ID)   \
            GROUP BY CSG.GROUP_ID   \
        )B ON B.GROUP_ID=L1.GROUP_ID   \
		WHERE L1.COMPANY_ID = 3   \
		UNION   \
		SELECT   \
		L.GROUP_ID   \
		FROM   \
		(   \
			SELECT    \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 1   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
		) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN   \
		CSP.CSP_SLA_GROUPSLA A ON L1.COMPANY_ID = A.COMPANY_ID   \
		WHERE L1.COMPANY_ID <> 3   \
	)   \
UNION   \
SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME    \
FROM    \
	CSP.CSP_SLA_GROUP G inner join    \
	CSP.CSP_SLA_USER_GROUP UG ON  G.GROUP_ID  = UG.GROUP_ID left outer join   \
	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join   \
	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID   \
WHERE    \
	G.TYPE  = 0    \
	AND G.RECORD_ACTIVE  = 'Y'   \
	AND G.CREATED_BY= $user_id$ \
    AND G.GROUP_ID IN   \
    (   \
		SELECT    \
		L.GROUP_ID   \
		FROM   \
		(   \
			SELECT    \
			K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY   \
			FROM   \
			(   \
				SELECT DISTINCT   \
				A.GROUP_ID,B.COMPANY_ID   \
				FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
				MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
			) K   \
			GROUP BY K.GROUP_ID   \
			HAVING COUNT(K.COMPANY_ID) = 1   \
		) L INNER JOIN   \
		(   \
			SELECT   \
			A.GROUP_ID,B.COMPANY_ID   \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN   \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID   \
		) L1 ON L.GROUP_ID = L1.GROUP_ID   \
        WHERE L1.COMPANY_ID = 3   \
	))H   \
    ORDER BY LOWER(H.GROUP_NAME)
    
    FETCH_MASTER_USER_GROUPS_BY_GROUPID_OR_GROUP_NAME_QUERY=select distinct mg.group_id,mg.group_name, \
   mu.first_name||' '||mu.last_name as name,mu.LOGIN_NAME,mu.user_id  \
   from CSP.CSP_SLA_GROUP mg \
   inner join CSP.CSP_SLA_USER_GROUP mug on mg.group_id=mug.group_id and  mg.group_name like '%$group_name$%' inner join MASTER.MASTER_USER mu on mu.user_id=mug.user_id \
   order by 1
  
FETCH_NOTIFY_SWOTHERFILE=SELECT  d.DOCUMENT_ID, d.DOC_NUMBER || '[' || d.STATUS || ']' as DOC_NUMBER \
    FROM CSP.CSP_DOCUMENT d, CSP.CSP_PRODUCT_DOCUMENTS pd, CSP.CSP_SWATTRIBUTES s, CSP.CSP_DOCUMENTAUDIENCES a \
    WHERE STATUS in ('Available', 'Archived') And pd.DOCUMENT_ID = d.DOCUMENT_ID And d.DOCUMENT_ID = s.DOCUMENT_ID \
    And d.AUDIENCE = a.AUDIENCE and a.AUDIENCE_ID in ('Public','Public / Non-Requestable') \
    And d.ISSOFTWARE = 'Y' And s.REQUIRE_SLA = 'N' And s.REQUIRE_TPL = 'N' And pd.PRODUCT_TAXID = :prodId \
    UNION SELECT  d.DOCUMENT_ID, d.DOC_NUMBER || '[' || d.STATUS || ']' as DOC_NUMBER FROM CSP.CSP_DOCUMENT d, \
    CSP.CSP_PRODUCT_DOCUMENTS pd, CSP.CSP_DOCUMENTAUDIENCES a WHERE STATUS in ('Available', 'Archived') \
    AND pd.DOCUMENT_ID = d.DOCUMENT_ID And d.AUDIENCE =a.AUDIENCE_ID and a.AUDIENCE in ('Public','Public / Non-Requestable') \
    And ISSOFTWARE = 'N' And pd.PRODUCT_TAXID = :prodId ORDER By DOC_NUMBER

FETCH_NOTIFY_GROUP_FOR_ADMIN = SELECT GROUP_ID,GROUP_NAME FROM ( SELECT * FROM ( \
	SELECT A.* ,MASTER.CHECKCOMPLETEORNOT(GROUP_ID) CNT FROM (SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
	FROM   CSP.CSP_SLA_GROUP G, CSP.CSP_SLA_USER_GROUP UG,CSP.CSP_SLA_GROUPOWNER GO,MASTER.MASTER_USER M,CSP.CSP_SLA_GROUPSLA S \
	WHERE G.GROUP_ID  = UG.GROUP_ID AND G.GROUP_ID=S.GROUP_ID(+) AND (G.GROUP_ID  = GO.GROUP_ID (+)) \
	AND (UG.USER_ID  = M.USER_ID ) AND(1=1 AND G.TYPE = 0 AND S.COMPANY_ID>0 AND    G.RECORD_ACTIVE  = 'Y' ))A ) WHERE CNT = 0 \
	UNION SELECT * FROM ( SELECT A.* ,MASTER.CHECKCOMPLETEORNOT(GROUP_ID) CNT FROM (SELECT DISTINCT \
	G.GROUP_ID,G.GROUP_NAME FROM   CSP.CSP_SLA_GROUP G,CSP.CSP_SLA_USER_GROUP UG,CSP.CSP_SLA_GROUPOWNER GO,MASTER.MASTER_USER M,CSP.CSP_SLA_GROUPSLA S \
	WHERE G.GROUP_ID  = UG.GROUP_ID AND G.GROUP_ID=S.GROUP_ID(+) AND (G.GROUP_ID  = GO.GROUP_ID (+)) AND (UG.USER_ID = M.USER_ID ) \
	AND(1 = 1 AND G.TYPE = 0 AND M.COMPANY_ID  = 3 AND S.COMPANY_ID>0 AND G.RECORD_ACTIVE  = 'Y'))A)WHERE CNT = 1) ORDER BY LOWER(GROUP_NAME)

FETCH_NOTIFY_GROUP_FOR_NON_ADMIN = SELECT DISTINCT g.GROUP_ID, g.GROUP_NAME FROM MASTER.MASTER_USER mu, CSP.CSP_SLA_GROUP g \
	LEFT OUTER JOIN CSP.CSP_SLA_USER_GROUP mug ON g.GROUP_ID = mug.GROUP_ID \
	LEFT OUTER JOIN CSP.CSP_SLA_GROUPOWNER GO ON g.GROUP_ID = GO.GROUP_ID \
	LEFT OUTER JOIN CSP.CSP_SLA_GROUPSLA s ON g.GROUP_ID = s.GROUP_ID \
	WHERE mu.USER_ID = mug.USER_ID AND g.RECORD_ACTIVE = 'Y' AND( \
	g.CREATED_BY =:userId OR GO.USER_ID =:userId OR mug.USER_ID =:userId ) \
	ORDER BY LOWER( GROUP_NAME )

FETCH_NOTIFY_PRODUCT_FOR_NON_ADMIN = SELECT ptax.PRODUCT_TAXID, ptax.PRODUCT_NAME FROM MASTER.MASTER_PRODUCT_TAXONOMY ptax \
WHERE ptax.RECORD_ACTIVE = 'Y' AND ptax.PRODUCT_TAXID IN(SELECT DISTINCT * FROM ( \
SELECT p.PRODUCT_TAXID FROM CSP.CSP_PRODUCT_PLMS p WHERE p.PLMID =:userId AND p.RECORD_ACTIVITY IN('Y','1') \
UNION SELECT pe.PRODUCT_TAXID FROM CSP.CSP_PRODUCT_ENGINEER pe WHERE pe.PRODUCT_ENGINEER_ID =:userId \
AND pe.ISACTIVE = 'Y' ) ) ORDER BY 2


GETALLPRODUCTCOMPANIES=SELECT 	distinct pt.PRODUCT_NAME,PT.PRODUCT_TAXID,mc.COMPANY_NAME, \
(select LISTAGG(SLA_ID, ',')   WITHIN GROUP (ORDER BY COMPANY_ID,PRODUCT_ID) AS salIds  FROM   CSP.CSP_PRODUCTSLAS \
where PRODUCT_ID=dc.PRODUCT_ID and COMPANY_ID=dc.COMPANY_ID GROUP BY COMPANY_ID,PRODUCT_ID) slaId \
FROM 	CSP.CSP_PRODUCTSLAS dc,MASTER.MASTER_COMPANY mc,MASTER.MASTER_PRODUCT_TAXONOMY pt WHERE	mc.COMPANY_ID =	dc.COMPANY_ID \
AND 	pt.PRODUCT_TAXID = 	dc.PRODUCT_ID AND mc.ISACTIVE	= 'Y' AND pt.RECORD_ACTIVE = 'Y'\


GETSELECTEDPRODUCTCOMPANIES=SELECT 	distinct pt.PRODUCT_NAME,PT.PRODUCT_TAXID,mc.COMPANY_NAME, \
(select LISTAGG(SLA_ID, ',')   WITHIN GROUP (ORDER BY COMPANY_ID,PRODUCT_ID) AS salIds  FROM   CSP.CSP_PRODUCTSLAS \
where PRODUCT_ID=dc.PRODUCT_ID and COMPANY_ID=dc.COMPANY_ID GROUP BY COMPANY_ID,PRODUCT_ID) slaId \
FROM 	CSP.CSP_PRODUCTSLAS dc,MASTER.MASTER_COMPANY mc,MASTER.MASTER_PRODUCT_TAXONOMY pt WHERE	mc.COMPANY_ID =	dc.COMPANY_ID \
AND 	pt.PRODUCT_TAXID = 	dc.PRODUCT_ID AND mc.ISACTIVE	= 'Y' AND pt.RECORD_ACTIVE = 'Y' AND dc.PRODUCT_ID IN( $PRODUCT_ID$ )\	


GETPRODUCTCOMPANYSLADETAILS=select  dcProdSLA.PRODUCT_ID,dcProdSLA.COMPANY_ID,dcProdSLA.SLA_ID FROM CSP.CSP_PRODUCTSLAS dcProdSLA, MASTER.MASTER_COMPANY mc \
where 1=1 and mc.COMPANY_NAME='$COMPANY_NAME$' and dcProdSLA.PRODUCT_ID IN ($PRODUCT_ID)$ \
and mc.COMPANY_ID=dcProdSLA.COMPANY_ID group by dcProdSLA.PRODUCT_ID,dcProdSLA.COMPANY_ID,dcProdSLA.SLA_ID\


GETCOMPANYSLADETAILS=select dcProdSLA.PRODUCT_ID,dcProdSLA.COMPANY_ID,dcProdSLA.SLA_ID from CSP.CSP_PRODUCTSLAS dcProdSLA ,MASTER.MASTER_COMPANY mc \
where mc.COMPANY_ID=dcProdSLA.COMPANY_ID and mc.COMPANY_NAME='$COMPANY_NAME$' group by dcProdSLA.PRODUCT_ID,dcProdSLA.COMPANY_ID,dcProdSLA.SLA_ID\


GETCOMPLETEDSLALISTBYCOMPANY_PRODUCT_SLA=SELECT SLAID,STATUS,to_char(CREATEDDATE,'MM/DD/YYYY') as createddate, \
to_char(EFFECTIVEDATE,'MM/DD/YYYY') as effectivedate,to_char(EXPIRATIONDATE,'MM/DD/YYYY') as expirationdate, \
COALESCE(SOFTWAREDESCRIPTION,' ') as SOFTWAREDESCRIPTION,case when EXPIRATIONDATE>=sysdate or EXPIRATIONDATE is null \
then 'N' else 'Y' end as isExpired,COMPLATEDDOCUMENTURL,AGREEMENTID, presetId FROM CSP.V_SLA WHERE STATUS  IN ('Completed','Completed Non-Standard') \
AND (COMPANYNAME='$company_name$' OR CHILDCOMPANY='$company_name$' ) GROUP BY SLAID,STATUS,CREATEDDATE,EFFECTIVEDATE,EXPIRATIONDATE,SOFTWAREDESCRIPTION, \
COMPLATEDDOCUMENTURL,AGREEMENTID, presetId \


GETINCOMPLETEDSLALISTBYCOMPANY_PRODUCT_SLA=SELECT SLAID,STATUS,to_char(CREATEDDATE,'MM/DD/YYYY') as createddate, \
to_char(EFFECTIVEDATE,'MM/DD/YYYY') as effectivedate,to_char(EXPIRATIONDATE,'MM/DD/YYYY') as expirationdate, \
COALESCE(SOFTWAREDESCRIPTION,' ') as SOFTWAREDESCRIPTION,case when EXPIRATIONDATE>=sysdate or EXPIRATIONDATE is null \
then 'N' else 'Y' end as isExpired,COMPLATEDDOCUMENTURL,AGREEMENTID, presetId FROM CSP.V_SLA WHERE STATUS NOT IN ('Completed','Completed Non-Standard') \
AND (COMPANYNAME='$company_name$' OR CHILDCOMPANY='$company_name$' ) GROUP BY SLAID,STATUS,CREATEDDATE,EFFECTIVEDATE,EXPIRATIONDATE,SOFTWAREDESCRIPTION, \
COMPLATEDDOCUMENTURL,AGREEMENTID, presetId  \

GET_EXISTING_DOC_WITH_REQUESTID =\
select distinct DOCUMENT_ID As DOCUMENTID ,( CASE WHEN (SELECT COUNT(*) from CSP.CSP_PERMISSIONS \
WHERE DOCUMENT_ID = D.DOCUMENT_ID AND \
USER_ID in (USER_IDS)) = USER_COUNT THEN 'Y' \
ELSE 'N' END ) AS ISACCESS \
FROM CSP.CSP_PERMISSIONS D  WHERE D.DOCUMENT_ID in (DOC_ID) \
ORDER BY 1

USER_PERMISSIONS_APPEND_REPLACE={CALL MASTER.USERPERMISSIONSAPPENDREPLACE(?, ?, ?, ?, ?, ?)}
   
ACCESS_PROFILES_APPEND_REPLACE={CALL CSP.ACCESSPROFILESAPPENDREPLACE(?, ?, ?, ?, ?)} 

CLEAR_USERPERMISSIONS_ARCHIVE_QUERY=INSERT INTO CSP.CSP_PERMISSIONARCHIVES(PERMISSION_ARCHIVE_ID,USER_ID,DOCUMENT_ID,CREATED_BY,CREATE_DATE,ARCHIVE_DATE,UPDATED_BY,PERMISSION_UPDATE_DATE) \
SELECT CSP.SEQ_CSP_PERMISSIONARCHIVES.NEXTVAL,USER_ID,DOCUMENT_ID,? ,SYSDATE,SYSDATE,?,UPDATE_DATE FROM CSP.CSP_PERMISSIONS WHERE DOCUMENT_ID= ?

CLEAR_ACCESSPROFILES_ARCHIVE_QUERY=INSERT INTO MASTER.MASTER_DOCUMENT_MAPPER_ARCHIVE \
SELECT MASTER.SEQ_MASTER_DOCUMENT_MAPPER.nextval,DOCUMENT_ID,ACCESS_PROFILE_ID,CREATED_BY,CREATE_DATE,SYSDATE,? FROM MASTER.MASTER_DOCUMENT_MAPPER WHERE DOCUMENT_ID = ?

FETCH_PENDING_REQUESTS_BY_SWREQUESTID=\
select distinct dcSWReq.sw_Request_Id, dcSWReq.REQUESTER_ID,dcSWReq.REQUEST_TYPE_ID,mc.company_name, \
to_char(Dcswreq.Request_date,'dd-MM-yyyy'),Dcswtypes.Request_type_name, \
Dcswreq.Sw_request_status_id,Dclsw.Sw_request_status_name, \
Dcswreq.Routed,Mu.First_name || Mu.Last_name "RequesterName", \
(Select Listagg(Sla_id,',') Within Group (Order By Sla_id) Cnt From CSP.CSP_Swrequestslas Where Sw_request_id=Dcswreq.Sw_request_id) As Slaids, \
Mu.login_name,nvl(dcSWReq.OTHER_INFORMATION,'-'),NVL(dcSWReq.cc_emails,' '),dcSWReq.PRODUCT_CATEGORY_ID \
from CSP.CSP_SWREQUESTS dcSWReq \
inner join master.master_company mc on dcSWReq.company_Id=mc.company_Id \
inner join CSP.CSP_SWREQUESTSLAS dcSWReqSLA on dcSWReqSLA.sw_Request_Id = dcSWReq.sw_Request_Id inner join CSP.CSP_L_SWREQUESTTYPES dcSWTypes on dcSWTypes.request_Type_Id=dcSWReq.request_Type_Id Inner \
Join MASTER.Master_User Mu On Mu.User_id=Dcswreq.Requester_id \
Inner Join CSP.CSP_L_Swrequeststatuses Dclsw On Dclsw.Sw_request_status_id =Dcswreq.Sw_request_status_id \
Where Dcswreq.Sw_request_status_id = 1 And Dcswreq.Request_type_id = :requestTypeId and Dcswreq.sw_request_id= :swRequestId

FETCH_REQUESTER_USER_DATA=\
select m.LOGIN_NAME ,m.FIRST_NAME ||' '  ||  m.LAST_NAME "NAME" from MASTER.MASTER_USER m \
  join CSP.CSP_SWREQUESTUSERS dcswuser on dcswuser.USER_ID = m.USER_ID where dcswuser.SW_REQUEST_ID = :swRequestId
  
FETCH_SOFTWARES_AND_APPROVERS_DETAILS_BY_EXISTING_SWREQUEST_ID=\
select \
	d.DOCUMENT_ID, \
	d.docnumber, \
	d.doctitle, \
	d.product, \
	d.approversid, \
	d.approvers, \
	d.approversemail, \
	d.applicablesla \
from  \
	(select \
		d.DOCUMENT_ID, \
		dp.listaggrslids as Product,NVL(d.DOC_NUMBER,' ') as docnumber, \
	 NVL(d.DOC_TITLE,' ') as doctitle,NVL(dsc.SWCATEGORY_DESC,' ') as SWCATEGORYDESC, \
		to_char(dsa.RELEASE_DATE,'MM/DD/YYYY')as RELEASEDATE,decode(dsa.REQUIRE_SLA,'Y' ,'BASLA','Generic') ApplicableSLA, \
		PLM.listaggruser as approvers,PLM.listaggruserid as approversid,PLM.listaggruseremail as approversemail, \
		dsa.RELEASE_DATE as rdate from CSP.CSP_DOCUMENT d , CSP.CSP_DOCTYPES dt , \
		CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc, \
		(select DOCUMENT_ID, \
			case  when instr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),',',1,10)>0 \
			then substr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),1,instr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),',',1,10)-1 )||'..more' \
			else listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME) end listaggrslids \
		from  \
			(SELECT dpd.DOCUMENT_ID,DPT.PRODUCT_NAME, ROW_NUMBER() OVER (PARTITION BY dpd.DOCUMENT_ID ORDER BY  DPT.PRODUCT_NAME ASC) AS rn \
			from CSP.CSP_PRODUCT_DOCUMENTS dpd,MASTER.MASTER_PRODUCT_TAXONOMY   DPT \
			where dPT.PRODUCT_TAXID=dpd.PRODUCT_TAXID  order by 1,2,3) \
		where rn<=15 group by DOCUMENT_ID) dp, \
		(select DOCUMENT_ID, \
			case when instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)>0 \
			then substr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),1,instr(listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME),',',1,10)-1 )||'..more' \
			else listagg(FIRST_NAME||' '||LAST_NAME,',') within group (order by FIRST_NAME||' '||LAST_NAME)  \
			end listaggruser,case when instr(listagg(USER_ID,',') within group (order by USER_ID),',',1,10)>0 \
			then substr(listagg(USER_ID,',') within group (order by USER_ID),1,instr(listagg(USER_ID,',') within group (order by USER_ID),',',1,10)-1 )||'..more' \
			else listagg(USER_ID,',') within group (order by USER_ID) end listaggruserid , \
			case when instr(listagg(LOGIN_NAME,',') within group (order by LOGIN_NAME),',',1,10)>0 \
			then substr(listagg(LOGIN_NAME,',') within group (order by LOGIN_NAME),1,instr(listagg(LOGIN_NAME,',') within group (order by LOGIN_NAME),',',1,10)-1 )||'..more' \
			else listagg(LOGIN_NAME,',') within group (order by LOGIN_NAME) end listaggruseremail \
		from \
			(SELECT DP.DOCUMENT_ID,mu.USER_ID,mu.FIRST_NAME,mu.LAST_NAME,mu.LOGIN_NAME, \
				ROW_NUMBER() OVER (PARTITION BY Dp.DOCUMENT_ID ORDER BY  mu.FIRST_NAME,mu.LAST_NAME ASC) AS rn \
			FROM \
				CSP.CSP_PRODUCT_DOCUMENTS DP,MASTER.MASTER_PRODUCT_TAXONOMY DPT,CSP.CSP_PRODUCT_PLMS dplm, \
				MASTER.MASTER_USER mu \
			WHERE 1=1 \
				AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
				and dPT.PRODUCT_TAXID=dplm.PRODUCT_TAXID \
				and dplm.PLMID=mu.USER_ID \
				AND CASE WHEN DPLM.NOTIFY_ALTPLM = 'Y' AND DPLM.ISPRIMARY  LIKE 'Y' \
                         THEN 1 \
                         WHEN DPLM.NOTIFY_ALTPLM = 'Y' AND DPLM.ISPRIMARY  LIKE 'N' \
                         THEN 1 \
                         WHEN DPLM.NOTIFY_ALTPLM = 'N' AND DPLM.ISPRIMARY  LIKE 'Y' \
                         THEN 1 \
                         ELSE 0 \
                    END = 1 \
				and dplm.RECORD_ACTIVITY   ='Y' \
				and exists (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and PRODUCT_TAXID in (select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID)) \
			group by Dp.DOCUMENT_ID,mu.USER_ID,mu.FIRST_NAME,mu.LAST_NAME,mu.LOGIN_NAME order by 1,2,3) \
		where rn<=15 \
		group by DOCUMENT_ID)  PLM \
	where 1=1 \
        and d.DOCUMENT_ID=dsa.DOCUMENT_ID \
        AND d.DOCUMENT_ID=dp.DOCUMENT_ID \
        AND d.DOCUMENT_ID=plm.DOCUMENT_ID \
		and dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID \
        and d.DOCTYPE_ID=dt.DOCTYPE_ID  \
		and d.ISSOFTWARE='Y' \
		and d.AUDIENCE not in (select AUDIENCE_ID from CSP.CSP_DOCUMENTAUDIENCES where AUDIENCE ='Public / Non-Requestable') \
		and lower(d.STATUS)='available' \
		and dsa.RELEASE_DATE is not null \
	union all \
	select d.DOCUMENT_ID,dp.listaggrslids as Product,NVL(d.DOC_NUMBER,' ') as docnumber, \
		NVL(d.DOC_TITLE,' ') as doctitle, \
		NVL(dsc.SWCATEGORY_DESC,' ') as SWCATEGORYDESC, \
		to_char(dsa.RELEASE_DATE,'MM/DD/YYYY')as RELEASEDATE, \
		decode(dsa.REQUIRE_SLA,'Y' ,'BASLA','Generic') ApplicableSLA, \
        apr.approvers as approvers, \
		to_char(apr.userid) as approversid, \
		apr.approversemail as  approversemail, \
		dsa.RELEASE_DATE as rdate \
	from \
        CSP.CSP_DOCUMENT d , \
		CSP.CSP_DOCTYPES dt , \
		CSP.CSP_SWATTRIBUTES dsa, \
		CSP.CSP_SDS_L_SWCATEGORIES dsc, \
		(select DOCUMENT_ID, \
			case  when instr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),',',1,10)>0 \
			then substr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),1,instr(listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME),',',1,10)-1 )||'..more' \
			else listagg(PRODUCT_NAME,',<br/>') within group (order by PRODUCT_NAME) \
			end listaggrslids \
		from  \
			(SELECT dpd.DOCUMENT_ID,DPT.PRODUCT_NAME, \
				ROW_NUMBER() OVER (PARTITION BY dpd.DOCUMENT_ID ORDER BY  DPT.PRODUCT_NAME ASC) AS rn \
			from  \
				CSP.CSP_PRODUCT_DOCUMENTS dpd, \
				MASTER.MASTER_PRODUCT_TAXONOMY DPT \
			where  \
				dPT.PRODUCT_TAXID=dpd.PRODUCT_TAXID \
			order by 1,2,3) \
		where rn<=15 group by DOCUMENT_ID) dp, \
		(select  \
			Dp.DOCUMENT_ID,mu.USER_ID as userid,mu.FIRST_NAME||' '||mu.LAST_NAME as approvers ,mu.LOGIN_NAME approversemail \
		from \
			CSP.CSP_PRODUCT_DOCUMENTS DP, \
			MASTER.MASTER_PRODUCT_TAXONOMY  DPT, \
			CSP.CSP_DOCUMENTAPPROVER  da, \
			MASTER.MASTER_USER mu \
		where  1=1 \
			AND DP.PRODUCT_TAXID=dPT.PRODUCT_TAXID \
			and not exists (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where  SW_REQUIRE_APPROVAL='Y' and PRODUCT_TAXID in (select PRODUCT_TAXID from CSP.CSP_PRODUCT_DOCUMENTS where DOCUMENT_ID=DP.DOCUMENT_ID )) \
			and dp.DOCUMENT_ID=da.DOCUMENT_ID \
			and da.APPROVER_ID=mu.USER_ID \
		group by Dp.DOCUMENT_ID ,mu.USER_ID,mu.FIRST_NAME||' '||mu.LAST_NAME,mu.LOGIN_NAME) apr \
	where 1=1 and d.DOCUMENT_ID=dsa.DOCUMENT_ID \
        AND d.DOCUMENT_ID=dp.DOCUMENT_ID \
        and d.DOCUMENT_ID=apr.DOCUMENT_ID \
		and dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID \
        and  d.DOCTYPE_ID=dt.DOCTYPE_ID  \
        and d.ISSOFTWARE='Y' \
		and d.AUDIENCE not in (select AUDIENCE_ID from CSP.CSP_DOCUMENTAUDIENCES where AUDIENCE ='Public / Non-Requestable') \
		and lower(d.STATUS)='available' \
		and dsa.RELEASE_DATE is not null) d \
where d.DOCUMENT_ID in(select DOCUMENT_ID from CSP.CSP_REQUESTSWS  where SW_REQUEST_ID = (:swRequestId) )

FETCH_SOFTWARE_REQUESTS=\
select distinct dcSWReq.sw_Request_Id, dcSWReq.contact_first_name, dcSWReq.contact_last_name, dcSWReq.contact_email, \
            nvl(dcSWReq.other_information,'-'),dcSWReq.cc_emails,mu.first_name,mu.last_name,dcSWTypes.request_Type_Name, \
             coalesce((select listagg(sla_Id,',') within group (order by sla_Id) cnt from CSP.CSP_SWREQUESTSLAS where sw_Request_Id=dcSWReq.sw_Request_Id),'-') as slaIds, \
            (select count(sw_request_id) from CSP.CSP_SWREQUESTUSERS where sw_Request_Id= dcSWReq.sw_Request_Id) as users, \
            (select count(sw_request_Id) from CSP.CSP_REQUESTSWS where sw_Request_Id=dcSWReq.sw_Request_Id) as softwares, \
            (select count(sw_request_Id) from CSP.CSP_REQUESTSWS where sw_Request_Id=dcSWReq.sw_Request_Id and sw_approval_status_id=2) as pending, \
            (select count(sw_request_Id) from CSP.CSP_REQUESTSWS where sw_Request_Id=dcSWReq.sw_Request_Id and sw_approval_status_id=4) as granted, \
            (select count(sw_request_Id) from CSP.CSP_REQUESTSWS where sw_Request_Id=dcSWReq.sw_Request_Id and sw_approval_status_id=3) as declined, \
            Mc.Company_name, To_Char(Dcswreq.Request_date,'dd-MM-yyyy'),Dcswreq.Contact_first_name ||' '|| Dcswreq.Contact_last_name "Requester Name", \
            nvl(Dcswreq.PRODUCT_CATEGORY_ID,0),nvl(Dcswreq.Product_id,0),Nvl(Dcswreq.Custom_encrypt,'-'),Nvl(Dcswreq.Custom_instructions,'-'),Nvl(req.COMPETITOR,'-'),Nvl(req.EXPECTED_REVENUE,'-'),nvl(mu.JOB_TITLE,'-'),nvl(req.QUALIFYING_INFORMATION,'-') \
            from CSP.CSP_SWREQUESTS dcSWReq \
            Inner Join master.Master_Company Mc On Dcswreq.Company_id=Mc.Company_id \
            left outer join CSP.CSP_REQUESTS req on req.REQUEST_ID = dcSWReq.sw_Request_Id \
            left outer join CSP.CSP_SWREQUESTSLAS dcSWReqSLA on dcSWReqSLA.sw_Request_Id = dcSWReq.sw_Request_Id inner \
            join CSP.CSP_L_SWREQUESTTYPES dcSWTypes on dcSWTypes.request_Type_Id=dcSWReq.request_Type_Id \
            inner join master.master_user mu on mu.user_Id=dcSWReq.requester_Id \
            left outer join CSP.CSP_REQUESTSWS dcReqts on dcReqts.sw_Request_Id=dcSWReq.sw_Request_Id \
        left outer join CSP.CSP_product_documents dcProdDoc on dcProdDoc.document_Id=dcReqts.document_Id \
        Left Outer Join CSP.CSP_Product_plms Dcprodeng On Dcprodeng.Product_taxid= Dcproddoc.Product_taxid Where Dcswreq.Sw_request_status_id In('0','1') \
             and dcSWReq.sw_Request_Id = :swRequestId



GETCOMPLETEDSLACOMPANIESLIST=SELECT  VS.COMPANYID,VS.COMPANYNAME FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M WHERE M.COMPANY_ID= VS.COMPANYID AND M.ISACTIVE='Y' AND M.VERIFIED='Y' \
GROUP BY VS.COMPANYID,VS.COMPANYNAME UNION SELECT  VS.CHILDCOMPANYID,VS.CHILDCOMPANY FROM CSP.V_SLA VS,MASTER.MASTER_COMPANY M \
WHERE M.COMPANY_ID= VS.CHILDCOMPANYID AND M.ISACTIVE='Y' AND M.VERIFIED='Y' GROUP BY VS.CHILDCOMPANYID,VS.CHILDCOMPANY ORDER BY 2\

##############################################################
#tree related queries
   
GET_TREE_DATA_PUBLIC_REQ_DOC_PROD_TREE_SQL=SELECT mpt.PRODUCT_TAXID AS PRODUCT_TAXID, \
  mpt.PRODUCT_NAME       AS PRODUCT_NAME, \
  mpt.PRODUCT_PART_TAXID AS PRODUCT_PART_TAXID, \
  mpt.HIER_LVL           AS HIER_LVL, \
  mpt.PROD_DESC          AS PROD_DESC \
FROM MASTER.MASTER_PRODUCT_TAXONOMY mpt \
WHERE mpt.RECORD_ACTIVE      ='Y' \
AND mpt.IS_RESTRICTED        ='N' \
AND (mpt.PRODUCT_PART_TAXID IS NOT NULL) \
AND (mpt.HIER_LVL           IS NOT NULL) \
OR mpt.hier_lvl IN (1, 2, 3) \
AND mpt.product_taxid in ( \
    SELECT MPT.PRODUCT_TAXID \
    FROM MASTER.MASTER_PRODUCT_TAXONOMY MPT \
    JOIN CSP.CSP_PRODUCT_DOCUMENTS PD ON MPT.PRODUCT_TAXID = PD.PRODUCT_TAXID \
    JOIN CSP.CSP_DOCUMENT D ON PD.DOCUMENT_ID = D.DOCUMENT_ID \
          JOIN CSP.CSP_DOCUMENTAUDIENCES DA ON DA.AUDIENCE_ID = D.AUDIENCE \
    WHERE 1 = 1 \
    AND UPPER(D.STATUS) = UPPER('AVAILABLE') \
    AND DA.AUDIENCE IN ('Public', 'Public / Non-Requestable') \
          AND D.ISSOFTWARE='N' \
    AND MPT.RECORD_ACTIVE = 'Y' \
    AND MPT.PROD_CATEGORY='PRODUCT' \
    AND  D.DOCUMENT_ID NOT IN (SELECT  DOCUMENT_ID FROM CSP.CSP_SWATTRIBUTES ) \
    GROUP BY MPT.PRODUCT_TAXID ,MPT.PRODUCT_NAME ,MPT.PRODUCT_PART_TAXID,MPT.HIER_LVL,MPT.PROD_DESC \
) \
order by mpt.PRODUCT_NAME


#BASE_HQL_TO_GET_TREE_DATA=select pt.productTaxId, pt.prodName, pt.prodParentId, pt.hierLevel, pt.prodDescription from ProductTaxonomy pt where pt.recordActive ='Y' and pt.isRestricted = 'N' $PRODUCTID$ and pt.prodParentId is not null and pt.hierLevel is not null OR pt.hierLevel IN (1, 2, 3) order by pt.prodName
BASE_HQL_TO_GET_TREE_DATA=SELECT DISTINCT \
PT.PRODUCT_TAXID, PT.PRODUCT_NAME, PT.PRODUCT_PART_TAXID,PT.HIER_LVL,PT.PROD_DESC \
FROM MASTER.MASTER_PRODUCT_TAXONOMY PT LEFT JOIN \
( \
   $PRODUCTID$ \
) A ON PT.PRODUCT_TAXID = A.PRODUCT_TAXID \
WHERE \
PT.RECORD_ACTIVE = 'Y' \
AND PT.IS_RESTRICTED = 'N' \
AND PT.PRODUCT_PART_TAXID IS NOT NULL \
AND PT.HIER_LVL IS NOT NULL \
CONNECT BY NOCYCLE PRIOR PT.PRODUCT_PART_TAXID = PT.PRODUCT_TAXID \
START WITH PT.PRODUCT_TAXID = A.PRODUCT_TAXID \


HQL_QUERY_TO_GET_ROLE=select roleName from MasterRoles where roleId in(select roleId from MasterUserRole where userId = :loggedInUserId)

ADMIN_ROLE=Admin
PLM_ROLE=PLM
ENGINEER_ROLE=Engineer   
######################################################
SEARCH_DOCUMENT_PERMISSION_QUERY=SELECT DISTINCT M.FIRST_NAME AS FIRSTNAME, M.FIRST_NAME || ' ' || M.LAST_NAME AS USERNAME, C.COMPANY_NAME AS COMPANY, M.LOGIN_NAME AS EMAIL, \
DECODE( M.CITY, NULL, ' ', M.CITY || ', ' )|| DECODE( M.STATE_NAME, NULL, ' ', M.STATE_NAME || ', ' )|| DECODE( COUNTRY.COUNTRY_NAME, NULL, ' ', COUNTRY.COUNTRY_NAME ) AS LOCATION, \
M.USER_ID AS USERID, P.UPDATED_BY AS UPDATEDBY, TO_CHAR(P.UPDATE_DATE, 'MM/DD/YYYY' ) AS UPDATEDON, CASE WHEN PGP.USER_PGPKEY_ID IS NULL THEN 'N' ELSE 'Y' END AS userPGPKEY, \
M.ACTIVE_FLAG, CASE WHEN P.PERMISSION_FLAG IS NULL THEN 'N' ELSE P.PERMISSION_FLAG END AS Permission FROM \
MASTER.MASTER_USER M LEFT JOIN ( SELECT K.USER_ID, K.DOCUMENT_ID,(SELECT FIRST_NAME || ' ' || LAST_NAME FROM MASTER.MASTER_USER WHERE USER_ID =K.UPDATED_BY) \
 AS UPDATED_BY, K.UPDATE_DATE, 'Y' AS PERMISSION_FLAG \
    FROM CSP.CSP_PERMISSIONS K WHERE K.DOCUMENT_ID = :documentId ) P ON M.USER_ID = P.USER_ID INNER JOIN \
MASTER.MASTER_COMPANY C ON M.COMPANY_ID = C.COMPANY_ID LEFT JOIN ( SELECT DISTINCT \
    A.USER_ID, B.GROUP_ID,D.ROLE_ID FROM MASTER.MASTER_USER A INNER JOIN \
    CSP.CSP_SLA_USER_GROUP B ON A.USER_ID = B.USER_ID INNER JOIN \
    MASTER.MASTER_USER_ROLE C ON A.USER_ID = C.USER_ID INNER JOIN \
    MASTER.MASTER_ROLES D ON C.ROLE_ID = D.ROLE_ID  \
) MUG ON M.USER_ID = MUG.USER_ID LEFT JOIN \
MASTER.MASTER_COUNTRY COUNTRY ON M.COUNTRY_ID = COUNTRY.COUNTRY_ID $join$ \
( SELECT T.USER_ID, T.USER_PGPKEY_ID FROM CSP.CSP_USER_PGP_KEYS T WHERE T.ACTIVE = 'Y' AND T.FILESTREAM IS NOT NULL ) PGP ON M.USER_ID = PGP.USER_ID \
WHERE 1=1 $roleId$ 

ADD_REMOVE_USER_PERMISSIONS={CALL CSP.ADDREMOVEUSERPERMISSIONS(?, ?, ?, ?, ?)}

GET_DOCUMENT_AUDIENCE=SELECT DISTINCT concat(MU.firstName, ' ', MU.lastName) FROM CSPDocument CD, DocumentAudiences DDA ,CSPDocumentAudienceCompanies DDAC , MasterUser MU WHERE CD.audience = DDA.audienceId and DDA.audienceId = DDAC.audience.audienceId and MU.company.companyId = DDAC.masterCompany.companyId and DDA.audience NOT IN(:audience) AND CD.documentId = :documentId AND MU.id IN (:userId)

GET_DOC_HISTORY_STATUS=select TO_CHAR(ReqHis.CREATE_DATE,'MM/DD/YYYY HH:MI AM') AS times, SW_REQUEST_ID,\
        ACTION_NAME, nvl(reqStat.REQUEST_STATUS_NAME,'-') AS StartStatus,\
        nvl(reqStat1.REQUEST_STATUS_NAME,'-') AS EndStatus,\
        nvl(COMMENTS,'-') AS Comments,\
        mu.FIRST_NAME || ' ' || mu.LAST_NAME as Names from CSP.CSP_SWREQUESTHISTORIES ReqHis \
		inner join MASTER.MASTER_USER mu on mu.USER_ID=ReqHis.CREATED_BY \
		left join CSP.CSP_RequestStatuses reqStat on reqStat.REQUEST_STATUS_ID=ReqHis.START_STATUS \
		left join CSP.CSP_RequestStatuses reqStat1 on reqStat1.REQUEST_STATUS_ID=ReqHis.END_STATUS \
		where ReqHis.SW_REQUEST_ID=? order by ReqHis.CREATE_DATE desc


########################################################
#Software/Document Search Related Queries
########################################################

SEARCH_SOFTWARE_USER_PERMISSIONS= SELECT DISTINCT \
D.DOCUMENT_ID AS DOCUMENT_ID, \
D.DOCFILE_NAME AS NAME, \
PT.PRODUCT_NAME AS PRODUCT_NAME, \
DT.DOCTYPE_NAME AS DOCTYPE_NAME , \
TO_CHAR(D.DOCRELEASE_DATE,'MM/DD/YYYY') AS RELEASED,  \
SWCAT.SWCATEGORY_DESC AS CATEGORY \
FROM CSP.CSP_DOCUMENT D INNER JOIN \
CSP.CSP_DOCUMENTAUDIENCES A ON D.AUDIENCE = A.AUDIENCE_ID INNER JOIN \
CSP.CSP_DOCTYPES DT ON D.DOCTYPE_ID = DT.DOCTYPE_ID INNER JOIN \
CSP.CSP_PRODUCT_DOCUMENTS PD ON D.DOCUMENT_ID = PD.DOCUMENT_ID INNER JOIN \
MASTER.MASTER_PRODUCT_TAXONOMY PT ON PD.PRODUCT_TAXID = PT.PRODUCT_TAXID INNER JOIN \
CSP.CSP_SWATTRIBUTES S ON D.DOCUMENT_ID = S.DOCUMENT_ID INNER JOIN \
CSP.CSP_SDS_L_SWCATEGORIES SWCAT ON S.SWCATEGORY_ID = SWCAT.SWCATEGORY_ID \
WHERE \
D.STATUS IN ('Available', 'Archived') \
AND D.DECRYPTPGP = 'N' \
AND A.AUDIENCE IN ('Public','Public / Non-Requestable') \
$PRODUCT_TAXID$ \
AND S.REQUIRE_SLA = 'N' \
AND S.REQUIRE_TPL = 'N' \
AND D.DOCUMENT_ID NOT IN (SELECT DOCUMENT_ID FROM MASTER.MASTER_DOCUMENT_MAPPER) \
AND D.DOCUMENT_ID NOT IN \
( \
    SELECT DUG.DOCUMENT_ID \
    FROM CSP.CSP_DOCUMENT_USER_GROUP DUG INNER JOIN \
    CSP.CSP_SLA_USER_GROUP SUG ON DUG.GROUP_ID = SUG.GROUP_ID \
    AND SUG.USER_ID <> 1  \
    AND SUG.USER_ID = $USER_ID$ \
) \
	$FILE_NAME$ \
	$TYPE$ \
	$APPLICABLE_SLA$ \

    
SEARCH_SOFTWARE_DOC_USER_PERMISSIONS= select document_id, NAME, PRODUCT_NAME, DOCTYPE_NAME, TO_CHAR(released, 'MM/DD/YYYY') as released, CATEGORY from \
 ( \
SELECT  d.document_id as document_id, d.docfile_name as NAME, pt.PRODUCT_NAME as PRODUCT_NAME, dt.DOCTYPE_NAME as DOCTYPE_NAME , d.docrelease_date AS released, swcat.SWCATEGORY_DESC as CATEGORY \
    FROM csp.CSP_DOCUMENT d \
    ,csp.CSP_PRODUCT_DOCUMENTS pd \
    ,csp.CSP_SWATTRIBUTES s  \
    ,csp.CSP_DOCUMENTAUDIENCES a \
    ,csp.CSP_DOCTYPES  dt  \
    ,master.master_product_taxonomy pt \
    ,CSP.CSP_SDS_L_SWCATEGORIES swcat \
    WHERE d.Status in ('Available', 'Archived') \
    And pd.document_id = d.document_id  \
    And d.document_id = s.document_id  \
    And d.audience =a.AUDIENCE_ID  \
    and a.AUDIENCE in ('Public','Public / Non-Requestable') \
    AND d.decryptpgp = 'N'  \
    And s.Require_SLA = 'N'  \
    And s.Require_TPL = 'N'  \
    and dt.doctype_id = d.doctype_id  \
    AND pd.product_taxid = pt.product_taxid \
    AND d.Document_Id NOT IN  \
	(SELECT Document_Id \
	FROM MASTER.MASTER_DOCUMENT_MAPPER \
	) AND d.Document_Id NOT IN  \
  ( \
    select distinct dug.document_id from csp.CSP_DOCUMENT_USER_GROUP dug \
    inner join csp.csp_sla_user_group sug on dug.group_id = sug.group_id \
    AND sug.group_id not in (select sug1.group_id from csp.csp_sla_user_group sug1 where user_id = $USER_ID$ ) \
  ) \
  AND swcat.SWCATEGORY_ID = s.SWCATEGORY_ID \
	$PRODUCT_TAXID$ \
	$FILE_NAME$ \
	$TYPE$ \
	$APPLICABLE_SLA$ \
    UNION \
    SELECT  d.document_id as document_id, d.DOC_NUMBER as NAME, pt.PRODUCT_NAME as PRODUCT_NAME, dt.DOCTYPE_NAME as DOCTYPE_NAME, d.docrelease_date as released, d.DOC_CATEGORY as CATEGORY \
    FROM csp.CSP_DOCUMENT d  \
    ,csp.CSP_PRODUCT_DOCUMENTS pd \
    ,csp.CSP_DOCUMENTAUDIENCES a  \
    ,csp.CSP_DOCTYPES  dt  \
    ,master.master_product_taxonomy pt \
    WHERE Status in ('Available', 'Archived') \
    AND pd.document_id = d.document_id \
    And d.audience =a.AUDIENCE_ID  \
    and a.AUDIENCE in ('Public','Public / Non-Requestable') \
    And IsSoftware = 'N' \
	AND d.document_id NOT IN (SELECT document_id FROM CSP.CSP_SWATTRIBUTES) \
    and dt.doctype_id = d.doctype_id  \
    AND pd.product_taxid = pt.product_taxid  \
	AND d.Document_Id NOT IN \
	(SELECT Document_Id \
	FROM MASTER.MASTER_DOCUMENT_MAPPER \
	) \
	$PRODUCT_TAXID$ ) \


SEARCH_SOFTWARE_ACCESS_PROFILE=SELECT d.Document_Id,  d.Doc_Number  || '['  || d.Status  || ']' AS Doc_Number,  d.DOC_TITLE,  pt.PRODUCT_NAME,  dt.DOCTYPE_NAME,  d.docrelease_date \
	FROM csp.csp_Document d , \
	  csp.CSP_PRODUCT_DOCUMENTS pd , \
	  csp.csp_SWAttributes s , \
	  csp.csp_DOCUMENTAUDIENCES a , \
	  csp.csp_SWAttributes sw , \
	  master.MASTER_DOCUMENT_MAPPER mdm , \
	  csp.CSP_DOCTYPES dt , \
	  master.master_product_taxonomy pt \
	WHERE d.Status    IN ('Available', 'Archived') \
	AND pd.Document_Id = d.Document_Id \
	AND d.Document_Id  = mdm.Document_Id \
	AND d.Document_Id  = s.Document_Id \
	AND d.audience     = a.AUDIENCE_ID \
	AND a.AUDIENCE   IN ('Public','Public / Non-Requestable') \
	AND d.IsSoftware  = 'Y' \
	AND s.Require_SLA = 'N' \
	AND s.Require_TPL = 'N' \
	AND d.Document_Id    = sw.Document_Id \
	AND dt.doctype_id    = d.doctype_id \
	AND pd.product_taxid = pt.product_taxid \
	$PRODDOC-PRODUCT-TAXID$ \
    $PRODTAX-PRODUCT-TAXID$ \
    $DOC-NUMBER$ \
    $DOCTYPE$ \
    $DOCTITLE$ \
	UNION \
	SELECT d.Document_Id,	  d.Doc_Number	  || '['	  || d.Status	  || ']' AS Doc_Number,	  d.DOC_TITLE,	  pt.PRODUCT_NAME,	  dt.DOCTYPE_NAME,	  d.docrelease_date \
	FROM csp.csp_Document d , \
	  csp.CSP_PRODUCT_DOCUMENTS pd , \
	  csp.csp_DOCUMENTAUDIENCES a , \
	  csp.csp_SWAttributes s , \
	  master.MASTER_DOCUMENT_MAPPER mdm , \
	  csp.CSP_DOCTYPES dt , \
	  master.master_product_taxonomy pt \
	WHERE d.Status    IN ('Available', 'Archived') \
	AND pd.Document_Id = d.Document_Id \
	AND d.audience     = a.AUDIENCE_ID \
	AND a.AUDIENCE    IN ('Public','Public / Non-Requestable') \
	AND d.High_ConfWM  = 'N' \
	AND d.DecryptPGP   = 'N' \
	AND s.Require_SLA  = 'N' \
	AND (d.IsSoftware  = 'Y') \
	AND d.Document_Id    = s.Document_Id \
	AND s.Require_TPL    = 'N' \
	AND dt.doctype_id    = d.doctype_id \
	AND pd.product_taxid = pt.product_taxid \
	$PRODDOC-PRODUCT-TAXID$ \
    $PRODTAX-PRODUCT-TAXID$ \
    $DOC-NUMBER$ \
    $DOCTYPE$ \
    $DOCTITLE$ \
	UNION \
	SELECT d.Document_Id,	  d.Doc_Number	  || '['	  || d.Status	  || ']' AS Doc_Number,	  d.DOC_TITLE,	  pt.PRODUCT_NAME,	  dt.DOCTYPE_NAME,	  d.docrelease_date \
	FROM csp.csp_Document d , \
	  csp.CSP_PRODUCT_DOCUMENTS pd , \
	  csp.csp_DOCUMENTAUDIENCES a , \
	  csp.csp_SWAttributes s , \
	  master.MASTER_DOCUMENT_MAPPER mdm , \
	  csp.CSP_DOCTYPES dt , \
	  master.master_product_taxonomy pt \
	WHERE d.Status    IN ('Available', 'Archived') \
	AND pd.Document_Id = d.Document_Id \
	AND d.audience     = a.AUDIENCE_ID \
	AND a.AUDIENCE    IN ('Public','Public / Non-Requestable') \
	AND d.DocType_Id  IN \
	  (SELECT DocType_Id \
	  FROM csp.CSP_DOCTYPES \
	  WHERE DocType_Name IN ('Software', 'SDK Software') \
	  ) \
	AND (d.IsSoftware = 'Y') \
	AND s.Require_SLA = 'N' \
	AND d.Document_Id    = s.Document_Id \
	AND s.Require_TPL    = 'N' \
	AND dt.doctype_id    = d.doctype_id \
	AND pd.product_taxid = pt.product_taxid \
	$PRODDOC-PRODUCT-TAXID$ \
    $PRODTAX-PRODUCT-TAXID$ \
    $DOC-NUMBER$ \
    $DOCTYPE$ \
    $DOCTITLE$ \
	UNION \
	SELECT d.Document_Id,	  d.Doc_Number	  || '['	  || d.Status	  || ']' AS Doc_Number,	  d.DOC_TITLE,	  pt.PRODUCT_NAME,	  dt.DOCTYPE_NAME,	  d.docrelease_date \
	FROM csp.csp_Document d , \
	  csp.CSP_PRODUCT_DOCUMENTS pd , \
	  csp.csp_DOCUMENTAUDIENCES a , \
	  csp.csp_SWAttributes s, \
	  csp.CSP_DOCTYPES dt ,  \
	  master.master_product_taxonomy pt \
	WHERE d.Status    IN ('Available', 'Archived') \
	AND pd.Document_Id = d.Document_Id \
	AND d.audience     = a.AUDIENCE_ID \
	AND a.AUDIENCE    IN ('Public','Public / Non-Requestable') \
	AND d.DocType_Id  IN \
	  (SELECT DocType_Id \
	  FROM csp.CSP_DOCTYPES \
	  WHERE DocType_Name IN ('Software', 'SDK Software') \
	  ) \
	AND (d.IsSoftware = 'Y') \
	AND s.Require_SLA = 'N' \
	AND d.Document_Id      = s.Document_Id \
	AND s.Require_TPL      = 'N' \
	AND d.Document_Id NOT IN \
	  (SELECT Document_Id \
	  FROM csp.csp_permissions per \
	  WHERE d.Document_Id = per.Document_Id \
	  ) \
	AND dt.doctype_id    = d.doctype_id \
	AND pd.product_taxid = pt.product_taxid \
	$PRODDOC-PRODUCT-TAXID$ \
    $PRODTAX-PRODUCT-TAXID$ \
    $DOC-NUMBER$ \
    $DOCTYPE$ \
    $DOCTITLE$ \
	
	
SEARCH_SOFTWARE_DOC_ACCESS_PROFILE=SELECT d.document_id, \
  d.Doc_Number \
  || '[' \
  || d.Status \
  || ']' AS Doc_Number, \
  d.DOC_TITLE, \
  pt.PRODUCT_NAME, \
  dt.DOCTYPE_NAME, \
  d.docrelease_date \
FROM csp.csp_Document d , \
  csp.CSP_PRODUCT_DOCUMENTS pd , \
  csp.csp_SWAttributes s , \
  csp.csp_DOCUMENTAUDIENCES a , \
  master.MASTER_DOCUMENT_MAPPER mdm , \
  csp.CSP_DOCTYPES dt , \
  master.master_product_taxonomy pt \
WHERE Status        IN ('Available', 'Archived') \
AND pd.document_id   = d.document_id \
AND d.Document_Id    = s.Document_Id \
AND d.audience       =a.AUDIENCE_ID \
AND a.AUDIENCE      IN ('Public','Public / Non-Requestable') \
AND IsSoftware       = 'Y' \
AND Require_SLA      = 'N' \
AND Require_TPL      = 'N' \
AND dt.doctype_id    = d.doctype_id \
AND pd.product_taxid = pt.product_taxid \
$PRODDOC-PRODUCT-TAXID$ \
$PRODTAX-PRODUCT-TAXID$ \
$DOC-NUMBER$ \
$DOCTYPE$ \
$DOCTITLE$ \
UNION \
SELECT d.document_id, \
  d.Doc_Number \
  || '[' \
  || d.Status \
  || ']' AS Doc_Number, \
  d.DOC_TITLE, \
  pt.PRODUCT_NAME, \
  dt.DOCTYPE_NAME, \
  d.docrelease_date \
FROM csp.csp_Document d , \
  CSP.CSP_PRODUCT_DOCUMENTS pd , \
  csp.csp_DOCUMENTAUDIENCES a , \
  master.MASTER_DOCUMENT_MAPPER mdm , \
  csp.CSP_DOCTYPES dt , \
  master.master_product_taxonomy pt \
WHERE Status        IN ('Available', 'Archived') \
AND pd.document_id   = d.document_id \
AND d.audience       =a.AUDIENCE_ID \
AND a.AUDIENCE      IN ('Public','Public / Non-Requestable') \
AND IsSoftware       = 'N' \
AND dt.doctype_id    = d.doctype_id \
AND pd.product_taxid = pt.product_taxid \
$PRODDOC-PRODUCT-TAXID$ \
$PRODTAX-PRODUCT-TAXID$ \
$DOC-NUMBER$ \
$DOCTYPE$ \
$DOCTITLE$ \
UNION \
SELECT d.document_id, \
  d.Doc_Number \
  || '[' \
  || d.Status \
  || ']' AS Doc_Number, \
  d.DOC_TITLE, \
  pt.PRODUCT_NAME, \
  dt.DOCTYPE_NAME, \
  d.docrelease_date \
FROM csp.csp_Document d , \
  csp.CSP_PRODUCT_DOCUMENTS pd , \
  csp.csp_SWAttributes s , \
  csp.csp_DOCUMENTAUDIENCES a , \
  master.MASTER_DOCUMENT_MAPPER mdm , \
  csp.CSP_DOCTYPES dt , \
  master.master_product_taxonomy pt \
WHERE Status              IN ('Available', 'Archived') \
AND pd.document_id         = d.document_id \
AND mdm.access_profile_id IS NOT NULL \
AND d.Document_Id          = s.Document_Id \
AND d.audience             =a.AUDIENCE_ID \
AND a.AUDIENCE            IN ('Public','Public / Non-Requestable') \
AND IsSoftware             = 'Y' \
AND Require_SLA            = 'N' \
AND Require_TPL            = 'N' \
AND d.document_id NOT IN \
  (SELECT document_id \
  FROM csp.csp_permissions per \
  WHERE d.document_id = per.document_id \
  ) \
AND dt.doctype_id    = d.doctype_id \
AND pd.product_taxid = pt.product_taxid \
$PRODDOC-PRODUCT-TAXID$ \
$PRODTAX-PRODUCT-TAXID$ \
$DOC-NUMBER$ \
$DOCTYPE$ \
$DOCTITLE$ \
UNION \
SELECT d.document_id, \
  d.Doc_Number \
  || '[' \
  || d.Status \
  || ']' AS Doc_Number, \
  d.DOC_TITLE, \
  pt.PRODUCT_NAME, \
  dt.DOCTYPE_NAME, \
  d.docrelease_date \
FROM csp.csp_Document d , \
  CSP.CSP_PRODUCT_DOCUMENTS pd , \
  csp.csp_DOCUMENTAUDIENCES a , \
  csp.CSP_DOCTYPES dt , \
  master.master_product_taxonomy pt \
WHERE Status      IN ('Available', 'Archived') \
AND pd.document_id = d.document_id \
AND d.audience     =a.AUDIENCE_ID \
AND a.AUDIENCE    IN ('Public','Public / Non-Requestable') \
AND IsSoftware     = 'N' \
AND d.document_id NOT IN \
  (SELECT document_id \
  FROM csp.csp_permissions per \
  WHERE d.document_id = per.document_id \
  ) \
AND dt.doctype_id    = d.doctype_id \
AND pd.product_taxid = pt.product_taxid \
$PRODDOC-PRODUCT-TAXID$ \
$PRODTAX-PRODUCT-TAXID$ \
$DOC-NUMBER$ \
$DOCTYPE$ \
$DOCTITLE$ \
	


########################################################################
    
SEARCH_LICENSE_QUERY=select A.*,(select first_name||' '||last_name user_name from master.master_user where user_id=A.updated_by) user_name, \
						(select company_name from master.master_company where A.company_id=company_id) as company_name \
			from (select company_id, \
			Case When ((Verified is null) or (Verified = 'N')) Then 'Not Verified' \
				     Else 'Verified' \
				End As VerifiedDesc, \
        	updated_by, update_date from CSP.CSP_COMPANYTPL \
        	where tlicense_id =:licenseId )A order by $orderByCol$ $orderByType$
        	
 GET_HISTORY_LOG_LICENSES=select A.*,\
    (select THIRD_PARTY_LICENSE from CSP.CSP_T_THIRDPARTYLICENSES where A.LICENSE_ID = TLICENSE_ID) as Thirdpartylicense,\
    (select SHORT_CODE from CSP.CSP_T_THIRDPARTYLICENSES where A.LICENSE_ID = TLICENSE_ID) as Shortcode,\
	(select COMPANY_NAME from MASTER.MASTER_COMPANY where A.COMPANY_ID=COMPANY_ID) as CompanyName,\
	(select FIRST_NAME||' '||LAST_NAME user_name from MASTER.MASTER_USER where USER_ID=A.UPDATED_BY) as UserName \
	FROM (select LICENSE_ID,COMPANY_ID,UPDATED_BY,UPDATE_DATE,VERIFIED from CSP.CSP_LICVERIFICATIONAUDITLOG \
	where LICENSE_ID=? and COMPANY_ID=? order by UPDATE_DATE desc )  A

GET_HISTORY_LOG_LICENSES_COUNT=select count(*) from (select A.*,\
    (select THIRD_PARTY_LICENSE from CSP.CSP_T_THIRDPARTYLICENSES where A.LICENSE_ID = TLICENSE_ID) as Thirdpartylicense,\
    (select SHORT_CODE from CSP.CSP_T_THIRDPARTYLICENSES where A.LICENSE_ID = TLICENSE_ID) as Shortcode,\
	(select COMPANY_NAME from MASTER.MASTER_COMPANY where A.COMPANY_ID=COMPANY_ID) as CompanyName,\
	(select FIRST_NAME||' '||LAST_NAME user_name from MASTER.MASTER_USER where USER_ID=A.UPDATED_BY) as UserName \
	FROM (select LICENSE_ID,COMPANY_ID,UPDATED_BY,UPDATE_DATE,VERIFIED from CSP.CSP_LICVERIFICATIONAUDITLOG \
	where LICENSE_ID=? and COMPANY_ID=? order by UPDATE_DATE desc )  A)
        	
    SEARCH_COMPANY_QUERY=select A.*,(select first_name||' '||last_name user_name from master.master_user where user_id=A.updated_by) user_name FROM (SELECT T.Company_TPL_Id, T.Company_Id, \
     L.TLicense_Id, L.Third_Party_License, L.Short_Code, Case When ((T.Verified is null) or (T.Verified = 'N')) Then 'Not Verified' Else 'Verified' \
	End As VerifiedDesc, T.update_date,T.updated_by FROM csp.CSP_T_THIRDPARTYLICENSES L LEFT OUTER JOIN csp.CSP_COMPANYTPL T ON T.TLicense_Id = L.TLicense_Id and \
	T.Company_Id = :companyId UNION \
			SELECT T.Company_TPL_Id, T.Company_Id, L.TLicense_Id, L.Third_Party_License, L.Short_Code,  \
				Case When ((T.Verified is null) or (T.Verified = 'N')) Then 'Not Verified' \
					Else 'Verified' \
				End As VerifiedDesc, \
				T.update_date,T.updated_by \
			FROM csp.CSP_T_THIRDPARTYLICENSES L inner join csp.CSP_COMPANYTPLRESTRICTIONS R on L.Tlicense_Id = R.Tlicense_Id \
			LEFT OUTER JOIN csp.CSP_COMPANYTPL T ON T.TLicense_Id = L.TLicense_Id \
			and T.Company_Id = :companyId \
			Where R.Company_Id = :companyId	\
			)A Order by $orderByCol$ $orderByType$, upper(Third_Party_License)
#####################################################################################################################
#All My Requests Query
  	
ALL_MYREQUESTS_QUERY=SELECT K.* FROM \
    (SELECT A.* FROM \
        (SELECT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,\
            DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,\
            DCSWTYPES.REQUEST_TYPE_NAME RequestTypeName,NVL(COUNT(DS.SW_REQUEST_ID),0) Users,\
            NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS REQUEST_STATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER,\
            NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') AS Requester \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG( DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID, $count$ ,ST.CNT)) \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                (SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT \
                    FROM CSP.CSP_REQUESTSWS WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                    GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT LEFT JOIN \
                CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
            (SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 ) ||'..more' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            $statusId$ \
            AND \
            (\
                CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID > 0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID = 0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                END \
            ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$\
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
        $orderby$ ) A\
    ) K
            
ALL_MYREQUESTS_COUNT_QUERY=SELECT COUNT(*) FROM \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG( DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID, $count$ ,ST.CNT)) \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                (SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT \
                    FROM CSP.CSP_REQUESTSWS WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                    GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT LEFT JOIN \
                CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
            (SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 ) ||'..more' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            $statusId$ \
            AND \
            (\
                CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID > 0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID = 0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                END \
            ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$\
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
         )
            
###################################################################################################################################################        

FIND_SLA_EXCEPTIONS = \
SELECT sla.sla_Exception_Id, mc.company_name as company\
  ,pt.PRODUCT_NAME as productname ,sla.requestor_name as reqname,sla.comments as comments,sla.active \
FROM csp.csp_slaexceptions  sla , master.master_company mc ,MASTER.master_product_taxonomy  pt \
WHERE  mc.company_Id   =  sla.company_Id \
AND  pt.product_taxid  =  sla.product_Id
###################################################################################################################  
GET_APPROVERS_QUERY=SELECT  MU.USER_ID, MU.FIRST_NAME || ' ' || MU.LAST_NAME AS USERNAME \
	FROM MASTER.MASTER_USER MU \
    WHERE EXISTS \
    ( SELECT UR.USER_ROLE_ID FROM MASTER.MASTER_USER_ROLE UR \
        WHERE UR.ROLE_ID IN (4,11,15) AND MU.USER_ID = UR.USER_ID \
    ) \
    AND MU.ACTIVE_FLAG='Y' ORDER  BY 2
################################################################################################################### 
COMPLETED_REQUESTS_QUERY=SELECT K.* FROM \
	(SELECT A.* FROM \
    (SELECT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
    	DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME RequestTypeName,\
    	NVL(COUNT(DS.SW_REQUEST_ID),0) Users,NVL(DRC.COUNTID,0) Softwares,\
    	REQ_STATUS.LISTAGGSTATUS REQUEST_STATUS,\
    	CASE \
    		WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
    	END SLAIDS,MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
    	NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER,\
    	NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') AS Requester \
    	FROM \
    	CSP.CSP_SWREQUESTS DCSWREQ \
    	INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
    	INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
    	INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
    	INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
    	LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
    	LEFT JOIN \
    	(SELECT ST.SW_REQUEST_ID,LISTAGG( DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
        	WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
        	NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID, $count$ ,ST.CNT)) \
        	WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
        	FROM \
        	(SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
            	WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
        	) ST \
        	GROUP BY ST.SW_REQUEST_ID \
    	) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
    	(SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
        	FROM CSP.CSP_SWREQUESTS RT \
        	LEFT JOIN CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
        	GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
    	) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
    	(SELECT A.SW_REQUEST_ID,\
    		CASE \
    			WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
        			THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
        				WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 ) ||'..more' \
        		ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) END LISTAGGRSLIDS \
        	FROM \
        	(SELECT SW_REQUEST_ID,SLA_ID,\
        		ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
            	FROM CSP.CSP_SWREQUESTSLAS \
        	) A \
        	WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
    	) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
    		INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
    		INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
        	GROUP BY DCSWREQ.SW_REQUEST_ID \
    	) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DR.SW_REQUEST_ID,DA.APPROVER_ID FROM CSP.CSP_REQUESTSWS DR \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
    		INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID \
        	WHERE NOT EXISTS \
        	(SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
        		(SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
        		  WHERE DOCUMENT_ID=DP.DOCUMENT_ID \
        		) \
        	) GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME ||' '||MU.LAST_NAME \
    	) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DR.SW_REQUEST_ID,DPLM.PLMID FROM CSP.CSP_REQUESTSWS DR \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
    		INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID \
    		INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
        	WHERE DPLM.ISPRIMARY = 'Y' AND EXISTS \
        	(SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' \
        		AND PRODUCT_TAXID IN (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE DOCUMENT_ID=DP.DOCUMENT_ID)\
        	) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
    	) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
    	WHERE \
    	DCSWREQ.SW_REQUEST_STATUS_ID IN ('2') \
    	AND (CASE WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
    	WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID > 0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
    	WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID = 0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
    	END) = DCSWREQ.SW_REQUEST_ID \
    	$company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
    	GROUP BY \
    	DCSWREQ.SW_REQUEST_ID,\
    	DCSWREQ.CONTACT_FIRST_NAME,\
    	DCSWREQ.CONTACT_LAST_NAME,\
    	DCSWREQ.CONTACT_EMAIL,\
    	DCSWREQ.OTHER_INFORMATION,\
    	DCSWREQ.CC_EMAILS,\
    	MU.FIRST_NAME,\
    	MU.LAST_NAME,\
    	DCSWTYPES.REQUEST_TYPE_NAME,\
    	NVL(DRC.COUNTID,0),\
    	REQ_STATUS.LISTAGGSTATUS,\
    	CASE \
    		WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') END,\
    	MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
    	NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
    	$orderby$ \
    ) A \
) K
                
COMPLETED_REQUESTS_COUNT_QUERY=SELECT count(*) FROM \
    (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
    	FROM \
    	CSP.CSP_SWREQUESTS DCSWREQ \
    	INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
    	INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
    	INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
    	INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
    	LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
    	LEFT JOIN \
    	(SELECT ST.SW_REQUEST_ID,LISTAGG( DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
        	WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
        	NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID, $count$ ,ST.CNT)) \
        	WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
        	FROM \
        	(SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
            	WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
        	) ST \
        	GROUP BY ST.SW_REQUEST_ID \
    	) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID LEFT JOIN \
    	(SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
        	FROM CSP.CSP_SWREQUESTS RT \
        	LEFT JOIN CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
        	GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
    	) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID LEFT JOIN \
    	(SELECT A.SW_REQUEST_ID,\
    		CASE \
    			WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 \
        			THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
        				WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 ) ||'..more' \
        		ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) END LISTAGGRSLIDS \
        	FROM \
        	(SELECT SW_REQUEST_ID,SLA_ID,\
        		ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
            	FROM CSP.CSP_SWREQUESTSLAS \
        	) A \
        	WHERE A.RN<=15 GROUP BY A.SW_REQUEST_ID \
    	) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
    		INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
    		INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
        	GROUP BY DCSWREQ.SW_REQUEST_ID \
    	) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DR.SW_REQUEST_ID,DA.APPROVER_ID FROM CSP.CSP_REQUESTSWS DR \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
    		INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID \
        	WHERE NOT EXISTS \
        	(SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
        		(SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
        		  WHERE DOCUMENT_ID=DP.DOCUMENT_ID \
        		) \
        	) GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME ||' '||MU.LAST_NAME \
    	) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID LEFT JOIN \
    	(SELECT DR.SW_REQUEST_ID,DPLM.PLMID FROM CSP.CSP_REQUESTSWS DR \
    		INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
    		INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
    		INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID \
    		INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
        	WHERE DPLM.ISPRIMARY = 'Y' AND EXISTS \
        	(SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' \
        		AND PRODUCT_TAXID IN (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE DOCUMENT_ID=DP.DOCUMENT_ID)\
        	) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
    	) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
    	WHERE \
    	DCSWREQ.SW_REQUEST_STATUS_ID IN ('2') \
    	AND (CASE WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
    	WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID > 0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
    	WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID = 0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
    	END) = DCSWREQ.SW_REQUEST_ID \
    	$company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
    	GROUP BY \
    	DCSWREQ.SW_REQUEST_ID,\
    	DCSWREQ.CONTACT_FIRST_NAME,\
    	DCSWREQ.CONTACT_LAST_NAME,\
    	DCSWREQ.CONTACT_EMAIL,\
    	DCSWREQ.OTHER_INFORMATION,\
    	DCSWREQ.CC_EMAILS,\
    	MU.FIRST_NAME,\
    	MU.LAST_NAME,\
    	DCSWTYPES.REQUEST_TYPE_NAME,\
    	NVL(DRC.COUNTID,0),\
    	REQ_STATUS.LISTAGGSTATUS,\
    	CASE \
    		WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
    		WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') END,\
    	MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
    	NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ')\
    	)
 ################################################################################################################################################################
 # Void Requests Queries.
 
 VOID_REQUESTS_QUERY=SELECT K.* \
FROM \
  (SELECT A.* \
  FROM \
    ( SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId, \
      DCSWREQ.CONTACT_FIRST_NAME, \
      DCSWREQ.CONTACT_LAST_NAME, \
      DCSWREQ.CONTACT_EMAIL, \
      DCSWREQ.OTHER_INFORMATION, \
      DCSWREQ.CC_EMAILS, \
      MU.FIRST_NAME, \
      MU.LAST_NAME, \
      DCSWTYPES.REQUEST_TYPE_NAME RequestTypeName, \
      NVL(DS.CNT,0) Users, \
      NVL(DRC.COUNTID,0) Softwares, \
      REQ_STATUS.LISTAGGSTATUS REQUEST_STATUS, \
      CASE \
        WHEN DRC.REQUEST_TYPE_ID=1 \
        THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
        WHEN DRC.REQUEST_TYPE_ID=2 \
        AND DRC.COUNTID         >0 \
        THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
        WHEN DRC.REQUEST_TYPE_ID=2 \
        AND DRC.COUNTID         = 0 \
        THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
      END SLAIDS, \
      MC.COMPANY_NAME Company, \
      DCSWREQ.REQUEST_DATE, \
      DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status, \
      NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER, \
      NVL(DCSWREQ.CONTACT_FIRST_NAME \
      ||' ' \
      || DCSWREQ.CONTACT_LAST_NAME,' ') AS Requester \
    FROM CSP.CSP_SWREQUESTS DCSWREQ \
    INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES \
    ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS \
    ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
    INNER JOIN MASTER.MASTER_USER MU \
    ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
    INNER JOIN MASTER.MASTER_COMPANY MC \
    ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
    LEFT JOIN \
      (SELECT A.SW_REQUEST_ID, \
        COUNT(B.SW_REQUEST_ID) AS CNT \
      FROM CSP.CSP_SWREQUESTS A \
      LEFT JOIN CSP.CSP_SWREQUESTUSERS B \
      ON A.SW_REQUEST_ID = B.SW_REQUEST_ID \
      GROUP BY A.SW_REQUEST_ID \
      ) DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID /*ADDED THIS TABLE 'DS' TO OPTIMIZE THE QUERY*/ \
    LEFT JOIN \
      (SELECT ST.SW_REQUEST_ID, \
        LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'P:' \
        ||ST.CNT,4,'G:' \
        ||ST.CNT,3,'D:' \
        ||ST.CNT),'-') WITHIN GROUP ( \
      ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS, \
        NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,ST.CNT)) WITHIN GROUP ( \
      ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
      FROM \
        (SELECT SW_REQUEST_ID, \
          SW_APPROVAL_STATUS_ID, \
          COUNT(SW_REQUEST_ID) CNT \
        FROM CSP.CSP_REQUESTSWS \
        WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) \
        GROUP BY SW_REQUEST_ID, \
          SW_APPROVAL_STATUS_ID \
        ) ST \
      GROUP BY ST.SW_REQUEST_ID \
      ) REQ_STATUS \
    ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID \
    LEFT JOIN \
      (SELECT RT.SW_REQUEST_ID, \
        RT.REQUEST_TYPE_ID, \
        COUNT(DR.SW_REQUEST_ID) COUNTID \
      FROM CSP.CSP_SWREQUESTS RT \
      LEFT JOIN CSP.CSP_REQUESTSWS DR \
      ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
      GROUP BY RT.SW_REQUEST_ID, \
        RT.REQUEST_TYPE_ID \
      ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID \
    LEFT JOIN \
      (SELECT A.SW_REQUEST_ID, \
        CASE \
          WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP ( \
          ORDER BY A.SLA_ID),',',1,10) > 0 \
          THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP ( \
          ORDER BY A.SLA_ID),1, INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP ( \
          ORDER BY A.SLA_ID),',',1,10)-1) \
            ||'..MORE' \
          ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP ( \
          ORDER BY A.SLA_ID) \
        END LISTAGGRSLIDS \
      FROM \
        (SELECT P.SW_REQUEST_ID, \
          P.SLA_ID, \
          ROW_NUMBER() OVER (PARTITION BY P.SW_REQUEST_ID ORDER BY P.SLA_ID ASC) AS RN \
        FROM \
          ( SELECT DISTINCT SW_REQUEST_ID, SLA_ID FROM CSP.CSP_SWREQUESTSLAS \
          ) P \
        ) A \
      WHERE A.RN<=15 \
      GROUP BY A.SW_REQUEST_ID \
      ) SLID \
    ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID \
    LEFT JOIN \
      ( SELECT DISTINCT DCSWREQ.SW_REQUEST_ID \
      FROM CSP.CSP_SWREQUESTS DCSWREQ \
      INNER JOIN CSP.CSP_REQUESTSWS DR \
      ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
      INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR \
      ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
      INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX \
      ON (DPR.PRODUCT_TAXID  = DSEX.PRODUCT_ID \
      AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID) \
        /*GROUP BY DCSWREQ.SW_REQUEST_ID*/ \
      ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
    LEFT JOIN \
      ( SELECT DISTINCT DR.SW_REQUEST_ID, \
        DR.DOCUMENT_ID, \
        DA.APPROVER_ID, \
        MU.FIRST_NAME \
        ||' ' \
        ||MU.LAST_NAME ENAME \
      FROM CSP.CSP_REQUESTSWS DR \
      INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP \
      ON DR.DOCUMENT_ID=DP.DOCUMENT_ID \
      INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT \
      ON DP.PRODUCT_TAXID=DPT.PRODUCT_TAXID \
      INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA \
      ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
      INNER JOIN MASTER.MASTER_USER MU \
      ON DA.APPROVER_ID = MU.USER_ID \
      AND NOT EXISTS \
        (SELECT 1 \
        FROM MASTER.MASTER_PRODUCT_TAXONOMY \
        WHERE SW_REQUIRE_APPROVAL='Y' \
        AND PRODUCT_TAXID       IN \
          (SELECT PRODUCT_TAXID \
          FROM CSP.CSP_PRODUCT_DOCUMENTS \
          WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
          ) \
        ) \
        /*AND DR.DOCUMENT_ID = DA.DOCUMENT_ID*/ \
        /* GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME*/ \
      ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID \
    LEFT JOIN \
      (SELECT L.SW_REQUEST_ID, \
        L.DOCUMENT_ID, \
        L.PLMID, \
        CASE \
          WHEN INSTR(LISTAGG(L.ENAME,',') WITHIN GROUP ( \
          ORDER BY L.ENAME),',',1,10) > 0 \
          THEN SUBSTR(LISTAGG(L.ENAME,',') WITHIN GROUP ( \
          ORDER BY L.ENAME),1, INSTR(LISTAGG(L.ENAME,',') WITHIN GROUP ( \
          ORDER BY L.ENAME),',',1,10)-1) \
            ||'..MORE' \
          ELSE LISTAGG(L.ENAME,',') WITHIN GROUP ( \
          ORDER BY L.ENAME) \
        END LISTAGGRSENAMES \
      FROM \
        ( SELECT DISTINCT K.SW_REQUEST_ID, \
          K.DOCUMENT_ID, \
          K.PLMID, \
          K.ENAME, \
          ROW_NUMBER() OVER (PARTITION BY K.SW_REQUEST_ID,K.DOCUMENT_ID ORDER BY K.PLMID ASC) AS RN \
        FROM \
          ( SELECT DISTINCT DR.SW_REQUEST_ID, \
            DR.DOCUMENT_ID, \
            DPLM.PLMID, \
            MU.FIRST_NAME \
            ||' ' \
            ||MU.LAST_NAME ENAME \
          FROM CSP.CSP_REQUESTSWS DR \
          INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP \
          ON DR.DOCUMENT_ID=DP.DOCUMENT_ID \
          INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT \
          ON DP.PRODUCT_TAXID=DPT.PRODUCT_TAXID \
          INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM \
          ON DPT.PRODUCT_TAXID=DPLM.PRODUCT_TAXID \
          INNER JOIN MASTER.MASTER_USER MU \
          ON DPLM.PLMID        = MU.USER_ID \
          WHERE DPLM.ISPRIMARY = 'Y' \
          AND EXISTS \
            (SELECT 1 \
            FROM MASTER.MASTER_PRODUCT_TAXONOMY \
            WHERE SW_REQUIRE_APPROVAL = 'Y' \
            AND PRODUCT_TAXID        IN \
              (SELECT PRODUCT_TAXID \
              FROM CSP.CSP_PRODUCT_DOCUMENTS \
              WHERE DOCUMENT_ID=DP.DOCUMENT_ID \
              ) \
            ) \
          ) K \
          /*GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME*/ \
        ) L \
      WHERE L.RN <=15 \
      GROUP BY L.SW_REQUEST_ID, \
        L.DOCUMENT_ID, \
        L.PLMID \
      ) PLM ON DCSWREQ.SW_REQUEST_ID    = PLM.SW_REQUEST_ID \
    WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('3') \
    AND ( \
      CASE \
        WHEN DRC.REQUEST_TYPE_ID = 1 \
        THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
        WHEN DRC.REQUEST_TYPE_ID = 2 \
        AND DRC.COUNTID          >0 \
        THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
        WHEN DRC.REQUEST_TYPE_ID = 2 \
        AND DRC.COUNTID          = 0 \
        THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
      END ) = DCSWREQ.SW_REQUEST_ID $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
      /*GROUP BY DCSWREQ.SW_REQUEST_ID, \
      DCSWREQ.CONTACT_FIRST_NAME, \
      DCSWREQ.CONTACT_LAST_NAME, \
      DCSWREQ.CONTACT_EMAIL, \
      DCSWREQ.OTHER_INFORMATION, \
      DCSWREQ.CC_EMAILS, \
      MU.FIRST_NAME, \
      MU.LAST_NAME, \
      DCSWTYPES.REQUEST_TYPE_NAME, \
      NVL(DRC.COUNTID,0), \
      REQ_STATUS.LISTAGGSTATUS, \
      CASE \
      WHEN DRC.REQUEST_TYPE_ID=1 \
      THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
      WHEN DRC.REQUEST_TYPE_ID=2 \
      AND DRC.COUNTID         >0 \
      THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
      WHEN DRC.REQUEST_TYPE_ID=2 \
      AND DRC.COUNTID         =0 \
      THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
      END, \
      MC.COMPANY_NAME, \
      DCSWREQ.REQUEST_DATE, \
      DCSWREQSTATUS.SW_REQUEST_STATUS_NAME, \
      NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0), \
      NVL(DCSWREQ.CONTACT_FIRST_NAME \
      ||' ' \
      || DCSWREQ.CONTACT_LAST_NAME,' ') */ \
      $orderby$ \
    ) A \
  ) K
           
VOID_REQUESTS_COUNT_QUERY=SELECT COUNT(*) \
FROM \
  ( \
    SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
       \
    FROM CSP.CSP_SWREQUESTS DCSWREQ  \
    INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES  \
    ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID  \
    INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS  \
    ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID  \
    INNER JOIN MASTER.MASTER_USER MU  \
    ON DCSWREQ.REQUESTER_ID = MU.USER_ID  \
    INNER JOIN MASTER.MASTER_COMPANY MC  \
    ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID  \
    LEFT JOIN  \
      (SELECT A.SW_REQUEST_ID,  \
        COUNT(B.SW_REQUEST_ID) AS CNT  \
      FROM CSP.CSP_SWREQUESTS A  \
      LEFT JOIN CSP.CSP_SWREQUESTUSERS B  \
      ON A.SW_REQUEST_ID = B.SW_REQUEST_ID  \
      GROUP BY A.SW_REQUEST_ID  \
      ) DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID /*ADDED THIS TABLE 'DS' TO OPTIMIZE THE QUERY*/  \
    LEFT JOIN  \
      (SELECT ST.SW_REQUEST_ID,  \
        LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'P:'  \
        ||ST.CNT,4,'G:'  \
        ||ST.CNT,3,'D:'  \
        ||ST.CNT),'-') WITHIN GROUP (  \
      ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,  \
        NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,ST.CNT)) WITHIN GROUP (  \
      ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER  \
      FROM  \
        (SELECT SW_REQUEST_ID,  \
          SW_APPROVAL_STATUS_ID,  \
          COUNT(SW_REQUEST_ID) CNT  \
        FROM CSP.CSP_REQUESTSWS  \
        WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4)  \
        GROUP BY SW_REQUEST_ID,  \
          SW_APPROVAL_STATUS_ID  \
        ) ST  \
      GROUP BY ST.SW_REQUEST_ID  \
      ) REQ_STATUS  \
    ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID  \
    LEFT JOIN  \
      (SELECT RT.SW_REQUEST_ID,  \
        RT.REQUEST_TYPE_ID,  \
        COUNT(DR.SW_REQUEST_ID) COUNTID  \
      FROM CSP.CSP_SWREQUESTS RT  \
      LEFT JOIN CSP.CSP_REQUESTSWS DR  \
      ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID  \
      GROUP BY RT.SW_REQUEST_ID,  \
        RT.REQUEST_TYPE_ID  \
      ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID  \
    LEFT JOIN  \
      (SELECT A.SW_REQUEST_ID,  \
        CASE  \
          WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (  \
          ORDER BY A.SLA_ID),',',1,10) > 0  \
          THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (  \
          ORDER BY A.SLA_ID),1, INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (  \
          ORDER BY A.SLA_ID),',',1,10)-1)  \
            ||'..MORE'  \
          ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (  \
          ORDER BY A.SLA_ID)  \
        END LISTAGGRSLIDS  \
      FROM  \
        (SELECT P.SW_REQUEST_ID,  \
          P.SLA_ID,  \
          ROW_NUMBER() OVER (PARTITION BY P.SW_REQUEST_ID ORDER BY P.SLA_ID ASC) AS RN  \
        FROM  \
          ( SELECT DISTINCT SW_REQUEST_ID, SLA_ID FROM CSP.CSP_SWREQUESTSLAS  \
          ) P  \
        ) A  \
      WHERE A.RN<=15  \
      GROUP BY A.SW_REQUEST_ID  \
      ) SLID  \
    ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID  \
    LEFT JOIN  \
      ( SELECT DISTINCT DCSWREQ.SW_REQUEST_ID  \
      FROM CSP.CSP_SWREQUESTS DCSWREQ  \
      INNER JOIN CSP.CSP_REQUESTSWS DR  \
      ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID  \
      INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR  \
      ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID  \
      INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX  \
      ON (DPR.PRODUCT_TAXID  = DSEX.PRODUCT_ID  \
      AND DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID)  \
        /*GROUP BY DCSWREQ.SW_REQUEST_ID*/  \
      ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID  \
    LEFT JOIN  \
      ( SELECT DISTINCT DR.SW_REQUEST_ID,  \
        DR.DOCUMENT_ID,  \
        DA.APPROVER_ID,  \
        MU.FIRST_NAME  \
        ||' '  \
        ||MU.LAST_NAME ENAME  \
      FROM CSP.CSP_REQUESTSWS DR  \
      INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP  \
      ON DR.DOCUMENT_ID=DP.DOCUMENT_ID  \
      INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT  \
      ON DP.PRODUCT_TAXID=DPT.PRODUCT_TAXID  \
      INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA  \
      ON DR.DOCUMENT_ID = DA.DOCUMENT_ID  \
      INNER JOIN MASTER.MASTER_USER MU  \
      ON DA.APPROVER_ID = MU.USER_ID  \
      AND NOT EXISTS  \
        (SELECT 1  \
        FROM MASTER.MASTER_PRODUCT_TAXONOMY  \
        WHERE SW_REQUIRE_APPROVAL='Y'  \
        AND PRODUCT_TAXID       IN  \
          (SELECT PRODUCT_TAXID  \
          FROM CSP.CSP_PRODUCT_DOCUMENTS  \
          WHERE DOCUMENT_ID = DP.DOCUMENT_ID  \
          )  \
        )  \
        /*AND DR.DOCUMENT_ID = DA.DOCUMENT_ID*/  \
        /* GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME*/  \
      ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID  \
    LEFT JOIN  \
      (SELECT L.SW_REQUEST_ID,  \
        L.DOCUMENT_ID,  \
        L.PLMID,  \
        CASE  \
          WHEN INSTR(LISTAGG(L.ENAME,',') WITHIN GROUP (  \
          ORDER BY L.ENAME),',',1,10) > 0  \
          THEN SUBSTR(LISTAGG(L.ENAME,',') WITHIN GROUP (  \
          ORDER BY L.ENAME),1, INSTR(LISTAGG(L.ENAME,',') WITHIN GROUP (  \
          ORDER BY L.ENAME),',',1,10)-1)  \
            ||'..MORE'  \
          ELSE LISTAGG(L.ENAME,',') WITHIN GROUP (  \
          ORDER BY L.ENAME)  \
        END LISTAGGRSENAMES  \
      FROM  \
        ( SELECT DISTINCT K.SW_REQUEST_ID,  \
          K.DOCUMENT_ID,  \
          K.PLMID,  \
          K.ENAME,  \
          ROW_NUMBER() OVER (PARTITION BY K.SW_REQUEST_ID,K.DOCUMENT_ID ORDER BY K.PLMID ASC) AS RN  \
        FROM  \
          ( SELECT DISTINCT DR.SW_REQUEST_ID,  \
            DR.DOCUMENT_ID,  \
            DPLM.PLMID,  \
            MU.FIRST_NAME  \
            ||' '  \
            ||MU.LAST_NAME ENAME  \
          FROM CSP.CSP_REQUESTSWS DR  \
          INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP  \
          ON DR.DOCUMENT_ID=DP.DOCUMENT_ID  \
          INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT  \
          ON DP.PRODUCT_TAXID=DPT.PRODUCT_TAXID  \
          INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM  \
          ON DPT.PRODUCT_TAXID=DPLM.PRODUCT_TAXID  \
          INNER JOIN MASTER.MASTER_USER MU  \
          ON DPLM.PLMID        = MU.USER_ID  \
          WHERE DPLM.ISPRIMARY = 'Y'  \
          AND EXISTS  \
            (SELECT 1  \
            FROM MASTER.MASTER_PRODUCT_TAXONOMY  \
            WHERE SW_REQUIRE_APPROVAL = 'Y'  \
            AND PRODUCT_TAXID        IN  \
              (SELECT PRODUCT_TAXID  \
              FROM CSP.CSP_PRODUCT_DOCUMENTS  \
              WHERE DOCUMENT_ID=DP.DOCUMENT_ID  \
              )  \
            )  \
          ) K  \
          /*GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPlm.PLMID,mu.FIRST_NAME||' '||mu.LAST_NAME*/  \
        ) L  \
      WHERE L.RN <=15  \
      GROUP BY L.SW_REQUEST_ID,  \
        L.DOCUMENT_ID,  \
        L.PLMID  \
      ) PLM ON DCSWREQ.SW_REQUEST_ID    = PLM.SW_REQUEST_ID  \
    WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('3')  \
    AND (  \
      CASE  \
        WHEN DRC.REQUEST_TYPE_ID = 1  \
        THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID)  \
        WHEN DRC.REQUEST_TYPE_ID = 2  \
        AND DRC.COUNTID          >0  \
        THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID)  \
        WHEN DRC.REQUEST_TYPE_ID = 2  \
        AND DRC.COUNTID          = 0  \
        THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID)  \
      END ) = DCSWREQ.SW_REQUEST_ID $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$  \
      /*GROUP BY DCSWREQ.SW_REQUEST_ID,  \
      DCSWREQ.CONTACT_FIRST_NAME,  \
      DCSWREQ.CONTACT_LAST_NAME,  \
      DCSWREQ.CONTACT_EMAIL,  \
      DCSWREQ.OTHER_INFORMATION,  \
      DCSWREQ.CC_EMAILS,  \
      MU.FIRST_NAME,  \
      MU.LAST_NAME,  \
      DCSWTYPES.REQUEST_TYPE_NAME,  \
      NVL(DRC.COUNTID,0),  \
      REQ_STATUS.LISTAGGSTATUS,  \
      CASE  \
      WHEN DRC.REQUEST_TYPE_ID=1  \
      THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA')  \
      WHEN DRC.REQUEST_TYPE_ID=2  \
      AND DRC.COUNTID         >0  \
      THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA')  \
      WHEN DRC.REQUEST_TYPE_ID=2  \
      AND DRC.COUNTID         =0  \
      THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage')  \
      END,  \
      MC.COMPANY_NAME,  \
      DCSWREQ.REQUEST_DATE,  \
      DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,  \
      NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),  \
      NVL(DCSWREQ.CONTACT_FIRST_NAME  \
      ||' '  \
      || DCSWREQ.CONTACT_LAST_NAME,' ') */  \
   )
 #####################################################################################################################################################
#All contact engineer queries
GET_ACTIVE_ENGG_LIST=SELECT UR.USER_ID, concat(MU.FIRST_NAME || ' ',MU.LAST_NAME) as DISPLAYNAME, MU.LOGIN_NAME FROM  MASTER.MASTER_USER_ROLE UR JOIN MASTER.MASTER_USER MU ON UR.USER_ID = MU.USER_ID JOIN MASTER.MASTER_ROLES RO ON UR.ROLE_ID = RO.ROLE_ID WHERE 1=1 AND MU.ACTIVE_FLAG ='Y' AND RO.ROLE_NAME = 'Engineer' ORDER BY UPPER(DISPLAYNAME) asc
ENG_PRODUCT_RETRIEVE_QUERY=select PRODUCT_TAXID,product_name from MASTER.MASTER_PRODUCT_TAXONOMY where RECORD_ACTIVE='Y' and prod_category='PRODUCT'
ENG_PRODUCT_RETRIEVE_QUERY_CONDITION=and PRODUCT_TAXID in(select PRODUCT_TAXID from CSP.CSP_PRODUCT_ENGINEER where product_Engineer_Id=? and ISActive ='Y')
ENG_PRODUCT_RETRIEVE_QUERY_ORDER=order by lower(product_name) asc
RETRIEVE_EXISTING_APPROVER_QUERY=SELECT DISTINCT UR.USER_ID, CONCAT(MU.FIRST_NAME||' ',MU.LAST_NAME) AS DISPLAYNAME,MU.LOGIN_NAME FROM MASTER.MASTER_USER MU INNER JOIN  MASTER.MASTER_USER_ROLE UR ON UR.USER_ID = MU.USER_ID WHERE EXISTS (SELECT 1 FROM  CSP.CSP_USERDELEGATE DU WHERE DU.ISACTIVE='Y' AND MU.USER_ID =DU.DELEGATE_USER_ID AND DU.USER_ID =?) ORDER BY UPPER(DISPLAYNAME) asc

FIND_USERS_ON_NOTIFICATION=SELECT \
    p.document_id AS documentid, \
    m.first_name \
    || ' ' \
    || m.last_name AS name, \
    c.company_name AS company, \
    m.login_name AS email, \
    DECODE(m.city,NULL,' ',m.city \
    || ', ') \
    || DECODE(m.state_name,NULL,' ',m.state_name \
    || ', ') \
    || DECODE(country.country_name,NULL,' ',country.country_name) AS location, \
    p.update_date AS updatedate, \
    nvl(m2.first_name|| ' ' || m2.last_name,'-') AS notifiedby, \
    nvl(n.notifiedtime,'') AS notifiedon, \
    m.user_id AS userid, \
    m.active_flag \
FROM \
    master.master_user m \
    INNER JOIN csp.csp_permissions p ON p.user_id = m.user_id \
    INNER JOIN master.master_company c ON m.company_id = c.company_id \
    LEFT JOIN ( \
        SELECT \
            document_id ,user_id, \
            MAX(notified_by) notifiedby, \
            MAX(notified_time) notifiedtime \
        FROM \
            csp.csp_swnotificationlogs \
        WHERE \
            document_id = :documentId \
        GROUP BY \
            document_id, \
            user_id \
    ) n ON p.user_id = n.user_id \
    LEFT JOIN master.master_user m2 ON m2.user_id = n.notifiedby \
    INNER JOIN master.master_country country ON m.country_id = country.country_id \
WHERE \
    1 = 1
	
FIND_USERS_BY_USER_GROUP= SELECT  P.DOCUMENT_ID AS documentId, m.FIRST_NAME||' '||m.LAST_NAME as name, c.COMPANY_NAME AS company, \
	m.LOGIN_NAME AS email, DECODE(m.CITY, NULL, ' ', m.CITY || ', ') || DECODE(m.STATE_NAME, NULL, ' ', m.STATE_NAME || ', ') || DECODE(country.COUNTRY_NAME, NULL, ' ', country.COUNTRY_NAME) as Location, \
	p.UPDATE_DATE AS updateDate,  NVL(m2.FIRST_NAME ||' '||m2.LAST_NAME,'-') as  NotifiedBy, NVL(n.notifiedtime,'') as NotifiedOn, m.USER_ID as userId,m.ACTIVE_FLAG \
	FROM MASTER.MASTER_USER m \
	INNER JOIN MASTER.MASTER_COMPANY c on m.COMPANY_ID = c.COMPANY_ID \
	INNER JOIN CSP.CSP_SLA_USER_GROUP MUG ON m.USER_ID = MUG.USER_ID \
	LEFT JOIN CSP.CSP_PERMISSIONS  P on MUG.USER_ID = P.USER_ID  and  p.DOCUMENT_ID = :documentId \
	LEFT JOIN  (select DOCUMENT_ID,USER_ID,max(Notified_By) NotifiedBy,max(notified_time) notifiedtime from CSP.CSP_SWNOTIFICATIONLOGS where DOCUMENT_ID = :documentId \
	GROUP BY  DOCUMENT_ID,USER_ID) n on  m.USER_ID = N.USER_ID \
	LEFT JOIN  MASTER.MASTER_USER m2 ON m2.USER_ID = N.NotifiedBy \
	INNER JOIN MASTER.MASTER_COUNTRY country on m.COUNTRY_ID = country.COUNTRY_ID \
	WHERE MUG.GROUP_ID = :groupId
########################################################################################################################################################
PENDING_EXISTING_APPROVALS=SELECT K.* FROM \
    (SELECT A.* FROM  \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME, \
            DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION, \
            DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME, \
            DS.Users,NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS, \
            CASE  \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status, \
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER, \
            NVL(DCSWREQ.CONTACT_FIRST_NAME||' '||DCSWREQ.CONTACT_LAST_NAME,' ') AS Requester \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID  \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN   \
            ( \
                SELECT DCSWREQ.SW_REQUEST_ID,NVL(COUNT(DS.SW_REQUEST_ID),0) AS Users \
                FROM CSP.CSP_SWREQUESTS DCSWREQ LEFT JOIN \
                CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN  \
            ( \
                SELECT ST.SW_REQUEST_ID, \
                    LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS, \
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) $loggedInUserCondition$ GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST \
                GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID \
            LEFT JOIN \
            ( $DRCCONDITION$ \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID  \
            LEFT JOIN  \
            ( SELECT A.SW_REQUEST_ID, \
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP(ORDER BY A.SLA_ID),',',1,10)-1)||'..MORE'  \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID)  \
                END LISTAGGRSLIDS  \
                FROM  \
                ( SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS  \
                ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID \
            LEFT JOIN  \
            ( SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID  \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID AND DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID  \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            LEFT JOIN  \
            ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME \
                FROM CSP.CSP_REQUESTSWS DR  \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID  \
                INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID  \
                WHERE DR.SW_APPROVAL_STATUS_ID IN (2)  \
                AND NOT EXISTS  \
                ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                    ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS  \
                        WHERE DOCUMENT_ID = DP.DOCUMENT_ID  \
                    )  \
                ) \
                AND DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME \
            ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID  \
            LEFT JOIN  \
            ( SELECT SW_REQUEST_ID,PLMID \
                FROM \
                ( SELECT DR.SW_REQUEST_ID,DPLM.PLMID \
                    FROM CSP.CSP_REQUESTSWS DR \
                    INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                    INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                    INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID  \
                    INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
                    WHERE DR.SW_APPROVAL_STATUS_ID IN (2) \
                    AND DPLM.ISPRIMARY='Y' \
                    AND DPLM.RECORD_ACTIVITY='Y' \
                    AND EXISTS  \
                    ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                        ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS  \
                            WHERE  DOCUMENT_ID = DP.DOCUMENT_ID  \
                        )  \
                    ) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
                ) GROUP BY SW_REQUEST_ID,PLMID  \
            ) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
            WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1')  \
            AND  \
            ( CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
            END ) = DCSWREQ.SW_REQUEST_ID \
            AND DCSWTYPES.REQUEST_TYPE_ID IN ('1') \
            AND STATUS_ORDER <> 0 \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
          $orderby$ ) A  \
    ) K \
    
  PENDING_EXISTING_APPROVALS_COUNT=SELECT COUNT(*) FROM \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            ( \
                SELECT ST.SW_REQUEST_ID,\
                    LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST \
                GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT \
                LEFT JOIN CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP(ORDER BY A.SLA_ID),',',1,10)-1)||'..MORE' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                ( SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID AND DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME \
                FROM CSP.CSP_REQUESTSWS DR \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID \
                WHERE DR.SW_APPROVAL_STATUS_ID IN (2) \
                AND NOT EXISTS \
                ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                    ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                        WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
                    ) \
                ) \
                AND DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME \
            ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT SW_REQUEST_ID,PLMID \
                FROM \
                ( SELECT DR.SW_REQUEST_ID,DPLM.PLMID \
                    FROM CSP.CSP_REQUESTSWS DR \
                    INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                    INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                    INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID \
                    INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
                    WHERE DR.SW_APPROVAL_STATUS_ID IN (2) \
                    AND DPLM.ISPRIMARY='Y' \
                    AND DPLM.RECORD_ACTIVITY='Y' \
                    AND EXISTS \
                    ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                        ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                            WHERE  DOCUMENT_ID = DP.DOCUMENT_ID \
                        ) \
                    ) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
                ) GROUP BY SW_REQUEST_ID,PLMID \
            ) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
            WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1') \
            AND \
            ( CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
            END ) = DCSWREQ.SW_REQUEST_ID \
            AND DCSWTYPES.REQUEST_TYPE_ID IN ('1') \
            AND STATUS_ORDER <> 0 \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,\
            MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),\
             NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
      )
      
ALL_APPROVAL_REQUESTS=SELECT K.* FROM \
    (SELECT A.* FROM \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,\
            DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION,\
            DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            DS.Users,NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER,\
            NVL(DCSWREQ.CONTACT_FIRST_NAME||' '||DCSWREQ.CONTACT_LAST_NAME,' ') AS Requester \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN \
            ( \
                SELECT DCSWREQ.SW_REQUEST_ID,NVL(COUNT(DS.SW_REQUEST_ID),0) AS Users \
                FROM CSP.CSP_SWREQUESTS DCSWREQ LEFT JOIN \
                CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            ( \
                SELECT ST.SW_REQUEST_ID,\
                    LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST \
                GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT \
                LEFT JOIN CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP(ORDER BY A.SLA_ID),',',1,10)-1)||'..MORE' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                ( SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID AND DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME \
                FROM CSP.CSP_REQUESTSWS DR \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID \
                WHERE DR.SW_APPROVAL_STATUS_ID IN (1,2,3,4) \
                AND NOT EXISTS \
                ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                    ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                        WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
                    ) \
                ) \
                AND DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME \
            ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT SW_REQUEST_ID,PLMID \
                FROM \
                ( SELECT DR.SW_REQUEST_ID,DPLM.PLMID \
                    FROM CSP.CSP_REQUESTSWS DR \
                    INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                    INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                    INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID \
                    INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
                    WHERE DR.SW_APPROVAL_STATUS_ID IN (1,2,3,4) \
                    AND DPLM.ISPRIMARY='Y' \
                    AND DPLM.RECORD_ACTIVITY = 'Y' \
                    AND EXISTS \
                    ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                        ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                            WHERE  DOCUMENT_ID = DP.DOCUMENT_ID \
                        ) \
                    ) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
                ) GROUP BY SW_REQUEST_ID,PLMID \
            ) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
            WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1','2','3') \
            AND \
            ( CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
            END ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
       $orderby$ ) A \
    ) K
    
ALL_APPROVAL_REQUESTS_COUNT=SELECT COUNT(*) FROM \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
            FROM CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWREQ.REQUEST_TYPE_ID = DCSWTYPES.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQ.SW_REQUEST_STATUS_ID = DCSWREQSTATUS.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON DCSWREQ.REQUESTER_ID = MU.USER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DCSWREQ.SW_REQUEST_ID = DS.SW_REQUEST_ID \
            LEFT JOIN \
            ( \
                SELECT ST.SW_REQUEST_ID,\
                    LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                    NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                        WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (1,2,3,4) GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST \
                GROUP BY ST.SW_REQUEST_ID \
            ) REQ_STATUS ON DCSWREQ.SW_REQUEST_ID = REQ_STATUS.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT \
                LEFT JOIN CSP.CSP_REQUESTSWS DR ON RT.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DCSWREQ.SW_REQUEST_ID = DRC.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT A.SW_REQUEST_ID,\
                CASE \
                    WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY SLA_ID),',',1,10)>0 \
                        THEN SUBSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP(ORDER BY A.SLA_ID),',',1,10)-1)||'..MORE' \
                    ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                END LISTAGGRSLIDS \
                FROM \
                ( SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                    FROM CSP.CSP_SWREQUESTSLAS \
                ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON DCSWREQ.SW_REQUEST_ID = SLID.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DCSWREQ.SW_REQUEST_ID FROM CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DCSWREQ.SW_REQUEST_ID = DR.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DR.DOCUMENT_ID = DPR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DCSWREQ.COMPANY_ID = DSEX.COMPANY_ID AND DPR.PRODUCT_TAXID = DSEX.PRODUCT_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON DCSWREQ.SW_REQUEST_ID = SLAEXCP.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME \
                FROM CSP.CSP_REQUESTSWS DR \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                INNER JOIN MASTER.MASTER_USER MU ON DA.APPROVER_ID = MU.USER_ID \
                WHERE DR.SW_APPROVAL_STATUS_ID IN (1,2,3,4) \
                AND NOT EXISTS \
                ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                    ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                        WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
                    ) \
                ) \
                AND DR.DOCUMENT_ID = DA.DOCUMENT_ID \
                GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME \
            ) APR ON DCSWREQ.SW_REQUEST_ID = APR.SW_REQUEST_ID \
            LEFT JOIN \
            ( SELECT SW_REQUEST_ID,PLMID \
                FROM \
                ( SELECT DR.SW_REQUEST_ID,DPLM.PLMID \
                    FROM CSP.CSP_REQUESTSWS DR \
                    INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DR.DOCUMENT_ID = DP.DOCUMENT_ID \
                    INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                    INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPT.PRODUCT_TAXID = DPLM.PRODUCT_TAXID \
                    INNER JOIN MASTER.MASTER_USER MU ON DPLM.PLMID = MU.USER_ID \
                    WHERE DR.SW_APPROVAL_STATUS_ID IN (1,2,3,4) \
                    AND DPLM.ISPRIMARY='Y' \
                    AND DPLM.RECORD_ACTIVITY = 'Y' \
                    AND EXISTS \
                    ( SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
                        ( SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                            WHERE  DOCUMENT_ID = DP.DOCUMENT_ID \
                        ) \
                    ) GROUP BY DR.SW_REQUEST_ID,DPLM.PLMID \
                ) GROUP BY SW_REQUEST_ID,PLMID \
            ) PLM ON DCSWREQ.SW_REQUEST_ID = PLM.SW_REQUEST_ID \
            WHERE DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1','2','3') \
            AND \
            ( CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
            END ) = DCSWREQ.SW_REQUEST_ID \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,\
            MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),\
             NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
      )
#####################################################################################################################################################
GET_ROLES_QUERY=SELECT DISTINCT R.ROLE_ID,R.ROLE_NAME FROM MASTER.MASTER_ROLES R \
    INNER JOIN MASTER.MASTER_USER_ROLE UR ON UR.ROLE_ID = R.ROLE_ID \
        INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = UR.USER_ID \
        WHERE MU.USER_ID = ?


########### Get All Software File Groups ##############

### Important Note: Below query has been taken from CSP 2.0.
###	Although we are selecting doc_set_id and doc_set_name from csp_docsets table,
### but in this query two more tables, master.master_user and csp.csp_docsetdocuments has been joined with csp_docsets.
### Clarification is pending.

SQL_GET_ALL_SOFTWARE_FILE_GROUPS=SELECT DISTINCT ds.doc_set_id, \
ds.doc_set_name \
FROM csp.csp_docsetdocuments dst \
INNER JOIN csp.csp_docsets ds \
ON ds.doc_set_id=dst.doc_set_id \
INNER JOIN master.master_user U \
ON ds.updated_by = U.User_Id \
INNER JOIN master.master_user U2 \
ON ds.created_by = U2.User_Id \
AND ds.active    ='Y' \
AND ds.type      ='S' \
ORDER BY 2 \

#######################################################
PENDING_CUSTOM_APPROVALS=SELECT K.* FROM \
    (SELECT A.* FROM \
        (SELECT DCSWREQ.SW_REQUEST_ID RequestId,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,\
            DCSWREQ.CONTACT_EMAIL,DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,\
            MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,NVL(COUNT(DS.SW_REQUEST_ID),0) Users,\
            NVL(DRC.COUNTID,0) Softwares,REQ_STATUS.LISTAGGSTATUS Request_status,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END SLAIDS,\
            MC.COMPANY_NAME Company,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME Status,\
            NVL(TO_NUMBER((REQ_STATUS.STATUS_ORDER)),0) STATUS_ORDER,\
            NVL(DCSWREQ.CONTACT_FIRST_NAME||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') AS Requester \
            FROM \
            CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWTYPES.REQUEST_TYPE_ID = DCSWREQ.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQSTATUS.SW_REQUEST_STATUS_ID = DCSWREQ.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DCSWREQ.REQUESTER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID=DCSWREQ.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                    GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST GROUP BY st.SW_REQUEST_ID \
            ) REQ_STATUS ON REQ_STATUS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            INNER JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT \
                LEFT JOIN CSP.CSP_REQUESTSWS DR ON DR.SW_REQUEST_ID = RT.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DRC.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT SW_REQUEST_ID,\
                    CASE \
                        WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 THEN SUBSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 )||'..MORE' \
                        ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                    END LISTAGGRSLIDS \
                    FROM \
                    (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER \
                        (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                        FROM CSP.CSP_SWREQUESTSLAS ORDER BY SW_REQUEST_ID,SLA_ID \
                    ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON SLID.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM \
                CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DR.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DPR.DOCUMENT_ID = DR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DSEX.PRODUCT_ID = DPR.PRODUCT_TAXID \
                        AND DSEX.PRODUCT_ID = DSEX.PRODUCT_ID \
                        AND DSEX.COMPANY_ID = DCSWREQ.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON SLAEXCP.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            WHERE \
            DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1') \
            AND \
                (CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                end) = DCSWREQ.SW_REQUEST_ID \
            AND DCSWTYPES.REQUEST_TYPE_ID IN ('2') \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,\
            MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),\
            NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
        $orderby$ \
    ) A \
) K

PENDING_CUSTOM_APPROVALS_COUNT=SELECT COUNT(*) FROM \
        (SELECT DISTINCT DCSWREQ.SW_REQUEST_ID RequestId \
            FROM \
            CSP.CSP_SWREQUESTS DCSWREQ \
            INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWTYPES.REQUEST_TYPE_ID = DCSWREQ.REQUEST_TYPE_ID \
            INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQSTATUS.SW_REQUEST_STATUS_ID = DCSWREQ.SW_REQUEST_STATUS_ID \
            INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DCSWREQ.REQUESTER_ID \
            INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID=DCSWREQ.COMPANY_ID \
            LEFT JOIN CSP.CSP_SWREQUESTUSERS DS ON DS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT ST.SW_REQUEST_ID,\
                LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,2,'p:'||ST.CNT,4,'G:'||ST.CNT,3,'D:'||ST.CNT),'-') \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID) LISTAGGSTATUS,\
                NVL(LISTAGG(DECODE(ST.SW_APPROVAL_STATUS_ID,$count$,ST.CNT)) \
                WITHIN GROUP (ORDER BY ST.SW_APPROVAL_STATUS_ID),0) STATUS_ORDER \
                FROM \
                ( SELECT SW_REQUEST_ID,SW_APPROVAL_STATUS_ID,COUNT(SW_REQUEST_ID) CNT FROM CSP.CSP_REQUESTSWS \
                    WHERE SW_APPROVAL_STATUS_ID IN (2,3,4) \
                    GROUP BY SW_REQUEST_ID,SW_APPROVAL_STATUS_ID \
                ) ST GROUP BY st.SW_REQUEST_ID \
            ) REQ_STATUS ON REQ_STATUS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            INNER JOIN \
            (SELECT RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID,COUNT(DR.SW_REQUEST_ID) COUNTID \
                FROM CSP.CSP_SWREQUESTS RT \
                LEFT JOIN CSP.CSP_REQUESTSWS DR ON DR.SW_REQUEST_ID = RT.SW_REQUEST_ID \
                GROUP BY RT.SW_REQUEST_ID,RT.REQUEST_TYPE_ID \
            ) DRC ON DRC.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT SW_REQUEST_ID,\
                    CASE \
                        WHEN INSTR(LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)>0 THEN SUBSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),1,INSTR(LISTAGG(A.SLA_ID,',') \
                            WITHIN GROUP (ORDER BY A.SLA_ID),',',1,10)-1 )||'..MORE' \
                        ELSE LISTAGG(A.SLA_ID,',') WITHIN GROUP (ORDER BY A.SLA_ID) \
                    END LISTAGGRSLIDS \
                    FROM \
                    (SELECT SW_REQUEST_ID,SLA_ID,ROW_NUMBER() OVER \
                        (PARTITION BY SW_REQUEST_ID ORDER BY SLA_ID ASC) AS RN \
                        FROM CSP.CSP_SWREQUESTSLAS ORDER BY SW_REQUEST_ID,SLA_ID \
                    ) A WHERE RN<=15 GROUP BY A.SW_REQUEST_ID \
            ) SLID ON SLID.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            LEFT JOIN \
            (SELECT DCSWREQ.SW_REQUEST_ID FROM \
                CSP.CSP_SWREQUESTS DCSWREQ \
                INNER JOIN CSP.CSP_REQUESTSWS DR ON DR.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
                INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DPR ON DPR.DOCUMENT_ID = DR.DOCUMENT_ID \
                INNER JOIN CSP.CSP_SLAEXCEPTIONS DSEX ON (DSEX.PRODUCT_ID = DPR.PRODUCT_TAXID \
                        AND DSEX.PRODUCT_ID = DSEX.PRODUCT_ID \
                        AND DSEX.COMPANY_ID = DCSWREQ.COMPANY_ID) \
                GROUP BY DCSWREQ.SW_REQUEST_ID \
            ) SLAEXCP ON SLAEXCP.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
            WHERE \
            DCSWREQ.SW_REQUEST_STATUS_ID IN ('0','1') \
            AND \
                (CASE \
                    WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID>0 THEN NVL(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID) \
                    WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN COALESCE(SLID.SW_REQUEST_ID,SLAEXCP.SW_REQUEST_ID,DCSWREQ.SW_REQUEST_ID) \
                end) = DCSWREQ.SW_REQUEST_ID \
            AND DCSWTYPES.REQUEST_TYPE_ID IN ('2') \
            $company$ $requestType$ $requestDate$ $requestId$ $slaId$ $approverId$ $NOSLA$ $requestsssss$ $requesterUserId$ \
            GROUP BY \
            DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME,DCSWREQ.CONTACT_LAST_NAME,DCSWREQ.CONTACT_EMAIL,\
            DCSWREQ.OTHER_INFORMATION,DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,DCSWTYPES.REQUEST_TYPE_NAME,\
            NVL(DRC.COUNTID,0),REQ_STATUS.LISTAGGSTATUS,\
            CASE \
                WHEN DRC.REQUEST_TYPE_ID=1 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID >0 THEN NVL(SLID.LISTAGGRSLIDS,'Expectional SLA') \
                WHEN DRC.REQUEST_TYPE_ID=2 AND DRC.COUNTID=0 THEN NVL(SLID.LISTAGGRSLIDS,'Generic (click-thru) SLA Coverage') \
            END,\
            MC.COMPANY_NAME,DCSWREQ.REQUEST_DATE,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,\
            NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0),\
            NVL(DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME ,' ') \
    )
    
DELETE_DOCUMENT=DELETE FROM RequestSWS WHERE swRequestId = :requestId AND documentId = :documentId

############ Get All Software Request Status #############

HQL_GET_ALL_SOFTWARE_REQUEST_STATUS=select srs.swReqStatusId, srs.swReqStatusName from SWRequestStatuses srs order by srs.swReqStatusName

############################################################################

GET_SLA_EXP_COMPANIES = SELECT COMPANY_ID FROM CSP.CSP_SLAEXCEPTIONS WHERE PRODUCT_ID IN (SELECT \
				PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE DOCUMENT_ID = :documentId ) AND ACTIVE='Y'
#############################################################################
GET_SW_REQUEST_USERS=SELECT MU.USER_ID,MU.LOGIN_NAME,MC.COMPANY_ID FROM CSP.CSP_SWREQUESTS SWEREQ \
	INNER JOIN CSP.CSP_SWREQUESTUSERS SWREQUSER ON SWREQUSER.SW_REQUEST_ID = SWEREQ.SW_REQUEST_ID \
	INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = SWREQUSER.USER_ID \
	INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID = MU.COMPANY_ID \
	WHERE SWEREQ.SW_REQUEST_ID=? 
	
GET_ACCESS_GRANTED_QUERY=SELECT MU.USER_ID,MU.LOGIN_NAME FROM CSP.CSP_SWREQUESTS SWREQ \
    INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = SWREQ.REQUESTER_ID \
        WHERE SWREQ.SW_REQUEST_ID=? \
        AND SWREQ.GRANT_REQUESTER_ACCESS='Y'
        
DOC_USER_ASSIGN_PROC={CALL CSP.DOCUSERASSIGN(?, ?, ?)}

############ Get Software info for Email ##############

GET_SOFTWARE_INFO_FOR_EMAIL=SELECT cspDoc.document_Id, \
  cspDoc.docFile_Name, \
  docTypes.docType_Name, \
  cspDoc.doc_Title, \
  swReq.cc_emails , \
  (SELECT LISTAGG(product_name, ',') WITHIN GROUP ( \
  ORDER BY product_name) \
  FROM MASTER.MASTER_PRODUCT_TAXONOMY \
  WHERE product_TaxId IN \
    (SELECT product_TaxId \
    FROM csp.csp_product_documents \
    WHERE document_Id IN \
      (SELECT document_Id \
      FROM csp.csp_requestsws \
      WHERE sw_Request_Id=$requestId$ \
      AND document_Id   =reqSws.document_Id \
      ) \
    ) \
  ) AS prodct_Name, \
  swAttr.notes, \
  swCat.swCategory_Desc, \
  (SELECT LISTAGG(customize_cclist, ',') WITHIN GROUP ( \
  ORDER BY customize_cclist) \
  FROM MASTER.MASTER_PRODUCT_TAXONOMY \
  WHERE product_TaxId IN \
    (SELECT product_TaxId \
    FROM csp.csp_product_documents \
    WHERE document_Id IN \
      (SELECT document_Id \
      FROM csp.csp_requestsws \
      WHERE sw_Request_Id=$requestId$ \
      AND document_Id   =reqSws.document_Id \
      ) \
    ) \
  ) AS ccProdEmail \
FROM CSP.CSP_SWREQUESTS swReq \
LEFT OUTER JOIN csp.csp_requestsws reqSws \
ON reqSws.sw_Request_Id        =swReq.sw_Request_Id \
AND reqSws.sw_Approval_Status_Id=4 \
LEFT OUTER JOIN csp.CSP_DOCUMENT cspDoc \
ON cspDoc.document_Id=reqSws.document_Id \
LEFT OUTER JOIN csp.CSP_DOCTYPES docTypes \
ON docTypes.docType_Id=cspDoc.docType_Id \
LEFT OUTER JOIN csp.CSP_SWATTRIBUTES swAttr \
ON swAttr.document_Id=cspDoc.document_Id \
LEFT OUTER JOIN csp.CSP_SDS_L_SWCATEGORIES swCat \
ON swCat.swCategory_Id  =swAttr.swCategory_Id \
WHERE swReq.sw_Request_Id=$requestId$ \
AND reqSws.document_Id    IN($docId$)

#######################################################
GET_APPROVER_DOCS_QUERY=SELECT DCREQSW.DOCUMENT_ID FROM CSP.CSP_REQUESTSWS DCREQSW \
    INNER JOIN CSP.CSP_DOCUMENT DCDOC ON DCDOC.DOCUMENT_ID = DCREQSW.DOCUMENT_ID \
    LEFT JOIN CSP.CSP_SWATTRIBUTES DCSWATT ON DCSWATT.DOCUMENT_ID = DCREQSW.DOCUMENT_ID \
    LEFT JOIN CSP.CSP_SDS_L_SWCATEGORIES DCSWCAT ON DCSWCAT.SWCATEGORY_ID = DCSWATT.SWCATEGORY_ID \
    LEFT JOIN CSP.CSP_SWAPPROVALSTATUSES SWREQSTATUS ON SWREQSTATUS.SW_APPROVAL_STATUS_ID = DCREQSW.SW_APPROVAL_STATUS_ID \
    LEFT JOIN \
    ( SELECT SW_REQUEST_ID,DOCUMENT_ID,PLMID,\
        CASE \
          WHEN INSTR(LISTAGG(ENAME,',') WITHIN GROUP (ORDER BY ENAME),',',1,10)>0 \
            THEN SUBSTR(LISTAGG(ENAME,',') WITHIN GROUP (ORDER BY ENAME),1,INSTR(LISTAGG(ENAME,',') WITHIN GROUP (ORDER BY ENAME),',',1,10)-1 )||'..MORE' \
          ELSE LISTAGG(ENAME,',') WITHIN GROUP (ORDER BY ENAME) \
        END LISTAGGRSENAMES \
        FROM \
        ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPLM.PLMID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME,\
            ROW_NUMBER() OVER (PARTITION BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID ORDER BY DPLM.PLMID ASC) AS RN \
            FROM CSP.CSP_REQUESTSWS DR \
            INNER JOIN CSP.CSP_PRODUCT_DOCUMENTS DP ON DP.DOCUMENT_ID = DR.DOCUMENT_ID \
            INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID  = DP.PRODUCT_TAXID \
            INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPLM.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
            INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DPLM.PLMID \
            WHERE DPLM.ISPRIMARY = 'Y' \
            AND EXISTS \
            ( SELECT PRODUCT_TAXID FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND \
                PRODUCT_TAXID IN \
                (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE DOCUMENT_ID=DP.DOCUMENT_ID \
                ) \
            ) GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPLM.PLMID,MU.FIRST_NAME||' '||MU.LAST_NAME \
            ORDER BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DPLM.PLMID \
         ) WHERE RN<=15 GROUP BY SW_REQUEST_ID,DOCUMENT_ID,PLMID \
    ) PLM ON (PLM.DOCUMENT_ID = DCREQSW.DOCUMENT_ID AND PLM.SW_REQUEST_ID = DCREQSW.SW_REQUEST_ID) \
    LEFT JOIN \
    ( SELECT DOCUMENT_ID,\
        CASE \
          WHEN INSTR(LISTAGG(PRODUCT_NAME,',') WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)>0 \
            THEN SUBSTR(LISTAGG(PRODUCT_NAME,',') WITHIN GROUP (ORDER BY PRODUCT_NAME),1,INSTR(LISTAGG(PRODUCT_NAME,',') WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)-1 )||'..MORE' \
          ELSE LISTAGG(PRODUCT_NAME,',') WITHIN GROUP (ORDER BY PRODUCT_NAME) \
         END LISTAGGRSLIDS FROM \
         (SELECT DPD.DOCUMENT_ID,DPT.PRODUCT_NAME,ROW_NUMBER() OVER (PARTITION BY DPD.DOCUMENT_ID ORDER BY  DPT.PRODUCT_NAME ASC) AS RN \
          FROM CSP.CSP_PRODUCT_DOCUMENTS DPD \
          INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID = DPD.PRODUCT_TAXID \
          ORDER BY 1,2,3 \
         ) WHERE RN<=15 \
         GROUP BY DOCUMENT_ID \
    ) DP ON DP.DOCUMENT_ID = DCREQSW.DOCUMENT_ID \
    LEFT JOIN \
    ( SELECT DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME ENAME \
         FROM CSP.CSP_REQUESTSWS DR,CSP.CSP_DOCUMENTAPPROVER DA,MASTER.MASTER_USER MU,\
         CSP.CSP_PRODUCT_DOCUMENTS DP,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
         WHERE DA.APPROVER_ID = MU.USER_ID \
         AND DP.DOCUMENT_ID = DR.DOCUMENT_ID \
         AND DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
         AND NOT EXISTS \
         (SELECT PRODUCT_TAXID FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL='Y' AND PRODUCT_TAXID IN \
            (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                WHERE DOCUMENT_ID=DP.DOCUMENT_ID \
            )\
         ) \
         AND DR.DOCUMENT_ID=DA.DOCUMENT_ID \
         GROUP BY DR.SW_REQUEST_ID,DR.DOCUMENT_ID,DA.APPROVER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME \
     ) APR ON (APR.DOCUMENT_ID = DCREQSW.DOCUMENT_ID AND APR.SW_REQUEST_ID = DCREQSW.SW_REQUEST_ID) \
     WHERE DCREQSW.SW_APPROVAL_STATUS_ID = 2 \
     AND DCREQSW.SW_REQUEST_ID = ? \
     AND COALESCE(PLM.PLMID,APR.APPROVER_ID)=?
     #############################################################################
GET_SW_DETAILS_BY_DOCIDS= select * from (select distinct d.document_id,dp.listaggrslids as Product,COALESCE(d.doc_number,' ') as docnumber,COALESCE(d.doc_title,' ') as doctitle, \
COALESCE(dsc.SWCATEGORY_DESC,' ') as SWCATEGORYDESC, to_char(dsa.RELEASE_DATE,'MM/DD/YYYY')as RELEASE_DATE,decode(dsa.require_sla,'Y' ,'BASLA','Generic') ApplicableSLA, \
PLM.listaggruser as approvers,dsa.RELEASE_DATE as rdate from CSP.CSP_DOCUMENT d ,CSP.CSP_DOCTYPES dt ,CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc, \
(select document_Id,case  when instr(listagg(product_Name,',') within group (order by product_Name),',',1,10)>0 then substr(listagg(product_Name,',') \
within group (order by product_Name),1,instr(listagg(product_Name,',') within group (order by product_Name),',',1,10)-1 )||'..more' else listagg(product_Name,',') \
within group (order by product_Name)  end listaggrslids from  (SELECT dpd.document_Id,DPT.product_name, ROW_NUMBER() OVER (PARTITION BY dpd.document_Id ORDER BY  \
DPT.product_name ASC) AS rn from  CSP.CSP_PRODUCT_DOCUMENTS dpd, MASTER.MASTER_PRODUCT_TAXONOMY DPT where dPT.product_taxid=dpd.PRODUCT_TAXID  order by 1,2,3) where rn<=15 \
group by document_Id) dp,(SELECT document_Id, plmId, CASE WHEN INSTR ( LISTAGG ( first_name || ' ' || last_name, ',') WITHIN GROUP (ORDER BY first_name || ' ' || last_name), ',', 1, 10) > 0 \
THEN SUBSTR ( LISTAGG ( first_name  || ' '|| last_name, ',') WITHIN GROUP (ORDER BY first_name || ' ' || last_name), 1, INSTR ( LISTAGG ( first_name || ' ' || last_name, ',') \
WITHIN GROUP (ORDER BY first_name || ' '|| last_name), ',', 1, 10) - 1) || '..more' ELSE LISTAGG ( first_name || ' ' || last_name, ',') WITHIN GROUP (ORDER BY first_name  || ' ' || last_name) END \
listaggruser  FROM (SELECT DP.document_Id, dplm.plmid, mu.first_name,mu.last_name,ROW_NUMBER () OVER (PARTITION BY Dp.document_Id ORDER BY mu.first_name, mu.last_name ASC) AS rn \
FROM CSP.CSP_PRODUCT_DOCUMENTS DP, MASTER.MASTER_PRODUCT_TAXONOMY DPT, CSP.CSP_PRODUCT_PLMS dplm, master.master_user mu WHERE 1 = 1 AND DP.product_TAXId = dPT.product_taxid \
AND dPT.product_taxid = dplm.PRODUCT_PLMID AND dplm.plmid = mu.user_id AND dplm.isprimary  = 'Y' AND EXISTS (SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL = 'Y' \
AND product_taxId IN (SELECT product_TAXId FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE document_Id = DP.document_Id)) GROUP BY Dp.document_Id, dplm.plmid, mu.first_name,mu.last_name ORDER BY 1,2,3) \
WHERE rn <= 15 GROUP BY document_Id, plmId) PLM where 1=1 and  d.doctype_id=dt.DOCTYPE_ID and d.DOCUMENT_ID=dsa.document_id \
and dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID and d.ISSOFTWARE='Y' AND d.document_Id=dp.document_Id AND d.document_Id=plm.document_Id \
$PLMapproverId$ and d.audience not in (select audience_id from CSP.CSP_DOCUMENTAUDIENCES where audience ='Public / Non-Requestable') \
and lower(d.status)='available' and dsa.release_date is not null union all select d.document_id,dp.listaggrslids as Product, \
COALESCE(d.doc_number,' ') as docnumber,COALESCE(d.doc_title,' ') as doctitle,COALESCE(dsc.SWCATEGORY_DESC,' ') as SWCATEGORYDESC, \
to_char(dsa.RELEASE_DATE,'MM/DD/YYYY')as RELEASEDATE,decode(dsa.require_sla,'Y' ,'BASLA','Generic') ApplicableSLA,apr.apruser as approvers, \
dsa.RELEASE_DATE as rdate     from CSP.CSP_DOCUMENT d ,CSP.CSP_DOCTYPES dt ,CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc, \
(select document_Id,case  when instr(listagg(product_Name,',') within group (order by product_Name),',',1,10)>0 then \
substr(listagg(product_Name,',') within group (order by product_Name),1,instr(listagg(product_Name,',') within group \
(order by product_Name),',',1,10)-1 )||'..more' else     listagg(product_Name,',') within group (order by product_Name)  end \
listaggrslids from  (SELECT dpd.document_Id,DPT.product_Name, ROW_NUMBER() OVER (PARTITION BY dpd.document_Id ORDER BY  DPT.product_Name ASC) AS rn \
from CSP.CSP_PRODUCT_DOCUMENTS dpd,MASTER.MASTER_PRODUCT_TAXONOMY  DPT where dPT.product_taxid=dpd.PRODUCT_TAXID  order by 1,2,3) where rn<=15 group by \
document_Id) dp,(SELECT Dp.document_Id,           da.APPROVER_ID,           mu.first_name           || ' '           || mu.last_name apruser \
FROM CSP.CSP_PRODUCT_DOCUMENTS DP,           MASTER.MASTER_PRODUCT_TAXONOMY DPT,           CSP.CSP_DOCUMENTAPPROVER da,           master_user mu \
WHERE 1 = 1         AND DP.product_TAXId = dPT.product_taxid         AND NOT EXISTS           (SELECT 1           FROM MASTER.MASTER_PRODUCT_TAXONOMY \
WHERE SW_REQUIRE_APPROVAL = 'Y' AND product_taxId       IN (SELECT product_TAXId FROM CSP.CSP_PRODUCT_DOCUMENTS WHERE document_Id = DP.document_Id  )) \
AND dp.document_Id = da.document_Id         AND da.APPROVER_ID = mu.user_id GROUP BY Dp.document_Id, da.APPROVER_ID, mu.first_name || ' ' || mu.last_name) apr \
where 1=1 and  d.doctype_id=dt.DOCTYPE_ID and d.DOCUMENT_ID=dsa.document_id and dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID and d.ISSOFTWARE='Y' AND d.document_Id=dp.document_Id \
and d.document_Id=apr.document_Id $APRapproverId$ and d.audience not in (select audience_id from CSP.CSP_DOCUMENTAUDIENCES where audience ='Public / Non-Requestable') \
and lower(d.status)='available' and dsa.release_date is not null ) d where d.document_Id in ($doc_ids$)
 #####################################################################################################                              	
GET_SW_DETAILS_BY_FILEGROUP= select * from (select d.document_Id,dp.listaggrslids as Product, \
COALESCE(d.doc_number,' ') as docnumber,COALESCE(d.doc_title    ,' ') as doctitle, \
COALESCE(dsc.SWCATEGORY_DESC  ,' ') as SWCATEGORYDESC,to_char(dsa.release_date  ,'MM/DD/YYYY')as RELEASEDATE, \
decode(dsa.require_sla  ,'Y' ,'BASLA','Generic') ApplicableSLA,PLM.listaggruser as approvers,dsa.release_date as rdate \
from CSP.CSP_DOCUMENT d ,CSP.CSP_DOCTYPES dt ,CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc,(select document_Id, \
case  when instr(listagg(product_Name,',') within group (order by product_Name),',',1,10)>0 \
then substr(listagg(product_Name,',') within group (order by product_Name),1,instr(listagg(product_Name,',') \
within group (order by product_Name),',',1,10)-1 )||'..more' else listagg(product_Name,',') within group (order by product_Name) \
end listaggrslids from  (SELECT dpd.document_Id,DPT.product_Name, ROW_NUMBER() OVER (PARTITION BY dpd.document_Id ORDER BY  DPT.product_Name ASC) AS rn \
from CSP.CSP_PRODUCT_DOCUMENTS dpd,MASTER.MASTER_PRODUCT_TAXONOMY   DPT where dPT.product_taxid=dpd.PRODUCT_TAXID  order by 1,2,3) where rn<=15 \
group by document_Id) dp,(select document_Id,plmId 	,case when instr(listagg(first_name||' '||last_name,',') within \
group (order by first_name||' '||last_name),',',1,10)>0 then substr(listagg(first_name||' '||last_name,',') within group \
(order by first_name||' '||last_name),1,instr(listagg(first_name||' '||last_name,',') within group (order by first_name||' '||last_name),',',1,10)-1 ) \
||'..more' 	  else listagg(first_name||' '||last_name,',') within group (order by first_name||' '||last_name)  end listaggruser \
from (SELECT DP.document_Id, dplm.plmid,mu.first_name,mu.last_name, ROW_NUMBER() OVER (PARTITION BY Dp.document_Id ORDER BY  \
mu.first_name,mu.last_name ASC) AS rn 	FROM 	 CSP.CSP_PRODUCT_DOCUMENTS DP 	,MASTER.MASTER_PRODUCT_TAXONOMY  DPT,CSP.CSP_PRODUCT_PLMS dplm, \
master.master_user mu 	WHERE 1=1 	AND DP.product_TAXId=dPT.product_taxid 	and dPT.product_taxid=dplm.PRODUCT_TAXID and dplm.plmid=mu.user_id 	\
and dplm.isprimary='Y' 	and exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where SW_REQUIRE_APPROVAL='Y' and \
product_taxId in (select product_TAXId from CSP.CSP_PRODUCT_DOCUMENTS where document_Id=DP.document_Id )) group by Dp.document_Id, \
dplm.plmid,mu.first_name,mu.last_name 	order by 1,2,3 	) where rn<=15 	group by document_Id,plmId) PLM where 1=1 and \
d.doctype_id=dt.DOCTYPE_ID and d.document_Id=dsa.document_Id  and dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID and d.ISSOFTWARE='Y' \
AND d.document_Id=dp.document_Id AND d.document_Id=plm.document_Id $PLMapproverId$ and d.audience not in \
(select audience_id from CSP.CSP_DOCUMENTAUDIENCES where audience ='Public / Non-Requestable') and lower(d.status)='available' \
and dsa.release_date   is not null 	union all 	select d.document_Id,dp.listaggrslids as Product, \
COALESCE(d.doc_number  ,' ') as docnumber,COALESCE(d.doc_title,' ') as doctitle,COALESCE(dsc.SWCATEGORY_DESC  ,' ') \
as SWCATEGORYDESC, to_char(dsa.release_date  ,'MM/DD/YYYY')as RELEASEDATE, decode(dsa.require_sla  ,'Y' ,'BASLA','Generic') \
ApplicableSLA,apr.apruser as approvers,dsa.release_date   as rdate from CSP.CSP_DOCUMENT d ,CSP.CSP_DOCTYPES dt, \
CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc,(select document_Id,case  when instr(listagg(product_Name,',') \
within group (order by product_Name),',',1,10)>0 then substr(listagg(product_Name,',') within group (order by product_Name), \
1,instr(listagg(product_Name,',') within group (order by product_Name),',',1,10)-1 )||'..more' else listagg(product_Name,',') \
within group (order by product_Name)  end listaggrslids from  (SELECT dpd.document_Id,DPT.product_Name, ROW_NUMBER() OVER (PARTITION BY \
dpd.document_Id ORDER BY  DPT.product_Name ASC) AS rn from CSP.CSP_PRODUCT_DOCUMENTS dpd,MASTER.MASTER_PRODUCT_TAXONOMY DPT \
where dPT.product_taxid=dpd.PRODUCT_TAXID  order by 1,2,3) where rn<=15 group by document_Id) dp,(select Dp.document_Id,da.APPROVER_ID, \
mu.first_name||' '||mu.last_name apruser from CSP.CSP_PRODUCT_DOCUMENTS DP,MASTER.MASTER_PRODUCT_TAXONOMY DPT, CSP.CSP_DOCUMENTAPPROVER da, \
master.master_user mu 	where 1=1 	AND DP.product_TAXId=dPT.product_taxid 	and not exists  (select 1 from MASTER.MASTER_PRODUCT_TAXONOMY where \
SW_REQUIRE_APPROVAL='Y' and   product_taxId in (select product_TAXId from CSP.CSP_PRODUCT_DOCUMENTS where document_Id=DP.document_Id )) and \
dp.document_Id=da.document_Id 	and da.APPROVER_ID=mu.user_id 	group by Dp.document_Id , da.APPROVER_ID,mu.first_name||' '||mu.last_name) apr \
where 1=1  and  d.doctype_id  =dt.doctype_id and d.document_Id=dsa.document_Id and dsa.SWCATEGORY_ID   =dsc.SWCATEGORY_ID       and d.ISSOFTWARE='Y' \
AND d.document_Id=dp.document_Id and d.document_Id=apr.document_Id $APRapproverId$ and d.audience not in (select audience_id   from CSP.CSP_DOCUMENTAUDIENCES \
where audience='Public / Non-Requestable')  and lower(d.status)='available'and dsa.release_date   is not null ) d where d.document_Id in \
(select ds.document_Id from CSP.CSP_DOCSETS s,CSP.CSP_DOCSETDOCUMENTS ds where s.doc_set_id=ds.doc_set_id and s.active='Y' and s.type='S' and s.DOC_SET_NAME like '%$docset_name$%') 
######################################################################################################
GET_SW_DETAILS_BY_ACCESS= select * from (SELECT  d.document_id,dp.listaggrslids AS product_Name, COALESCE (d.doc_number, ' ') AS softwareNumber,COALESCE (d.doc_title, ' ') AS softwareTitle, \
COALESCE (dsc.SWCATEGORY_DESC, ' ') AS softwareCategory, TO_CHAR (dsa.RELEASE_DATE, 'MM/DD/YYYY') AS rdate,DECODE (dsa.require_sla, 'Y', 'BASLA', 'Generic') applicableSLA, PLM.listaggruser AS approvers, \
dsa.RELEASE_DATE AS releaseDate,d.audience FROM CSP.CSP_DOCUMENT d, CSP.CSP_DOCTYPES dt, CSP.CSP_SWATTRIBUTES dsa,CSP.CSP_SDS_L_SWCATEGORIES dsc,(  SELECT document_Id, CASE  WHEN INSTR ( LISTAGG (product_Name, ',') \
WITHIN GROUP (ORDER BY product_Name), ',',1,10) > 0 THEN SUBSTR (LISTAGG (product_Name, ',')WITHIN GROUP (ORDER BY product_Name),1, INSTR (LISTAGG (product_Name, ',') WITHIN GROUP \
(ORDER BY product_Name),',',1,10)- 1)|| '..more' ELSE LISTAGG (product_Name, ',') WITHIN GROUP (ORDER BY product_Name) END listaggrslids FROM (  SELECT  dpd.document_Id,DPT.product_Name,ROW_NUMBER () \
OVER (PARTITION BY dpd.document_Id ORDER BY DPT.product_Name ASC) AS rn FROM CSP.CSP_PRODUCT_DOCUMENTS dpd, MASTER.MASTER_PRODUCT_TAXONOMY DPT WHERE dPT.product_taxid = dpd.PRODUCT_TAXID ORDER BY 1, 2, 3)  \
WHERE rn <= 15 GROUP BY document_Id) dp, (SELECT document_Id, CASE WHEN INSTR (LISTAGG (first_name || ' ' || last_name, ',') WITHIN GROUP (ORDER BY  first_name || ' '|| last_name), ',',1, 10) > 0 THEN \
SUBSTR (LISTAGG (first_name || ' ' || last_name,',') WITHIN GROUP (ORDER BY first_name || ' '|| last_name), 1,INSTR (LISTAGG (first_name || ' ' || last_name,',') WITHIN GROUP (ORDER BY first_name || ' ' || last_name),',',1,10)- 1) || '..more' \
 ELSE LISTAGG (first_name || ' ' || last_name,',') WITHIN GROUP (ORDER BY first_name || ' ' || last_name) END listaggruser FROM (SELECT DP.document_Id, dplm.plmid,mu.first_name,mu.last_name,ROW_NUMBER () OVER (PARTITION BY Dp.document_Id \
 ORDER BY mu.first_name, mu.last_name ASC) AS rn FROM CSP.CSP_PRODUCT_DOCUMENTS DP, MASTER.MASTER_PRODUCT_TAXONOMY DPT, CSP.CSP_PRODUCT_PLMS dplm,master.master_user mu WHERE 1 = 1 AND DP.product_TAXId = dPT.product_taxid AND \
 dPT.product_taxid = dplm.PRODUCT_TAXID AND dplm.plmid = mu.user_id AND dplm.isprimary = 'Y' AND EXISTS  (SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE  SW_REQUIRE_APPROVAL = 'Y' AND product_taxId IN(SELECT product_TAXId FROM CSP.CSP_PRODUCT_DOCUMENTS \
 WHERE document_Id =DP.document_Id)) GROUP BY Dp.document_Id,dplm.plmid, mu.first_name, mu.last_name ORDER BY 1, 2, 3) WHERE rn <= 15  GROUP BY document_Id) PLM   WHERE   1 = 1 AND d.doctype_id = dt.DOCTYPE_ID AND d.DOCUMENT_ID = dsa.document_id AND \
 dsa.SWCATEGORY_ID = dsc.SWCATEGORY_ID AND d.ISSOFTWARE = 'Y' AND d.document_Id = dp.document_Id AND d.document_Id = plm.document_Id $PLMapproverId$ AND d.audience NOT IN (SELECT audience_id FROM CSP.CSP_DOCUMENTAUDIENCES WHERE audience = 'Public / Non-Requestable') \
AND LOWER (d.status) = 'available' AND dsa.release_date IS NOT NULL  $doc_title_search_condition$  UNION ALL SELECT d.document_id, dp.listaggrslids AS product_Name, COALESCE (d.doc_number, ' ') AS softwareNumber, COALESCE (d.doc_title, ' ') AS softwareTitle, \
COALESCE (dsc.SWCATEGORY_DESC, ' ') AS softwareCategory,TO_CHAR (dsa.RELEASE_DATE, 'MM/DD/YYYY') AS rdate,DECODE (dsa.require_sla, 'Y', 'BASLA', 'Generic') applicableSLA,apr.apruser AS approvers,dsa.RELEASE_DATE AS releaseDate,d.audience FROM CSP.CSP_DOCUMENT d, \
CSP.CSP_DOCTYPES dt,  CSP.CSP_SWATTRIBUTES dsa, CSP.CSP_SDS_L_SWCATEGORIES dsc,( SELECT document_Id,CASE  WHEN INSTR (LISTAGG (product_Name, ',') WITHIN GROUP (ORDER BY product_Name),',',1, 10) > 0    THEN   SUBSTR (LISTAGG (product_Name, ',') WITHIN GROUP \
(ORDER BY product_Name), 1,INSTR (LISTAGG (product_Name, ',')WITHIN GROUP (ORDER BY product_Name),',', 1,10)- 1)|| '..more' ELSE LISTAGG (product_Name, ',') WITHIN GROUP (ORDER BY product_Name) END listaggrslids FROM \
(SELECT dpd.document_Id,DPT.product_Name, ROW_NUMBER () OVER (PARTITION BY dpd.document_Id ORDER BY DPT.product_Name ASC) AS rn FROM  CSP.CSP_PRODUCT_DOCUMENTS dpd, MASTER.MASTER_PRODUCT_TAXONOMY DPT WHERE dPT.product_taxid = dpd.PRODUCT_TAXID \
ORDER BY 1, 2, 3) WHERE rn <= 15 GROUP BY document_Id) dp,(SELECT Dp.document_Id,da.APPROVER_ID,mu.first_name || ' ' || mu.last_name apruser  FROM CSP.CSP_PRODUCT_DOCUMENTS DP, MASTER.MASTER_PRODUCT_TAXONOMY DPT,CSP.CSP_DOCUMENTAPPROVER da, \
master.master_user mu WHERE     1 = 1  AND DP.product_TAXId = dPT.product_taxid AND NOT EXISTS (SELECT 1 FROM MASTER.MASTER_PRODUCT_TAXONOMY WHERE SW_REQUIRE_APPROVAL = 'Y' AND product_taxId IN (SELECT product_TAXId FROM CSP.CSP_PRODUCT_DOCUMENTS \
WHERE document_Id =DP.document_Id)) AND dp.document_Id = da.document_Id AND da.APPROVER_ID = mu.user_id GROUP BY Dp.document_Id,da.APPROVER_ID, mu.first_name || ' ' || mu.last_name) apr WHERE 1 = 1 AND d.doctype_id = dt.DOCTYPE_ID \
AND d.DOCUMENT_ID = dsa.document_id AND dsa.SWCATEGORY_ID = dsc.SWCATEGORY_ID AND d.ISSOFTWARE = 'Y' AND d.document_Id = dp.document_Id AND d.document_Id = apr.document_Id $APRapproverId$ AND LOWER (d.status) = 'available' \
AND dsa.release_date IS NOT NULL AND d.audience NOT IN  (SELECT audience_id FROM CSP.CSP_DOCUMENTAUDIENCES WHERE audience = 'Public / Non-Requestable') $doc_title_search_condition$ ) $prod_search_condition$ 

FETCH_COMPANY_NAMES_BY_USER_GROUP= \
SELECT A.company_name,A.company_id,listagg(A.slaids,',') within group (order by A.slaids) slaIds FROM (select c.company_name,c.company_id,nvl(sla.slaId,'Not Assigned') slaids \
	        from master.master_company c   \
	        ,(SELECT    gs.COMPANY_ID ,g.GROUP_NAME,listagg(sla_Id,',') within group (order by sla_Id) slaId FROM CSP.CSP_SLA_GROUP g   \
	        , CSP.CSP_SLA_GROUPSLA gs   \
	        where g.group_id=gs.group_id \
	        and g.GROUP_NAME= :groupName   \
	        group by gs.COMPANY_ID ,g.GROUP_NAME) sla   \
	        where c.company_id=sla.COMPANY_ID \
	   UNION SELECT \
	DISTINCT  \
	MC.COMPANY_NAME AS companyName, \
	MC.COMPANY_ID AS COMPANY_ID, \
	NULL  \
FROM \
	MASTER.MASTER_USER MU \
JOIN CSP.CSP_SLA_USER_GROUP UG ON \
	MU.USER_ID = UG.USER_ID \
JOIN MASTER.MASTER_COMPANY MC ON \
	MU.COMPANY_ID = MC.COMPANY_ID \
JOIN CSP.CSP_SLA_GROUP SG ON  \
	SG.GROUP_ID=UG.GROUP_ID \
WHERE \
	MU.ACTIVE_FLAG = 'Y' \
	AND SG.GROUP_NAME = :groupName )A GROUP BY A.company_name,A.COMPANY_ID
	        
GET_ALL_SOFTWARE_DETAILS_BY_ACCESS=\
SELECT  \
/*+  LEADING(@"SEL$9FA07308" "MASTER_PRODUCT_TAXONOMY"@"SEL$18" "CSP_PRODUCT_DOCUMENTS"@"SEL$19" "DP"@"SEL$14" "DPLM"@"SEL$15" "MU"@"SEL$16")  */ a.document_id, \
a.product,  \
a.softwarenumber,  \
a.title,  \
a.category,  \
a.releasedate,  \
a.applicablesla,  \
a.approvers,  \
a.releasedate2,  \
a.audience  \
FROM   (SELECT d.document_id, \
               dp.listaggrslids  AS  \
               product,  \
               Coalesce(d.doc_number, ' ')   AS  \
                       softwarenumber,  \
               Coalesce(d.doc_title, ' ')  AS  \
               title,  \
               Coalesce(dsc.swcategory_desc, ' ') AS  \
               category  \
                      ,  \
               To_date(To_char(dsa.release_date, 'DD-MON-RR'),  \
               'DD-MON-RR') AS  \
                       releasedate,  \
               Decode(dsa.require_sla, 'Y', 'BASLA',  \
                                       'Generic')   AS  \
                       applicablesla,  \
               plm.listaggruser AS  \
                      approvers  \
                       ,  \
               dsa.release_date  \
                       AS releasedate2,  \
               d.audience  \
        FROM   csp.csp_document d  \
               inner join csp.csp_documentaudiences da \
                       ON d.audience = da.audience_id  \
               inner join csp.csp_doctypes dt  \
                       ON d.doctype_id = dt.doctype_id  \
               inner join csp.csp_swattributes dsa  \
                       ON d.document_id = dsa.document_id  \
               inner join csp.csp_sds_l_swcategories dsc  \
                       ON dsa.swcategory_id = dsc.swcategory_id  \
               inner join (SELECT  \
                                 l.document_id,  \
                                  CASE  \
                                    WHEN Instr(Listagg(l.product_name, ',')  \
                                                 within GROUP(ORDER BY  \
                                                 l.product_name),  \
                                         ',', 1,  \
                                         10) > 0 THEN  \
                                    Substr(Listagg(l.product_name, ',')  \
                                  within GROUP(ORDER BY l.product_name), 1,  \
                                    Instr(  \
                                  Listagg(l.product_name, ',')  \
                                  within GROUP(ORDER BY l.product_name), ',', 1,  \
                                    10)  \
                                    - 1  \
                                    ) \
                                  || '..more'  \
                                    ELSE Listagg(l.product_name, ',')  \
                                           within GROUP(ORDER BY l.product_name)  \
                                  END listaggrslids  \
                           FROM   (SELECT k.document_id,  \
                                          k.product_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY k.document_id  \
                                              ORDER BY k.product_name ASC ) AS  \
                                          rn  \
                                   FROM   (SELECT DISTINCT dpd.document_id,  \
                                                           dpt.product_name  \
                                           FROM   csp.csp_product_documents dpd  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dpd.product_taxid =  \
                                             dpt.product_taxid) k) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) dp  \
                       ON d.document_id = dp.document_id  \
               inner join (SELECT l.document_id,  \
                                  CASE  \
                                    WHEN Instr(Listagg(l.full_name, ',')  \
                                                 within GROUP(ORDER BY  \
                                                 l.full_name),  \
                                         ','  \
                                         , 1, 10  \
                                         ) > 0 THEN  \
                                    Substr(  \
                                    Listagg(l.full_name, ',')  \
                                  within GROUP(ORDER BY l.full_name), 1, Instr(  \
                                    Listagg(l.full_name, ',')  \
                                  within GROUP(ORDER BY l.full_name), ',', 1, 10  \
                                    ) - 1)  \
                                  || '..more'  \
                                    ELSE Listagg(l.full_name, ',')  \
                                           within GROUP(ORDER BY l.full_name)  \
                                  END listaggruser  \
                           FROM   (SELECT p.document_id,  \
                                          p.full_name                    AS  \
                                          full_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY p.document_id  \
                                              ORDER BY p.full_name ASC ) AS rn  \
                                   FROM   (SELECT DISTINCT dp.document_id,  \
                                                           mu.first_name  \
                                                           || ' '  \
                                                           || mu.last_name AS  \
                                                           full_name  \
                                           FROM   csp.csp_product_documents dp  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dp.product_taxid =  \
                                             dpt.product_taxid  \
                                  inner join csp.csp_product_plms dplm  \
                                          ON dpt.product_taxid =  \
                                             dplm.product_taxid  \
                                  inner join master.master_user mu  \
                                          ON dplm.plmid = mu.user_id  \
                                           WHERE  1 = 1  \
                                                  AND dplm.isprimary = 'Y'  \
                                                  AND EXISTS  \
                                  (SELECT 1  \
                                   FROM   master.master_product_taxonomy  \
                                   WHERE  sw_require_approval = 'Y'  \
                                          AND product_taxid IN  \
                                  (SELECT product_taxid  \
                                   FROM   csp.csp_product_documents  \
                                   WHERE  document_id =  \
                                          dp.document_id))) p  \
                                  ) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) plm  \
                       ON d.document_id = plm.document_id  \
        WHERE  1 = 1  \
               AND d.issoftware = 'Y'  \
               AND Lower(d.status) = 'available'  \
               AND dsa.release_date IS NOT NULL  \
               AND da.audience <> 'Public / Non-Requestable'  \
			   $doc_title_search_condition$ \
        UNION  \
        SELECT d.document_id,  \
               dp.listaggrslids AS  \
               product,  \
               Coalesce(d.doc_number, ' ') AS  \
               softwarenumber,  \
               Coalesce(d.doc_title, ' ')  AS \
               title, \
               Coalesce(dsc.swcategory_desc, ' ')  AS \
               category , \
               To_date(To_char(dsa.release_date, 'DD-MON-RR'), 'DD-MON-RR') AS  \
               releasedate,  \
               Decode(dsa.require_sla, 'Y', 'BASLA',  \
                                       'Generic')  \
               applicablesla,  \
               apr.apruser  AS  \
               approvers  \
               ,  \
               dsa.release_date  AS \
               releasedate2,  \
               d.audience  \
        FROM   csp.csp_document d  \
               inner join csp.csp_documentaudiences da  \
                       ON d.audience = da.audience_id  \
               inner join csp.csp_doctypes dt  \
                       ON d.doctype_id = dt.doctype_id  \
               inner join csp.csp_swattributes dsa  \
                       ON d.document_id = dsa.document_id  \
               inner join csp.csp_sds_l_swcategories dsc  \
                       ON dsa.swcategory_id = dsc.swcategory_id  \
               inner join (SELECT  \
                                 l.document_id,  \
                                  CASE  \
                                    WHEN Instr(Listagg(l.product_name, ',')  \
                                                 within GROUP(ORDER BY  \
                                                 l.product_name),  \
                                         ',', 1,  \
                                         10) > 0 THEN  \
                                    Substr(Listagg(l.product_name, ',')  \
                                  within GROUP(ORDER BY l.product_name), 1,  \
                                    Instr(  \
                                  Listagg(l.product_name, ',')  \
                                  within GROUP(ORDER BY l.product_name), ',', 1,  \
                                    10)  \
                                    - 1  \
                                    )  \
                                  || '..more'  \
                                    ELSE Listagg(l.product_name, ',')  \
                                           within GROUP(ORDER BY l.product_name)  \
                                  END listaggrslids  \
                           FROM   (SELECT k.document_id,  \
                                          k.product_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY k.document_id  \
                                              ORDER BY k.product_name ASC ) AS  \
                                          rn  \
                                   FROM   (SELECT DISTINCT dpd.document_id,  \
                                                           dpt.product_name  \
                                           FROM   csp.csp_product_documents dpd  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dpd.product_taxid =  \
                                             dpt.product_taxid) k) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) dp  \
                       ON d.document_id = dp.document_id  \
               inner join (SELECT n.document_id,  \
                                  CASE  \
                                    WHEN Instr(Listagg(n.apruser, ',')  \
                                                 within GROUP(ORDER BY  \
                                                 n.apruser), ',',  \
                                         1, 10)  \
                                         > 0 THEN  \
                                    Substr(  \
                                    Listagg(n.apruser, ',')  \
                                  within GROUP(ORDER BY n.apruser), 1, Instr(  \
                                    Listagg(n.apruser, ',')  \
                                  within GROUP(ORDER BY n.apruser), ',', 1, 10)  \
                                    - 1)  \
                                  || '..more'  \
                                    ELSE Listagg(n.apruser, ',')  \
                                           within GROUP(ORDER BY n.apruser)  \
                                  END apruser  \
                           FROM   (SELECT p.document_id,  \
                                          p.apruser,  \
                                          Row_number()  \
                                            over( \
                                              PARTITION BY p.document_id  \
                                              ORDER BY p.apruser ASC ) AS rn  \
                                   FROM   (SELECT DISTINCT dp.document_id,  \
                                                           mu.first_name  \
                                                           || ' '  \
                                                           || mu.last_name AS  \
                                                           apruser  \
                                           FROM   csp.csp_product_documents dp  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dp.product_taxid =  \
                                             dpt.product_taxid  \
                                  inner join csp.csp_documentapprover da  \
                                          ON dp.document_id = da.document_id  \
                                  inner join master.master_user mu  \
                                          ON da.approver_id = mu.user_id  \
                                           WHERE  1 = 1  \
                                                  AND NOT EXISTS  \
                                          (SELECT 1  \
                                           FROM   master.master_product_taxonomy  \
                                           WHERE  sw_require_approval = 'Y'  \
                                                  AND product_taxid IN  \
                                          (SELECT product_taxid  \
                                           FROM   csp.csp_product_documents  \
                                           WHERE  document_id = dp.document_id  \
                                          ))) p) n  \
                           WHERE  n.rn <= 15  \
                           GROUP  BY n.document_id) apr  \
                       ON d.document_id = apr.document_id  \
        WHERE  1 = 1  \
               AND d.issoftware = 'Y'  \
               AND Lower(d.status) = 'available'  \
               AND dsa.release_date IS NOT NULL  \
               AND da.audience <> 'Public / Non-Requestable' \
			   $doc_title_search_condition$ \
			   ) a  \
			   $prod_search_condition$ \

GET_ALL_SOFTWARE_COUNT_BY_ACCESS=\
SELECT count(*) FROM ( \
SELECT  \
a.document_id \
FROM   (SELECT d.document_id \
        FROM   csp.csp_document d  \
               inner join csp.csp_documentaudiences da \
                       ON d.audience = da.audience_id  \
               inner join csp.csp_doctypes dt  \
                       ON d.doctype_id = dt.doctype_id  \
               inner join csp.csp_swattributes dsa  \
                       ON d.document_id = dsa.document_id  \
               inner join csp.csp_sds_l_swcategories dsc  \
                       ON dsa.swcategory_id = dsc.swcategory_id  \
               inner join (SELECT  \
                                 l.document_id  \
                           FROM   (SELECT k.document_id,  \
                                          k.product_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY k.document_id  \
                                              ORDER BY k.product_name ASC ) AS  \
                                          rn  \
                                   FROM   (SELECT DISTINCT dpd.document_id,  \
                                                           dpt.product_name  \
                                           FROM   csp.csp_product_documents dpd  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dpd.product_taxid =  \
                                             dpt.product_taxid) k) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) dp  \
                       ON d.document_id = dp.document_id  \
               inner join (SELECT l.document_id  \
                           FROM   (SELECT p.document_id,  \
                                          p.full_name                    AS  \
                                          full_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY p.document_id  \
                                              ORDER BY p.full_name ASC ) AS rn  \
                                   FROM   (SELECT DISTINCT dp.document_id,  \
                                                           mu.first_name  \
                                                           || ' '  \
                                                           || mu.last_name AS  \
                                                           full_name  \
                                           FROM   csp.csp_product_documents dp  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dp.product_taxid =  \
                                             dpt.product_taxid  \
                                  inner join csp.csp_product_plms dplm  \
                                          ON dpt.product_taxid =  \
                                             dplm.product_taxid  \
                                  inner join master.master_user mu  \
                                          ON dplm.plmid = mu.user_id  \
                                           WHERE  1 = 1  \
                                                  AND dplm.isprimary = 'Y'  \
                                                  AND EXISTS  \
                                  (SELECT 1  \
                                   FROM   master.master_product_taxonomy  \
                                   WHERE  sw_require_approval = 'Y'  \
                                          AND product_taxid IN  \
                                  (SELECT product_taxid  \
                                   FROM   csp.csp_product_documents  \
                                   WHERE  document_id =  \
                                          dp.document_id))) p  \
                                  ) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) plm  \
                       ON d.document_id = plm.document_id  \
        WHERE  1 = 1  \
               AND d.issoftware = 'Y'  \
               AND Lower(d.status) = 'available'  \
               AND dsa.release_date IS NOT NULL  \
               AND da.audience <> 'Public / Non-Requestable'  \
			   $doc_title_search_condition$ \
        UNION  \
        SELECT d.document_id \
        FROM   csp.csp_document d  \
               inner join csp.csp_documentaudiences da  \
                       ON d.audience = da.audience_id  \
               inner join csp.csp_doctypes dt  \
                       ON d.doctype_id = dt.doctype_id  \
               inner join csp.csp_swattributes dsa  \
                       ON d.document_id = dsa.document_id  \
               inner join csp.csp_sds_l_swcategories dsc  \
                       ON dsa.swcategory_id = dsc.swcategory_id  \
               inner join (SELECT  \
                                 l.document_id  \
                           FROM   (SELECT k.document_id,  \
                                          k.product_name,  \
                                          Row_number()  \
                                            over(  \
                                              PARTITION BY k.document_id  \
                                              ORDER BY k.product_name ASC ) AS  \
                                          rn  \
                                   FROM   (SELECT DISTINCT dpd.document_id,  \
                                                           dpt.product_name  \
                                           FROM   csp.csp_product_documents dpd  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dpd.product_taxid =  \
                                             dpt.product_taxid) k) l  \
                           WHERE  l.rn <= 15  \
                           GROUP  BY l.document_id) dp  \
                       ON d.document_id = dp.document_id  \
               inner join (SELECT n.document_id  \
                           FROM   (SELECT p.document_id,  \
                                          p.apruser,  \
                                          Row_number()  \
                                            over( \
                                              PARTITION BY p.document_id  \
                                              ORDER BY p.apruser ASC ) AS rn  \
                                   FROM   (SELECT DISTINCT dp.document_id,  \
                                                           mu.first_name  \
                                                           || ' '  \
                                                           || mu.last_name AS  \
                                                           apruser  \
                                           FROM   csp.csp_product_documents dp  \
                                  inner join master.master_product_taxonomy dpt  \
                                          ON dp.product_taxid =  \
                                             dpt.product_taxid  \
                                  inner join csp.csp_documentapprover da  \
                                          ON dp.document_id = da.document_id  \
                                  inner join master.master_user mu  \
                                          ON da.approver_id = mu.user_id  \
                                           WHERE  1 = 1  \
                                                  AND NOT EXISTS  \
                                          (SELECT 1  \
                                           FROM   master.master_product_taxonomy  \
                                           WHERE  sw_require_approval = 'Y'  \
                                                  AND product_taxid IN  \
                                          (SELECT product_taxid  \
                                           FROM   csp.csp_product_documents  \
                                           WHERE  document_id = dp.document_id  \
                                          ))) p) n  \
                           WHERE  n.rn <= 15  \
                           GROUP  BY n.document_id) apr  \
                       ON d.document_id = apr.document_id  \
        WHERE  1 = 1  \
               AND d.issoftware = 'Y'  \
               AND Lower(d.status) = 'available'  \
               AND dsa.release_date IS NOT NULL  \
               AND da.audience <> 'Public / Non-Requestable' \
			   $doc_title_search_condition$ \
			   ) a  \
			   $prod_search_condition$ \
			   ) \    



GET_ALL_SOFTWARE_MV_DETAILS_BY_ACCESS= \
SELECT                                                                                                                                                                                                                                                                 \
            DISTINCT(a.document_id),                                                                                                                                                                                                            \
            a.product,                                                                                                                                                                                                                                              \
            a.softwarenumber,                                                                                                                                                                                                                           \
            a.title,                                                                                                                                                                                                                                                     \
            a.category,                                                                                                                                                                                                                                            \
            a.releasedate,                                                                                                                                                                                                                                     \
            a.applicablesla,                                                                                                                                                                                                                                   \
            a.approvers,                                                                                                                                                                                                                                         \
            a.releasedate2,                                                                                                                                                                                                                                   \
            a.audience,                                                                                                                                                                                                                                           \
			a.DOCFILE_NAME                                                                                                                                                                                                                               \
        FROM                                                                                                                                                                                                                                                          \
            (                                                                                                                                                                                                                                                                 \
                SELECT                                                                                                                                                                                                                                                 \
                    d.document_id,                                                                                                                                                                                                                          \
                    dp.listaggrslids AS product,                                                                                                                                                                                                   \
                    coalesce(d.doc_number,' ') AS softwarenumber,                                                                                                                                                        \
                    coalesce(d.doc_title,' ') AS title,                                                                                                                                                                                          \
                    coalesce(dsc.swcategory_desc,' ') AS category,                                                                                                                                                            \
                    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS releasedate,                                                                                \
                    DECODE(dsa.require_sla,'Y','BASLA','Generic') AS applicablesla,                                                                                                                          \
                    plm.listaggruser AS approvers,                                                                                                                                                                                            \
                    dsa.release_date AS releasedate2,                                                                                                                                                                                    \
                    d.audience,                                                                                                                                                                                                                                  \
					d.DOCFILE_NAME                                                                                                                                                                                                                       \
                FROM                                                                                                                                                                                                                                                  \
                    csp.csp_document d                                                                                                                                                                                                                 \
                    INNER JOIN csp.csp_documentaudiences da ON d.audience = da.audience_id                                                                                             \
                    INNER JOIN csp.csp_doctypes dt ON d.doctype_id = dt.doctype_id                                                                                                                    \
                    INNER JOIN csp.csp_swattributes dsa ON d.document_id = dsa.document_id                                                                                               \
                    INNER JOIN csp.csp_sds_l_swcategories dsc ON dsa.swcategory_id = dsc.swcategory_id                                                                         \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggrslids                                                                                                                                                                                                                          \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    k.document_id,                                                                                                                                                                                                          \
                                    k.product_name,                                                                                                                                                                                                        \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY k.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            k.product_name ASC                                                                                                                                                                                        \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dpd.document_id,                                                                                                                                                                                             \
                                            dpt.product_name                                                                                                                                                                                            \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dpd                                                                                                                                                               \
                                            INNER JOIN master.master_product_taxonomy dpt ON dpd.product_taxid = dpt.product_taxid                                   \
                                    ) k                                                                                                                                                                                                                                      \
                            ) l                                                                                                                                                                                                                                    \
                        $prod_search_condition$                                                                                                                                                                                                   \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) dp ON d.document_id = dp.document_id                                                                                                                                                                    \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggruser                                                                                                                                                                                                                           \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    p.document_id,                                                                                                                                                                                                          \
                                    p.full_name AS full_name,                                                                                                                                                                                    \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY p.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            p.full_name ASC                                                                                                                                                                                                 \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dp.document_id,                                                                                                                                                                                               \
                                            mu.first_name                                                                                                                                                                                                    \
                                            || ' '                                                                                                                                                                                                                          \
                                               || mu.last_name AS full_name                                                                                                                                                                \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dp                                                                                                                                                                  \
                                            INNER JOIN master.master_product_taxonomy dpt ON dp.product_taxid = dpt.product_taxid                                     \
                                            INNER JOIN csp.csp_product_plms dplm ON dpt.product_taxid = dplm.product_taxid                                                      \
                                            INNER JOIN master.master_user mu ON dplm.plmid = mu.user_id                                                                                             \
                                        WHERE                                                                                                                                                                                                                        \
                                            1 = 1                                                                                                                                                                                                                          \
                                            AND dplm.isprimary = 'Y'                                                                                                                                                                                \
                                                AND dplm.record_activity = 'Y'                                                                                                                                                                 \
                                                    AND EXISTS (                                                                                                                                                                                                \
                                                SELECT                                                                                                                                                                                                                 \
                                                    1                                                                                                                                                                                                                        \
                                                FROM                                                                                                                                                                                                                  \
                                                    master.master_product_taxonomy                                                                                                                                                   \
                                                WHERE                                                                                                                                                                                                                \
                                                    sw_require_approval = 'Y'                                                                                                                                                                      \
                                                    AND product_taxid IN (                                                                                                                                                                           \
                                                        SELECT                                                                                                                                                                                                         \
                                                            product_taxid                                                                                                                                                                                      \
                                                        FROM                                                                                                                                                                                                          \
                                                            csp.csp_product_documents                                                                                                                                                        \
                                                        WHERE                                                                                                                                                                                                        \
                                                            document_id = dp.document_id                                                                                                                                                 \
                                                    )                                                                                                                                                                                                                         \
                                            )                                                                                                                                                                                                                                 \
                                    ) p                                                                                                                                                                                                                                     \
                            ) l                                                                                                                                                                                                                                               \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) plm ON d.document_id = plm.document_id                                                                                                                                                               \
                WHERE                                                                                                                                                                                                                                                \
                    1 = 1                                                                                                                                                                                                                                                  \
                    AND d.issoftware = 'Y'                                                                                                                                                                                                              \
                        AND lower(d.status) = 'available'                                                                                                                                                                                    \
                            AND dsa.release_date IS NOT NULL                                                                                                                                                                           \
                                AND da.audience <> 'Public / Non-Requestable'                                                                                                                                             \
                UNION                                                                                                                                                                                                                                                \
                SELECT                                                                                                                                                                                                                                                 \
                    d.document_id,                                                                                                                                                                                                                          \
                    dp.listaggrslids AS product,                                                                                                                                                                                                   \
                    coalesce(d.doc_number,' ') AS softwarenumber,                                                                                                                                                        \
                    coalesce(d.doc_title,' ') AS title,                                                                                                                                                                                          \
                    coalesce(dsc.swcategory_desc,' ') AS category,                                                                                                                                                            \
                    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS releasedate,                                                                                \
                    DECODE(dsa.require_sla,'Y','BASLA','Generic') applicablesla,                                                                                                                                \
                    apr.apruser AS approvers,                                                                                                                                                                                                      \
                    dsa.release_date AS releasedate2,                                                                                                                                                                                    \
                    d.audience,                                                                                                                                                                                                                                  \
					d.DOCFILE_NAME                                                                                                                                                                                                                       \
                FROM                                                                                                                                                                                                                                                  \
                    csp.csp_document d                                                                                                                                                                                                                 \
                    INNER JOIN csp.csp_documentaudiences da ON d.audience = da.audience_id                                                                                             \
                    INNER JOIN csp.csp_doctypes dt ON d.doctype_id = dt.doctype_id                                                                                                                    \
                    INNER JOIN csp.csp_swattributes dsa ON d.document_id = dsa.document_id                                                                                               \
                    INNER JOIN csp.csp_sds_l_swcategories dsc ON dsa.swcategory_id = dsc.swcategory_id                                                                         \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggrslids                                                                                                                                                                                                                          \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    k.document_id,                                                                                                                                                                                                          \
                                    k.product_name,                                                                                                                                                                                                        \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY k.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            k.product_name ASC                                                                                                                                                                                        \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dpd.document_id,                                                                                                                                                                                             \
                                            dpt.product_name                                                                                                                                                                                            \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dpd                                                                                                                                                               \
                                            INNER JOIN master.master_product_taxonomy dpt ON dpd.product_taxid = dpt.product_taxid                                   \
                                    ) k                                                                                                                                                                                                                                      \
                            ) l                                                                                                                                                                                                                                     \
                        $prod_search_condition$                                                                                                                                                                                                   \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) dp ON d.document_id = dp.document_id                                                                                                                                                                    \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            n.document_id,                                                                                                                                                                                                                  \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            apruser                                                                                                                                                                                                                                   \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    p.document_id,                                                                                                                                                                                                          \
                                    p.apruser,                                                                                                                                                                                                                      \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY p.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            p.apruser ASC                                                                                                                                                                                                      \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dp.document_id,                                                                                                                                                                                               \
                                            mu.first_name                                                                                                                                                                                                    \
                                            || ' '                                                                                                                                                                                                                          \
                                               || mu.last_name AS apruser                                                                                                                                                                      \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dp                                                                                                                                                                  \
                                            INNER JOIN master.master_product_taxonomy dpt ON dp.product_taxid = dpt.product_taxid                                     \
                                            INNER JOIN csp.csp_documentapprover da ON dp.document_id = da.document_id                                                           \
                                            INNER JOIN master.master_user mu ON da.approver_id = mu.user_id                                                                                     \
                                        WHERE                                                                                                                                                                                                                        \
                                            1 = 1                                                                                                                                                                                                                          \
                                            AND NOT EXISTS (                                                                                                                                                                                              \
                                                SELECT                                                                                                                                                                                                                 \
                                                    1                                                                                                                                                                                                                        \
                                                FROM                                                                                                                                                                                                                  \
                                                    master.master_product_taxonomy                                                                                                                                                   \
                                                WHERE                                                                                                                                                                                                                \
                                                    sw_require_approval = 'Y'                                                                                                                                                                      \
                                                    AND product_taxid IN (                                                                                                                                                                           \
                                                        SELECT                                                                                                                                                                                                         \
                                                            product_taxid                                                                                                                                                                                      \
                                                        FROM                                                                                                                                                                                                          \
                                                            csp.csp_product_documents                                                                                                                                                        \
                                                        WHERE                                                                                                                                                                                                        \
                                                            document_id = dp.document_id                                                                                                                                                 \
                                                    )                                                                                                                                                                                                                         \
                                            )                                                                                                                                                                                                                                 \
                                    ) p                                                                                                                                                                                                                                     \
                            ) n                                                                                                                                                                                                                                             \
                        GROUP BY                                                                                                                                                                                                                                  \
                            n.document_id                                                                                                                                                                                                                   \
                    ) apr ON d.document_id = apr.document_id                                                                                                                                                                  \
                WHERE                                                                                                                                                                                                                                                \
                    1 = 1                                                                                                                                                                                                                                                  \
                    AND d.issoftware = 'Y'                                                                                                                                                                                                              \
                        AND lower(d.status) = 'available'                                                                                                                                                                                    \
                            AND dsa.release_date IS NOT NULL                                                                                                                                                                           \
                                AND da.audience <> 'Public / Non-Requestable'                                                                                                                                             \
            ) a                                                                                                                                                                                                                                                              \
            INNER JOIN (                                                                                                                                                                                                                                        \
                SELECT a1.document_id FROM       csp.csp_product_documents a1                                                                                                                          \
                                      INNER JOIN master.master_product_taxonomy a2 ON a1.product_taxid = a2.product_taxid                                                 \
            ) b ON a.document_id = b.document_id                                                                                                                                                                                  \
            where a.releasedate IS NOT NULL AND a.audience <> 4                                                                                                                                                   \
            $doc_title_search_condition$                                                                                                                                                                                                      \

GET_ALL_SOFTWARE_MV_COUNT_BY_ACCESS= \
SELECT                                                                                                                                                                                                                                                                 \
            COUNT(DISTINCT(a.document_id))                                                                                                                                                                                                             \
        FROM                                                                                                                                                                                                                                                          \
            (                                                                                                                                                                                                                                                                 \
                SELECT                                                                                                                                                                                                                                                 \
                    d.document_id,                                                                                                                                                                                                                          \
                    dp.listaggrslids AS product,                                                                                                                                                                                                   \
                    coalesce(d.doc_number,' ') AS softwarenumber,                                                                                                                                                        \
                    coalesce(d.doc_title,' ') AS title,                                                                                                                                                                                          \
                    coalesce(dsc.swcategory_desc,' ') AS category,                                                                                                                                                            \
                    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS releasedate,                                                                                \
                    DECODE(dsa.require_sla,'Y','BASLA','Generic') AS applicablesla,                                                                                                                          \
                    plm.listaggruser AS approvers,                                                                                                                                                                                            \
                    dsa.release_date AS releasedate2,                                                                                                                                                                                    \
                    d.audience,                                                                                                                                                                                                                                  \
					d.DOCFILE_NAME                                                                                                                                                                                                                       \
                FROM                                                                                                                                                                                                                                                  \
                    csp.csp_document d                                                                                                                                                                                                                 \
                    INNER JOIN csp.csp_documentaudiences da ON d.audience = da.audience_id                                                                                             \
                    INNER JOIN csp.csp_doctypes dt ON d.doctype_id = dt.doctype_id                                                                                                                    \
                    INNER JOIN csp.csp_swattributes dsa ON d.document_id = dsa.document_id                                                                                               \
                    INNER JOIN csp.csp_sds_l_swcategories dsc ON dsa.swcategory_id = dsc.swcategory_id                                                                         \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggrslids                                                                                                                                                                                                                          \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    k.document_id,                                                                                                                                                                                                          \
                                    k.product_name,                                                                                                                                                                                                        \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY k.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            k.product_name ASC                                                                                                                                                                                        \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dpd.document_id,                                                                                                                                                                                             \
                                            dpt.product_name                                                                                                                                                                                            \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dpd                                                                                                                                                               \
                                            INNER JOIN master.master_product_taxonomy dpt ON dpd.product_taxid = dpt.product_taxid                                   \
                                    ) k                                                                                                                                                                                                                                      \
                            ) l                                                                                                                                                                                                                                    \
                        $prod_search_condition$                                                                                                                                                                                                   \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) dp ON d.document_id = dp.document_id                                                                                                                                                                    \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.full_name,',') WITHIN GROUP(                                                                                                                                                    \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.full_name                                                                                                                                                                                                       \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggruser                                                                                                                                                                                                                           \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    p.document_id,                                                                                                                                                                                                          \
                                    p.full_name AS full_name,                                                                                                                                                                                    \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY p.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            p.full_name ASC                                                                                                                                                                                                 \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dp.document_id,                                                                                                                                                                                               \
                                            mu.first_name                                                                                                                                                                                                    \
                                            || ' '                                                                                                                                                                                                                          \
                                               || mu.last_name AS full_name                                                                                                                                                                \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dp                                                                                                                                                                  \
                                            INNER JOIN master.master_product_taxonomy dpt ON dp.product_taxid = dpt.product_taxid                                     \
                                            INNER JOIN csp.csp_product_plms dplm ON dpt.product_taxid = dplm.product_taxid                                                      \
                                            INNER JOIN master.master_user mu ON dplm.plmid = mu.user_id                                                                                             \
                                        WHERE                                                                                                                                                                                                                        \
                                            1 = 1                                                                                                                                                                                                                          \
                                            AND dplm.isprimary = 'Y'                                                                                                                                                                                \
                                                AND dplm.record_activity = 'Y'                                                                                                                                                                 \
                                                    AND EXISTS (                                                                                                                                                                                                \
                                                SELECT                                                                                                                                                                                                                 \
                                                    1                                                                                                                                                                                                                        \
                                                FROM                                                                                                                                                                                                                  \
                                                    master.master_product_taxonomy                                                                                                                                                   \
                                                WHERE                                                                                                                                                                                                                \
                                                    sw_require_approval = 'Y'                                                                                                                                                                      \
                                                    AND product_taxid IN (                                                                                                                                                                           \
                                                        SELECT                                                                                                                                                                                                         \
                                                            product_taxid                                                                                                                                                                                      \
                                                        FROM                                                                                                                                                                                                          \
                                                            csp.csp_product_documents                                                                                                                                                        \
                                                        WHERE                                                                                                                                                                                                        \
                                                            document_id = dp.document_id                                                                                                                                                 \
                                                    )                                                                                                                                                                                                                         \
                                            )                                                                                                                                                                                                                                 \
                                    ) p                                                                                                                                                                                                                                     \
                            ) l                                                                                                                                                                                                                                               \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) plm ON d.document_id = plm.document_id                                                                                                                                                               \
                WHERE                                                                                                                                                                                                                                                \
                    1 = 1                                                                                                                                                                                                                                                  \
                    AND d.issoftware = 'Y'                                                                                                                                                                                                              \
                        AND lower(d.status) = 'available'                                                                                                                                                                                    \
                            AND dsa.release_date IS NOT NULL                                                                                                                                                                           \
                                AND da.audience <> 'Public / Non-Requestable'                                                                                                                                             \
                UNION                                                                                                                                                                                                                                                \
                SELECT                                                                                                                                                                                                                                                 \
                    d.document_id,                                                                                                                                                                                                                          \
                    dp.listaggrslids AS product,                                                                                                                                                                                                   \
                    coalesce(d.doc_number,' ') AS softwarenumber,                                                                                                                                                        \
                    coalesce(d.doc_title,' ') AS title,                                                                                                                                                                                          \
                    coalesce(dsc.swcategory_desc,' ') AS category,                                                                                                                                                            \
                    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS releasedate,                                                                                \
                    DECODE(dsa.require_sla,'Y','BASLA','Generic') applicablesla,                                                                                                                                \
                    apr.apruser AS approvers,                                                                                                                                                                                                      \
                    dsa.release_date AS releasedate2,                                                                                                                                                                                    \
                    d.audience,                                                                                                                                                                                                                                  \
					d.DOCFILE_NAME                                                                                                                                                                                                                       \
                FROM                                                                                                                                                                                                                                                  \
                    csp.csp_document d                                                                                                                                                                                                                 \
                    INNER JOIN csp.csp_documentaudiences da ON d.audience = da.audience_id                                                                                             \
                    INNER JOIN csp.csp_doctypes dt ON d.doctype_id = dt.doctype_id                                                                                                                    \
                    INNER JOIN csp.csp_swattributes dsa ON d.document_id = dsa.document_id                                                                                               \
                    INNER JOIN csp.csp_sds_l_swcategories dsc ON dsa.swcategory_id = dsc.swcategory_id                                                                         \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            l.document_id,                                                                                                                                                                                                                   \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(l.product_name,',') WITHIN GROUP(                                                                                                                                           \
                                            ORDER BY                                                                                                                                                                                                               \
                                                l.product_name                                                                                                                                                                                              \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            listaggrslids                                                                                                                                                                                                                          \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    k.document_id,                                                                                                                                                                                                          \
                                    k.product_name,                                                                                                                                                                                                        \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY k.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            k.product_name ASC                                                                                                                                                                                        \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dpd.document_id,                                                                                                                                                                                             \
                                            dpt.product_name                                                                                                                                                                                            \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dpd                                                                                                                                                               \
                                            INNER JOIN master.master_product_taxonomy dpt ON dpd.product_taxid = dpt.product_taxid                                   \
                                    ) k                                                                                                                                                                                                                                      \
                            ) l                                                                                                                                                                                                                                     \
                        $prod_search_condition$                                                                                                                                                                                                   \
                        GROUP BY                                                                                                                                                                                                                                  \
                            l.document_id                                                                                                                                                                                                                     \
                    ) dp ON d.document_id = dp.document_id                                                                                                                                                                    \
                    INNER JOIN (                                                                                                                                                                                                                                \
                        SELECT                                                                                                                                                                                                                                         \
                            n.document_id,                                                                                                                                                                                                                  \
                            CASE                                                                                                                                                                                                                                        \
                                    WHEN instr(                                                                                                                                                                                                                  \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),',',1,100) > 0 THEN substr(                                                                                                                                                                                 \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),1,instr(                                                                                                                                                                                                                     \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        ),',',1,100) - 1)                                                                                                                                                                                                           \
                                                         || '..more'                                                                                                                                                                                                \
                                    ELSE                                                                                                                                                                                                                                  \
                                        LISTAGG(n.apruser,',') WITHIN GROUP(                                                                                                                                                        \
                                            ORDER BY                                                                                                                                                                                                               \
                                                n.apruser                                                                                                                                                                                                           \
                                        )                                                                                                                                                                                                                                     \
                                END                                                                                                                                                                                                                                      \
                            apruser                                                                                                                                                                                                                                   \
                        FROM                                                                                                                                                                                                                                          \
                            (                                                                                                                                                                                                                                                 \
                                SELECT                                                                                                                                                                                                                                 \
                                    p.document_id,                                                                                                                                                                                                          \
                                    p.apruser,                                                                                                                                                                                                                      \
                                    ROW_NUMBER() OVER(                                                                                                                                                                                           \
                                        PARTITION BY p.document_id                                                                                                                                                                          \
                                        ORDER BY                                                                                                                                                                                                                   \
                                            p.apruser ASC                                                                                                                                                                                                      \
                                    ) AS rn                                                                                                                                                                                                                             \
                                FROM                                                                                                                                                                                                                                  \
                                    (                                                                                                                                                                                                                                         \
                                        SELECT DISTINCT                                                                                                                                                                                                     \
                                            dp.document_id,                                                                                                                                                                                               \
                                            mu.first_name                                                                                                                                                                                                    \
                                            || ' '                                                                                                                                                                                                                          \
                                               || mu.last_name AS apruser                                                                                                                                                                      \
                                        FROM                                                                                                                                                                                                                          \
                                            csp.csp_product_documents dp                                                                                                                                                                  \
                                            INNER JOIN master.master_product_taxonomy dpt ON dp.product_taxid = dpt.product_taxid                                     \
                                            INNER JOIN csp.csp_documentapprover da ON dp.document_id = da.document_id                                                           \
                                            INNER JOIN master.master_user mu ON da.approver_id = mu.user_id                                                                                     \
                                        WHERE                                                                                                                                                                                                                        \
                                            1 = 1                                                                                                                                                                                                                          \
                                            AND NOT EXISTS (                                                                                                                                                                                              \
                                                SELECT                                                                                                                                                                                                                 \
                                                    1                                                                                                                                                                                                                        \
                                                FROM                                                                                                                                                                                                                  \
                                                    master.master_product_taxonomy                                                                                                                                                   \
                                                WHERE                                                                                                                                                                                                                \
                                                    sw_require_approval = 'Y'                                                                                                                                                                      \
                                                    AND product_taxid IN (                                                                                                                                                                           \
                                                        SELECT                                                                                                                                                                                                         \
                                                            product_taxid                                                                                                                                                                                      \
                                                        FROM                                                                                                                                                                                                          \
                                                            csp.csp_product_documents                                                                                                                                                        \
                                                        WHERE                                                                                                                                                                                                        \
                                                            document_id = dp.document_id                                                                                                                                                 \
                                                    )                                                                                                                                                                                                                         \
                                            )                                                                                                                                                                                                                                 \
                                    ) p                                                                                                                                                                                                                                     \
                            ) n                                                                                                                                                                                                                                             \
                        GROUP BY                                                                                                                                                                                                                                  \
                            n.document_id                                                                                                                                                                                                                   \
                    ) apr ON d.document_id = apr.document_id                                                                                                                                                                  \
                WHERE                                                                                                                                                                                                                                                \
                    1 = 1                                                                                                                                                                                                                                                  \
                    AND d.issoftware = 'Y'                                                                                                                                                                                                              \
                        AND lower(d.status) = 'available'                                                                                                                                                                                    \
                            AND dsa.release_date IS NOT NULL                                                                                                                                                                           \
                                AND da.audience <> 'Public / Non-Requestable'                                                                                                                                             \
            ) a                                                                                                                                                                                                                                                              \
            INNER JOIN (                                                                                                                                                                                                                                        \
                SELECT a1.document_id FROM       csp.csp_product_documents a1                                                                                                                          \
                                      INNER JOIN master.master_product_taxonomy a2 ON a1.product_taxid = a2.product_taxid                                                 \
            ) b ON a.document_id = b.document_id                                                                                                                                                                                  \
            where a.releasedate IS NOT NULL AND a.audience <> 4                                                                                                                                                   \
            $doc_title_search_condition$                                                                                                                                                                                                      \

GET_ALL_SOFTWARE_DETAILS_BY_SOFTWARE_FILE_GROUP=\
SELECT \
A.document_id, \
    A.Product, \
    A.docnumber softwareNumber, \
    A.doctitle title, \
    A.SWCATEGORYDESC CATEGORY, \
    A.RELEASEDATE, \
    A.ApplicableSLA, \
    listagg(A.approvers,',') within GROUP (ORDER BY A.approvers) AS approvers, \
    A.rdate, \
  A.docFileName \
    FROM \
  (SELECT * \
FROM \
  (SELECT d.document_id, \
    dp.listaggrslids                                           AS Product, \
    COALESCE(d.doc_number,' ')                                 AS docnumber, \
    COALESCE(d.doc_title,' ')                                  AS doctitle, \
    COALESCE(dsc.SWCATEGORY_DESC,' ')                          AS SWCATEGORYDESC, \
    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS RELEASEDATE, \
    DECODE(dsa.require_sla,'Y' ,'BASLA','Generic') ApplicableSLA, \
    PLM.listaggruser AS approvers, \
    dsa.RELEASE_DATE AS rdate , \
      d.docfile_name docFileName \
  FROM csp.csp_document d , \
    csp.csp_doctypes dt , \
    csp.csp_SWATTRIBUTES dsa, \
    csp.csp_SDS_L_SWCATEGORIES dsc, \
    (SELECT document_Id, \
      CASE \
        WHEN instr(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),',',1,100)>0 \
        THEN SUBSTR(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),1,instr(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),',',1,100)-1 ) \
          ||'..more' \
        ELSE listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name)  \
      END listaggrslids \
    FROM \
      (SELECT dpd.document_Id, \
        DPT.product_Name, \
        ROW_NUMBER() OVER (PARTITION BY dpd.document_Id ORDER BY DPT.product_Name ASC) AS rn \
      FROM csp.csp_product_documents dpd, \
        master.master_product_taxonomy DPT \
      WHERE dPT.product_taxid=dpd.PRODUCT_TAXID \
      ORDER BY 1,2,3 \
      ) \
    WHERE rn<=15 \
    GROUP BY document_Id \
    ) dp, \
    (SELECT document_Id, \
      plmId, \
      CASE \
        WHEN instr(listagg(first_name \
          ||' ' \
          ||last_name,',') within GROUP ( \
        ORDER BY first_name \
          ||' ' \
          ||last_name),',',1,10)>0 \
        THEN SUBSTR(listagg(first_name \
          ||' ' \
          ||last_name,',') within GROUP ( \
        ORDER BY first_name \
          ||' ' \
          ||last_name),1,instr(listagg(first_name \
          ||' ' \
          ||last_name,',') within GROUP ( \
        ORDER BY first_name \
          ||' ' \
          ||last_name),',',1,10)-1 ) \
          ||'..more' \
        ELSE listagg(first_name \
          ||' ' \
          ||last_name,',') within GROUP ( \
        ORDER BY first_name \
          ||' ' \
          ||last_name) \
      END listaggruser \
    FROM \
      (SELECT DP.document_Id, \
        dplm.plmid, \
        mu.first_name, \
        mu.last_name, \
        ROW_NUMBER() OVER (PARTITION BY Dp.document_Id ORDER BY mu.first_name,mu.last_name ASC) AS rn \
      FROM csp.csp_product_documents DP, \
        master.master_product_taxonomy DPT, \
        csp.csp_product_Plms dplm, \
        master.master_user mu \
      WHERE 1              =1 \
      AND DP.product_taxId =dPT.product_taxid \
      AND dPT.product_taxid=dplm.PRODUCT_taxID \
      AND dplm.plmid       =mu.user_id \
      AND dplm.isprimary   ='Y' \
      AND dplm.RECORD_ACTIVITY   ='Y' \
      AND EXISTS \
        (SELECT 1  \
        FROM master.master_product_taxonomy \
        WHERE SW_REQUIRE_APPROVAL='Y' \
        AND product_taxId       IN \
          (SELECT product_TAXId \
          FROM CSP.CSP_product_documents \
          WHERE document_Id=DP.document_Id \
          ) \
        ) \
      GROUP BY Dp.document_Id, \
       dplm.plmid, \
        mu.first_name, \
        mu.last_name \
      ORDER BY 1,2,3 \
      ) \
    WHERE rn<=15 \
    GROUP BY document_Id, \
      plmId \
    ) PLM \
  WHERE 1               =1 \
  AND d.doctype_id      =dt.DOCTYPE_ID \
  AND d.DOCUMENT_ID     =dsa.document_id \
  AND dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID \
  AND d.ISSOFTWARE      ='Y' \
  AND d.document_Id     =dp.document_Id \
  AND d.document_Id     =plm.document_Id \
  AND d.audience NOT   IN \
    (SELECT audience_id \
    FROM csp.csp_documentaudiences \
    WHERE audience ='Public / Non-Requestable' \
    ) \
  AND lower(d.status)   ='available' \
  AND dsa.release_date IS NOT NULL \
  UNION ALL \
  SELECT d.document_id, \
    dp.listaggrslids                                            AS Product, \
    COALESCE(d.doc_number,' ')                                 AS docnumber, \
    COALESCE(d.doc_title,' ')                                  AS doctitle, \
    COALESCE(dsc.SWCATEGORY_DESC,' ')                          AS SWCATEGORYDESC, \
    TO_DATE(TO_CHAR(dsa.release_date,'DD-MON-RR'),'DD-MON-RR') AS RELEASEDATE, \
    DECODE(dsa.require_sla,'Y' ,'BASLA','Generic') ApplicableSLA, \
    apr.apruser      AS approvers, \
    dsa.RELEASE_DATE AS rdate , \
      d.docFile_name docFileName \
  FROM csp.csp_document d , \
    csp.csp_doctypes dt , \
    csp.csp_SWATTRIBUTES dsa, \
    csp.csp_SDS_L_SWCATEGORIES dsc, \
    (SELECT document_Id, \
      CASE \
        WHEN instr(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),',',1,100)>0 \
        THEN SUBSTR(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),1,instr(listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name),',',1,100)-1 ) \
          ||'..more' \
        ELSE listagg(product_Name,',') within GROUP ( \
        ORDER BY product_Name) \
      END listaggrslids \
   FROM \
      (SELECT dpd.document_Id, \
        DPT.product_Name, \
        ROW_NUMBER() OVER (PARTITION BY dpd.document_Id ORDER BY DPT.product_Name ASC) AS rn \
      FROM csp.csp_product_documents dpd, \
        master.master_product_taxonomy DPT \
      WHERE dPT.product_taxid=dpd.PRODUCT_TAXID \
      ORDER BY 1,2,3 \
      ) \
    WHERE rn<=15 \
    GROUP BY document_Id \
    ) dp , \
    (SELECT Dp.document_Id, \
      da.APPROVER_ID, \
      mu.first_name \
      ||' ' \
      ||mu.last_name apruser \
    FROM csp.csp_product_documents DP, \
      master.master_product_taxonomy DPT, \
      csp.csp_DOCUMENTAPPROVER da, \
      master.master_user mu \
    WHERE 1             =1  \
    AND DP.product_taxId=dPT.product_taxid \
    AND NOT EXISTS  \
      (SELECT 1 \
      FROM master.master_product_taxonomy \
      WHERE SW_REQUIRE_APPROVAL='Y' \
      AND product_taxId       IN \
        (SELECT product_taxId \
        FROM csp.csp_product_documents \
        WHERE document_Id=DP.document_Id \
        ) \
      ) \
    AND dp.document_Id=da.document_Id \
    AND da.APPROVER_ID=mu.user_id \
    GROUP BY Dp.document_Id , \
      da.APPROVER_ID, \
      mu.first_name  \
      ||' ' \
      ||mu.last_name \
    ) apr \
  WHERE 1               =1 \
  AND d.doctype_id      =dt.DOCTYPE_ID \
  AND d.DOCUMENT_ID     =dsa.document_id \
  AND dsa.SWCATEGORY_ID =dsc.SWCATEGORY_ID \
  AND d.ISSOFTWARE      ='Y' \
  AND d.document_Id     =dp.document_Id \
  AND d.document_Id     =apr.document_Id \
  AND d.audience NOT   IN \
    (SELECT audience_id \
    FROM csp.csp_documentaudiences \
    WHERE audience='Public / Non-Requestable' \
    ) \
  AND lower(d.status)   ='available' \
  AND dsa.release_date IS NOT NULL \
  ) d \
WHERE d.document_Id IN \
  (SELECT ds.document_id \
  FROM csp.csp_DOCSETS s, \
    csp.csp_DOCSETDOCUMENTS ds \
  WHERE s.doc_set_id=ds.doc_set_id \
  AND s.active      ='Y' \
  AND s.type        ='S' \
  AND s.DOC_SET_NAME LIKE '%$docset_name$%' \
  ) \
)A  \
GROUP BY \
A.document_id, \
    A.Product, \
    A.docnumber, \
    A.doctitle, \
    A.SWCATEGORYDESC, \
    A.RELEASEDATE, \
    A.ApplicableSLA, \
        A.rdate, \
  A.docFileName

FETCH_USER_BY_GROUPID=\
SELECT DISTINCT MU.USER_ID id, MU.FIRST_NAME ||' '||MU.LAST_NAME name , \
MC.COMPANY_NAME AS companyName ,MU.LOGIN_NAME email, MU.CITY||','||MU.STATE_NAME||','||C.COUNTRY_NAME location, \
U.FIRST_NAME ||' '||U.LAST_NAME updatedBy,MU.UPDATE_DATE updateDate FROM  \
MASTER.MASTER_USER MU JOIN CSP.CSP_SLA_USER_GROUP UG ON  \
MU.USER_ID = UG.USER_ID JOIN MASTER.MASTER_COMPANY MC ON \
MU.COMPANY_ID = MC.COMPANY_ID \
JOIN MASTER.MASTER_COUNTRY C ON MU.COUNTRY_ID = C.COUNTRY_ID \
JOIN MASTER.MASTER_USER U ON MU.UPDATED_BY = U.USER_ID \
WHERE 1=1 AND MU.ACTIVE_FLAG = 'Y' AND UG.group_id = :groupId

GET_ALL_SOFTWARE_FILE_GROUPS_BY_USER_ID =\
select DISTINCT ds.doc_set_id,ds.doc_set_name \
from CSP.CSP_DOCSETDOCUMENTS dst \
inner join CSP.CSP_DOCSETS ds on ds.doc_set_id=dst.doc_set_id \
inner join MASTER.MASTER_USER U2 on ds.CREATED_BY = U2.User_Id \
and ds.active='Y' and ds.type='S' order by 2

FETCH_USER_BY_GROUPID_COUNT=\
SELECT COUNT(*) FROM (SELECT DISTINCT MU.USER_ID id, MU.FIRST_NAME ||' '||MU.LAST_NAME name , \
MC.COMPANY_NAME AS companyName ,MU.LOGIN_NAME email, MU.CITY||','||MU.STATE_NAME||','||C.COUNTRY_NAME location, \
U.FIRST_NAME ||' '||U.LAST_NAME updatedBy,MU.UPDATE_DATE updateDate FROM  \
MASTER.MASTER_USER MU JOIN CSP.CSP_SLA_USER_GROUP UG ON  \
MU.USER_ID = UG.USER_ID JOIN MASTER.MASTER_COMPANY MC ON \
MU.COMPANY_ID = MC.COMPANY_ID \
JOIN MASTER.MASTER_COUNTRY C ON MU.COUNTRY_ID = C.COUNTRY_ID \
JOIN MASTER.MASTER_USER U ON MU.UPDATED_BY = U.USER_ID \
WHERE 1=1 AND MU.ACTIVE_FLAG = 'Y' AND UG.group_id = :groupId)
#####################################################################################################################33
GET_EXISTING_PENDING_SOFTWARE_REQ_BYID=SELECT DISTINCT DCSWREQ.SW_REQUEST_ID,DCSWREQ.REQUESTER_ID,DCSWREQ.REQUEST_TYPE_ID,\
    MC.COMPANY_NAME,TO_CHAR(DCSWREQ.REQUEST_DATE,'dd-MM-yyyy'), DCSWTYPES.REQUEST_TYPE_NAME,\
    DCSWREQ.SW_REQUEST_STATUS_ID,DCSWREQSTATUS.SW_REQUEST_STATUS_NAME,DCSWREQ.ROUTED,MU.FIRST_NAME || MU.LAST_NAME AS REQUESTERNAME,\
    (SELECT LISTAGG(SLA_ID,',') WITHIN GROUP (ORDER BY SLA_ID) CNT FROM CSP.CSP_SWREQUESTSLAS \
        WHERE SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
    ) AS SLAIDS,\
    MU.LOGIN_NAME,NVL(DCSWREQ.OTHER_INFORMATION ,'-'),NVL(DCSWREQ.CC_EMAILS,' '),DCSWREQ.PRODUCT_CATEGORY_ID \
    FROM \
    CSP.CSP_SWREQUESTS DCSWREQ \
    INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID = MC.COMPANY_ID \
    INNER JOIN CSP.CSP_SWREQUESTSLAS DCSWREQSLA ON DCSWREQSLA.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWTYPES.REQUEST_TYPE_ID = DCSWREQ.REQUEST_TYPE_ID \
    INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DCSWREQ.REQUESTER_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTSTATUSES DCSWREQSTATUS ON DCSWREQSTATUS.SW_REQUEST_STATUS_ID = DCSWREQ.SW_REQUEST_STATUS_ID \
    WHERE DCSWREQ.SW_REQUEST_STATUS_ID = 1 \
    AND DCSWREQ.REQUEST_TYPE_ID = ? \
    AND DCSWREQ.SW_REQUEST_ID = ?
    
 GET_SW_REQUEST_USER_DATA=SELECT MU.LOGIN_NAME,MU.FIRST_NAME ||' '|| MU.LAST_NAME AS NAME FROM MASTER.MASTER_USER MU \
    JOIN CSP.CSP_SWREQUESTUSERS DCSWREQUSERS ON DCSWREQUSERS.USER_ID  = MU.USER_ID \
    WHERE DCSWREQUSERS.SW_REQUEST_ID=?
    
 GET_SOFTWARE_AND_APROVER_DETAILS=SELECT D.DOCUMENTID,D.DOCNUMBER,D.DOCTITLE,D.PRODUCT,D.APPROVERSID,D.APPROVERS,\
 	D.APPROVERSEMAIL,D.APPLICABLESLA \
	FROM \
    ( SELECT D.DOCUMENT_ID AS DOCUMENTID,DP.LISTAGGRSLIDS AS PRODUCT,COALESCE(D.DOC_NUMBER,' ') AS DOCNUMBER,\
      COALESCE(D.DOC_TITLE,' ') AS DOCTITLE,COALESCE(DSC.SWCATEGORY_DESC,' ') AS SWCATEGORYDESC,\
      TO_CHAR(DSA.RELEASE_DATE,'MM/DD/YYYY') AS RELEASEDATE,\
      DECODE(DSA.REQUIRE_SLA,'Y','BASLA','GENERIC') APPLICABLESLA,\
      PLM.LISTAGGRUSER AS APPROVERS,PLM.LISTAGGRUSERID AS APPROVERSID,\
      PLM.LISTAGGRUSEREMAIL AS APPROVERSEMAIL,DSA.RELEASE_DATE AS RDATE \
      FROM \
      CSP.CSP_DOCUMENT D \
      INNER JOIN CSP.CSP_DOCTYPES DT ON D.DOCTYPE_ID = DT.DOCTYPE_ID \
      INNER JOIN CSP.CSP_SWATTRIBUTES DSA ON D.DOCUMENT_ID = DSA.DOCUMENT_ID \
      INNER JOIN CSP.CSP_SDS_L_SWCATEGORIES DSC ON DSA.SWCATEGORY_ID = DSC.SWCATEGORY_ID \
      INNER JOIN \
      ( SELECT DOCUMENT_ID,\
            CASE \
                WHEN INSTR(LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)>0 \
                    THEN SUBSTR(LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME),1,INSTR(LISTAGG(PRODUCT_NAME,',<br/>') \
                        WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)-1 )||'..MORE' \
                ELSE LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME) \
            END LISTAGGRSLIDS \
            FROM \
            (SELECT DPD.DOCUMENT_ID,DPT.PRODUCT_NAME,ROW_NUMBER() OVER \
                (PARTITION BY DPD.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME ASC) AS RN \
              FROM \
              CSP.CSP_PRODUCT_DOCUMENTS DPD \
              INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID = DPD.PRODUCT_TAXID \
              ORDER BY 1,2,3 \
            ) WHERE RN<=15 GROUP BY DOCUMENT_ID \
        ) DP ON D.DOCUMENT_ID = DP.DOCUMENT_ID \
        INNER JOIN \
        ( SELECT DOCUMENT_ID,\
            CASE \
                WHEN INSTR(LISTAGG(FIRST_NAME||' '||LAST_NAME,',') WITHIN GROUP (ORDER BY FIRST_NAME||' '||LAST_NAME),',',1,10)>0 \
		          THEN SUBSTR(LISTAGG(FIRST_NAME||' '||LAST_NAME,',') WITHIN GROUP (ORDER BY FIRST_NAME||' '||LAST_NAME),1,INSTR(LISTAGG(FIRST_NAME||' '||LAST_NAME,',') \
                    WITHIN GROUP (ORDER BY FIRST_NAME||' '||LAST_NAME),',',1,10)-1 )||'..MORE' \
                ELSE LISTAGG(FIRST_NAME||' '||LAST_NAME,',') WITHIN GROUP (ORDER BY FIRST_NAME||' '||LAST_NAME) \
            END LISTAGGRUSER,\
            CASE \
                WHEN INSTR(LISTAGG(USER_ID,',') WITHIN GROUP (ORDER BY USER_ID),',',1,10)>0 \
		          THEN SUBSTR(LISTAGG(USER_ID,',') WITHIN GROUP (ORDER BY USER_ID),1,INSTR(LISTAGG(USER_ID,',') \
                    WITHIN GROUP (ORDER BY USER_ID),',',1,10)-1 )||'..MORE' \
                ELSE LISTAGG(USER_ID,',') WITHIN GROUP (ORDER BY USER_ID) \
            END LISTAGGRUSERID,\
            CASE \
                WHEN INSTR(LISTAGG(LOGIN_NAME,',') WITHIN GROUP (ORDER BY LOGIN_NAME),',',1,10)>0 \
		          THEN SUBSTR(LISTAGG(LOGIN_NAME,',') WITHIN GROUP (ORDER BY LOGIN_NAME),1,INSTR(LISTAGG(LOGIN_NAME,',') \
                    WITHIN GROUP (ORDER BY LOGIN_NAME),',',1,10)-1 )||'..MORE' \
                ELSE LISTAGG(LOGIN_NAME,',') WITHIN GROUP (ORDER BY LOGIN_NAME) \
            END LISTAGGRUSEREMAIL \
            FROM \
            ( \
                SELECT DP.DOCUMENT_ID,MU.USER_ID,MU.FIRST_NAME,MU.LAST_NAME,MU.LOGIN_NAME,\
                ROW_NUMBER() OVER (PARTITION BY DP.DOCUMENT_ID ORDER BY MU.FIRST_NAME,MU.LAST_NAME ASC) \
                AS RN \
                FROM \
                CSP.CSP_PRODUCT_DOCUMENTS DP \
                INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID = DP.PRODUCT_TAXID \
                INNER JOIN CSP.CSP_PRODUCT_PLMS DPLM ON DPLM.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
                INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DPLM.PLMID \
                WHERE \
                DPLM.ISPRIMARY = 'Y' \
                AND EXISTS \
                ( \
                    SELECT PRODUCT_TAXID FROM MASTER.MASTER_PRODUCT_TAXONOMY \
                    WHERE \
                    SW_REQUIRE_APPROVAL = 'Y' AND PRODUCT_TAXID IN \
                    ( \
                        SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                        WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
                    ) \
                ) GROUP BY DP.DOCUMENT_ID,MU.USER_ID,MU.FIRST_NAME,MU.LAST_NAME,MU.LOGIN_NAME \
                ORDER BY 1,2,3 \
            ) WHERE RN<=15 GROUP BY DOCUMENT_ID \
        ) PLM ON PLM.DOCUMENT_ID = D.DOCUMENT_ID \
        WHERE \
        D.ISSOFTWARE = 'Y' \
        AND D.AUDIENCE NOT IN \
        ( \
            SELECT AUDIENCE_ID FROM CSP.CSP_DOCUMENTAUDIENCES \
            WHERE AUDIENCE = 'Public / Non-Requestable' \
        ) \
        AND LOWER(D.STATUS) = 'available' \
        AND DSA.RELEASE_DATE IS NOT NULL \
        UNION ALL \
        SELECT D.DOCUMENT_ID AS DOCUMENTID,DP.LISTAGGRSLIDS AS PRODUCT,COALESCE(D.DOC_NUMBER,' ') AS DOCNUMBER,\
        COALESCE(D.DOC_TITLE,' ') AS DOCTITLE,COALESCE(DSC.SWCATEGORY_DESC,' ') AS SWCATEGORYDESC,\
        TO_CHAR(DSA.RELEASE_DATE,'MM/DD/YYYY') AS RELEASEDATE,\
        DECODE(DSA.REQUIRE_SLA,'Y','BASLA','GENERIC') APPLICABLESLA,\
        APR.APPROVERS AS APPROVERS,TO_CHAR(APR.USER_ID) AS APPROVERID,\
        APR.APPROVERSEMAIL AS APPROVERSEMAIL,DSA.RELEASE_DATE AS RDATE \
        FROM \
        CSP.CSP_DOCUMENT D \
        INNER JOIN CSP.CSP_DOCTYPES DT ON D.DOCTYPE_ID = DT.DOCTYPE_ID \
        INNER JOIN CSP.CSP_SWATTRIBUTES DSA ON D.DOCUMENT_ID = DSA.DOCUMENT_ID \
        INNER JOIN CSP.CSP_SDS_L_SWCATEGORIES DSC ON DSA.SWCATEGORY_ID = DSC.SWCATEGORY_ID \
        INNER JOIN \
        ( SELECT DOCUMENT_ID,\
            CASE \
                WHEN INSTR(LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)>0 \
                    THEN SUBSTR(LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME),1,INSTR(LISTAGG(PRODUCT_NAME,',<br/>') \
                    WITHIN GROUP (ORDER BY PRODUCT_NAME),',',1,10)-1 )||'..MORE' \
                ELSE LISTAGG(PRODUCT_NAME,',<br/>') WITHIN GROUP (ORDER BY PRODUCT_NAME) \
            END LISTAGGRSLIDS \
            FROM \
            (SELECT DPD.DOCUMENT_ID,DPT.PRODUCT_NAME,ROW_NUMBER() OVER \
                (PARTITION BY DPD.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME ASC) AS RN \
              FROM \
              CSP.CSP_PRODUCT_DOCUMENTS DPD \
              INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID = DPD.PRODUCT_TAXID \
              ORDER BY 1,2,3 \
            ) WHERE RN<=15 GROUP BY DOCUMENT_ID \
        ) DP ON D.DOCUMENT_ID = DP.DOCUMENT_ID \
        INNER JOIN \
        ( \
            SELECT DP.DOCUMENT_ID,MU.USER_ID AS USER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME AS APPROVERS,\
            MU.LOGIN_NAME AS APPROVERSEMAIL \
            FROM \
            CSP.CSP_PRODUCT_DOCUMENTS DP \
            INNER JOIN MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DPT.PRODUCT_TAXID = DP.PRODUCT_TAXID \
            INNER JOIN CSP.CSP_DOCUMENTAPPROVER DA ON DA.DOCUMENT_ID = DP.DOCUMENT_ID \
            INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DA.APPROVER_ID \
            WHERE 1=1 \
            AND NOT EXISTS \
            ( \
                 SELECT PRODUCT_TAXID FROM MASTER.MASTER_PRODUCT_TAXONOMY \
                 WHERE \
                 SW_REQUIRE_APPROVAL = 'Y' AND PRODUCT_TAXID IN \
                 ( \
                    SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_DOCUMENTS \
                    WHERE DOCUMENT_ID = DP.DOCUMENT_ID \
                ) \
            ) GROUP BY DP.DOCUMENT_ID,MU.USER_ID,MU.FIRST_NAME||' '||MU.LAST_NAME,MU.LOGIN_NAME \
         ) APR ON D.DOCUMENT_ID = APR.DOCUMENT_ID \
        WHERE \
        D.ISSOFTWARE = 'Y' \
        AND D.AUDIENCE NOT IN \
        ( \
            SELECT AUDIENCE_ID FROM CSP.CSP_DOCUMENTAUDIENCES \
            WHERE AUDIENCE = 'Public / Non-Requestable' \
        ) \
        AND LOWER(D.STATUS) = 'available' \
        AND DSA.RELEASE_DATE IS NOT NULL \
    ) D \
    WHERE \
    D.DOCUMENTID IN \
    ( \
        SELECT DOCUMENT_ID FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID = ? AND DOCUMENT_ID IN (?) \
    )

#############################################################################################################################3
GET_SOFTWARE_DETAILS_CUSTOM_EMAIL=SELECT DISTINCT DCSWREQ.SW_REQUEST_ID,DCSWREQ.CONTACT_FIRST_NAME, DCSWREQ.CONTACT_LAST_NAME,\
    DCSWREQ.CONTACT_EMAIL,NVL(DCSWREQ.OTHER_INFORMATION,'-'),DCSWREQ.CC_EMAILS,MU.FIRST_NAME,MU.LAST_NAME,\
    DCSWTYPES.REQUEST_TYPE_NAME,COALESCE((SELECT LISTAGG(SLA_ID,',') \
        WITHIN GROUP (ORDER BY SLA_ID) CNT \
    FROM CSP.CSP_SWREQUESTSLAS WHERE SW_REQUEST_ID=DCSWREQ.SW_REQUEST_ID),'-') AS SLAIDS,\
    (SELECT COUNT(SW_REQUEST_ID) FROM CSP.CSP_SWREQUESTUSERS WHERE SW_REQUEST_ID= DCSWREQ.SW_REQUEST_ID) AS USERS,\
    (SELECT COUNT(SW_REQUEST_ID) FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID=DCSWREQ.SW_REQUEST_ID) AS softwares,\
    (SELECT COUNT(SW_REQUEST_ID) FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID=DCSWREQ.SW_REQUEST_ID AND SW_APPROVAL_STATUS_ID=2) AS Pending,\
    (SELECT COUNT(SW_REQUEST_ID) FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID=DCSWREQ.SW_REQUEST_ID AND SW_APPROVAL_STATUS_ID=4) AS Granted,\
    (SELECT COUNT(SW_REQUEST_ID) FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID=DCSWREQ.SW_REQUEST_ID AND SW_APPROVAL_STATUS_ID=3) AS Declined,\
    MC.COMPANY_NAME, TO_CHAR(DCSWREQ.REQUEST_DATE,'dd-MM-yyyy'),DCSWREQ.CONTACT_FIRST_NAME ||' '|| DCSWREQ.CONTACT_LAST_NAME "Requester Name",\
    NVL(DCSWREQ.PRODUCT_CATEGORY_ID,0),NVL(DCSWREQ.PRODUCT_ID,0),NVL(DCSWREQ.CUSTOM_ENCRYPT,'-'),\
    Nvl(DCSWREQ.CUSTOM_INSTRUCTIONS,'-'),NVL(REQ.COMPETITOR,'-'),Nvl(REQ.EXPECTED_REVENUE,'-'),\
    NVL(MU.JOB_TITLE,'-'),NVL(REQ.QUALIFYING_INFORMATION,'-') \
    FROM CSP.CSP_SWREQUESTS DCSWREQ \
    INNER JOIN MASTER.MASTER_COMPANY MC ON DCSWREQ.COMPANY_ID=MC.COMPANY_ID \
    LEFT OUTER JOIN CSP.CSP_REQUESTS REQ On REQ.REQUEST_ID = DCSWREQ.Sw_Request_Id \
    LEFT OUTER JOIN CSP.CSP_SWREQUESTSLAS DCSWREQSLA ON DCSWREQSLA.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
    INNER JOIN CSP.CSP_L_SWREQUESTTYPES DCSWTYPES ON DCSWTYPES.REQUEST_TYPE_ID = DCSWREQ.REQUEST_TYPE_ID \
    INNER JOIN MASTER.MASTER_USER MU ON MU.USER_ID = DCSWREQ.REQUESTER_ID \
    LEFT OUTER JOIN CSP.CSP_REQUESTSWS DCREQTS ON DCREQTS.SW_REQUEST_ID = DCSWREQ.SW_REQUEST_ID \
    LEFT OUTER JOIN CSP.CSP_PRODUCT_DOCUMENTS DCPRODDOC ON DCPRODDOC.DOCUMENT_ID = DCREQTS.DOCUMENT_ID \
    LEFT OUTER JOIN CSP.CSP_PRODUCT_PLMS DCPRODENG ON DCPRODENG.PRODUCT_TAXID = DCPRODDOC.PRODUCT_TAXID \
    WHERE DCSWREQ.SW_REQUEST_STATUS_ID In('0','1') \
	And DCSWREQ.SW_REQUEST_ID = ?

SEARCH_SWOTHERFILES_FOR_ADMIN= SELECT A.* FROM \
( \
SELECT DISTINCT \
D.DOCUMENT_ID AS DOCUMENTID, \
D.DOCFILE_NAME AS docFileName, \
D.ISSOFTWARE AS type, \
DDB.FILE_SIZE AS fileSize, \
SC.SWCATEGORY_DESC AS swCategoryDesc, \
D.DOCRELEASE_DATE AS docReleaseDate, \
CASE WHEN D.ISSOFTWARE = 'N' THEN MU4.NAME ELSE MU1.NAME END AS contact, \
MU2.NAME AS updatedBy, \
D.UPDATE_DATE AS updateTime, \
D.STATUS AS status, \
S.REQUIRE_SLA AS requireSLA, \
TO_CHAR( D.CREATE_DATE, 'MM/DD/YYYY' ) AS CREATTS, \
D.DECRYPTPGP, \
D.APPLYWATER_MARK AS APPLYWATERMARK, \
D.ENCRYPTED_DOWNLOAD AS ENCRYPTEDOWNLOAD, \
LAPROD.LISTAGGRPRODNAME AS prodName, \
D.LOCKED, \
DT.DOCTYPE_NAME AS DOCTYPENAME, \
S.CREATED_BY AS CREATUSRID, \
CASE WHEN PE.ISENGINEER_FLAG IS NULL THEN 'N' ELSE PE.ISENGINEER_FLAG END AS ISENGINEER, \
CASE WHEN PLM.ISPLM_FLAG IS NULL THEN 'N' ELSE PLM.ISPLM_FLAG END AS ISPLM, \
CASE WHEN K.ISRESTRICTED IS NULL THEN 'N' ELSE K.ISRESTRICTED END AS ISRESTRICTED, \
CASE WHEN DD.ISFILEOWNER IS NULL THEN 'N' ELSE DD.ISFILEOWNER END AS ISFILEOWNER, \
LV.RELEASE_VERSION ReleaseVersion, \
D.APPLY_ACCESS_PROFILE, \
CASE WHEN D.DOC_CATEGORY IS NULL AND (D.ISSOFTWARE IS NULL OR D.ISSOFTWARE='N') THEN 'OTHER FILE' WHEN D.ISSOFTWARE='Y' THEN 'SOFTWARE' END AS FILETYPE, \
LAPROD.PRODTAXID \
FROM \
CSP.CSP_DOCUMENT D \
LEFT JOIN CSP.CSP_L_VERSIONS LV ON d.VERSION_ID = LV.VERSION_ID \
INNER JOIN \
( \
	SELECT \
	PD.DOCUMENT_ID \
	FROM \
	CSP.CSP_PRODUCT_DOCUMENTS PD INNER JOIN  \
	MASTER.MASTER_PRODUCT_TAXONOMY P ON	PD.PRODUCT_TAXID = P.PRODUCT_TAXID INNER JOIN  \
	CSP.CSP_PRODUCT_ENGINEER PE ON P.PRODUCT_TAXID = PE.PRODUCT_TAXID INNER JOIN  \
	CSP.CSP_DOCUMENT D1 ON PD.DOCUMENT_ID = D1.DOCUMENT_ID \
	WHERE \
	1 = 1 \
	$AddProductName$ \
	$isSoftware$ \
	$update from date$ \
	$update to date$ \
	$status$ \
	$docFileName$ \
	UNION  \
	SELECT \
	PD.DOCUMENT_ID \
	FROM \
	CSP.CSP_PRODUCT_DOCUMENTS PD INNER JOIN  \
	MASTER.MASTER_PRODUCT_TAXONOMY P ON	PD.PRODUCT_TAXID = P.PRODUCT_TAXID INNER JOIN  \
	CSP.CSP_PRODUCT_PLMS PLM ON	P.PRODUCT_TAXID = PLM.PRODUCT_TAXID	INNER JOIN  \
	CSP.CSP_DOCUMENT D2 ON PD.DOCUMENT_ID = D2.DOCUMENT_ID \
	WHERE \
	1 = 1 \
	$AddProductName$ \
	$isSoftware2$ \
	$update from date2$ \
	$update to date2$ \
	$status2$ \
	$docFileName2$ \
) T ON D.DOCUMENT_ID = T.DOCUMENT_ID INNER JOIN \
( \
	SELECT \
	K.DOCUMENT_ID, \
    LISTAGG( K.PRODNAME, ',' ) WITHIN GROUP( ORDER BY K.PRODNAME ) AS LISTAGGRPRODNAME, \
    LISTAGG(K.PRODUCT_TAXID,',') WITHIN GROUP (ORDER BY K.PRODNAME) PRODTAXID \
	FROM \
	( \
		SELECT \
		DP.DOCUMENT_ID, \
		DPT.PRODUCT_NAME AS PRODNAME, \
		DPT.PRODUCT_TAXID, \
		ROW_NUMBER() OVER(PARTITION BY DP.DOCUMENT_ID ORDER BY DPT.PRODUCT_NAME) AS RN \
		FROM \
		CSP.CSP_PRODUCT_DOCUMENTS DP INNER JOIN  \
		MASTER.MASTER_PRODUCT_TAXONOMY DPT ON DP.PRODUCT_TAXID = DPT.PRODUCT_TAXID \
	) K \
	WHERE K.RN <= 500 \
	GROUP BY K.DOCUMENT_ID \
) LAPROD ON D.DOCUMENT_ID = LAPROD.DOCUMENT_ID INNER JOIN \
( \
	SELECT \
	TO_CHAR(USER_ID) AS USERID, \
	(FIRST_NAME || ' ' || LAST_NAME) AS NAME \
	FROM MASTER.MASTER_USER \
	$updatedBy$ \
) MU2 ON D.UPDATED_BY = MU2.USERID \
 LEFT JOIN  \
CSP.CSP_DOCTYPES DT ON D.DOCTYPE_ID = DT.DOCTYPE_ID LEFT JOIN  \
CSP.CSP_DOCUMENTS_BOX DDB ON D.DOCUMENT_ID = DDB.DOCUMENT_ID INNER JOIN \
CSP.CSP_SWATTRIBUTES S ON D.DOCUMENT_ID = S.DOCUMENT_ID INNER JOIN  \
CSP.CSP_SDS_L_SWCATEGORIES SC ON S.SWCATEGORY_ID = SC.SWCATEGORY_ID INNER JOIN \
( \
	SELECT \
	USER_ID AS USERID, \
	(FIRST_NAME || ' ' || LAST_NAME) AS NAME \
	FROM MASTER.MASTER_USER \
) MU1 ON S.CREATED_BY = MU1.USERID INNER JOIN \
( \
	SELECT \
	TO_CHAR( USER_ID ) AS USERID, \
	(FIRST_NAME || ' ' || LAST_NAME) AS NAME \
	FROM MASTER.MASTER_USER \
) MU4 ON S.CREATED_BY = MU4.USERID \
LEFT JOIN \
( \
	SELECT \
	D12.DOCUMENT_ID, \
	'Y' AS ISENGINEER_FLAG, \
	COUNT( PE1.PRODUCT_ENGINEER_ID ) \
	FROM \
	CSP.CSP_PRODUCT_DOCUMENTS PD1 INNER JOIN  \
	CSP.CSP_PRODUCT_ENGINEER PE1 ON PD1.PRODUCT_TAXID = PE1.PRODUCT_TAXID INNER JOIN  \
	CSP.CSP_DOCUMENT D12 ON	PD1.DOCUMENT_ID = D12.DOCUMENT_ID \
	WHERE PE1.PRODUCT_ENGINEER_ID = $userId$  \
	GROUP BY D12.DOCUMENT_ID,'Y'  \
) PE ON D.DOCUMENT_ID = PE.DOCUMENT_ID LEFT JOIN \
( \
	SELECT \
	D12.DOCUMENT_ID, \
	'Y' AS ISPLM_FLAG, \
	COUNT( PLM1.PLMID ) \
	FROM \
	CSP.CSP_PRODUCT_DOCUMENTS PD1 INNER JOIN  \
	CSP.CSP_PRODUCT_PLMS PLM1 ON PD1.PRODUCT_TAXID = PLM1.PRODUCT_TAXID	INNER JOIN  \
	CSP.CSP_DOCUMENT D12 ON	PD1.DOCUMENT_ID = D12.DOCUMENT_ID \
	WHERE PLM1.PLMID = $userId$ \
	GROUP BY D12.DOCUMENT_ID,'Y' \
) PLM ON D.DOCUMENT_ID = PLM.DOCUMENT_ID LEFT JOIN \
( \
	SELECT \
	DUG.DOCUMENT_ID,G.GROUP_ID,SUG.ISRESTRICTED,DUG.ISACTIVE \
	FROM \
	CSP.CSP_DOCUMENT_USER_GROUP DUG LEFT JOIN \
	CSP.CSP_SLA_GROUP G ON DUG.GROUP_ID = G.GROUP_ID LEFT JOIN \
	( \
		SELECT GROUP_ID, \
		'Y' AS ISRESTRICTED, \
		COUNT(GROUP_ID) \
		FROM CSP.CSP_SLA_USER_GROUP \
		WHERE USER_ID = $userId$ \
		GROUP BY GROUP_ID,'Y' \
	) SUG ON G.GROUP_ID = SUG.GROUP_ID \
	WHERE DUG.ISACTIVE = 'Y' \
) K ON D.DOCUMENT_ID = K.DOCUMENT_ID LEFT JOIN \
( \
	SELECT DOCUMENT_ID, \
	'Y' AS ISFILEOWNER, \
	COUNT(DOCUMENT_ID) \
	FROM CSP.CSP_DOCUMENT \
	WHERE CREATED_BY = '$userId$' \
	GROUP BY DOCUMENT_ID,'Y' \
) DD ON D.DOCUMENT_ID = DD.DOCUMENT_ID \
WHERE \
1 = 1 \
$category$ \
$applicableSLA$ \
) A 

    
GET_COMPLETE_SLA_LIST= SELECT DISTINCT VS.slaId AS slaId, VS.status as status, TO_CHAR( VS.CREATEDDATE, 'MM/DD/YYYY' ) AS createdate, \
       TO_CHAR( VS.EFFECTIVEDATE, 'MM/DD/YYYY' ) AS effectivedate, TO_CHAR( VS.EXPIRATIONDATE, 'MM/DD/YYYY' ) AS expirationdate, \
       VS.SOFTWAREDESCRIPTION AS softwareDescription,(CASE WHEN expirationDate >= SYSDATE OR expirationDate IS NULL THEN 'N' ELSE 'Y' \
       END )AS isExpired,  VS.COMPLATEDDOCUMENTURL, VS.AGREEMENTID FROM CSP.V_SLA VS WHERE VS.STATUS IN( \
             'Completed', \
             'Completed Non-Standard' \
       ) \
       AND( \
             VS.COMPANYNAME = :companyName \
             OR VS.CHILDCOMPANY = :companyName  \
       )

GET_INCOMPLETE_SLA_LIST=SELECT  DISTINCT VS.SLAID AS slaId,VS.STATUS as status,to_char(VS.CREATEDDATE,'MM/DD/YYYY') as createdate, \
                          to_char(VS.EFFECTIVEDATE,'MM/DD/YYYY') as effectivedate, \
                           to_char(VS.EXPIRATIONDATE,'MM/DD/YYYY') as expirationdate, \
                          VS.SOFTWAREDESCRIPTION as  softwareDescription, \
                           case when expirationDate>=sysdate or expirationDate is null then 'N' else 'Y' end as isExpired, VS.COMPLATEDDOCUMENTURL,VS.AGREEMENTID  \
                          FROM CSP.V_SLA VS WHERE VS.STATUS NOT IN ('Completed','Completed Non-Standard') AND (VS.COMPANYNAME= :companyName  OR VS.CHILDCOMPANY= :companyName )


FETCH_PRECONFIGURED_SLA=select distinct ps.sla_id,v.EXPIRATIONDATE,v.location,v.COMPLATEDDOCUMENTURL from csp.csp_productslas ps,csp.csp_product_documents dp, \
		csp.V_SLA v where ps.product_id=dp.product_taxid and ps.sla_id = v.slaid \
		and ps.company_id=$companyId$ and dp.document_id in (:docIds) \
       order by ps.sla_id
       
SLA_EXCEPTION_LIST=select DP.document_id,DP.product_taxid, (case when DS.DOCUMENT_ID is null and DE.PRODUCT_ID is null then 'False' else 'True'  End)  Status \
		from csp.csp_product_documents dp,(SELECT * FROM	csp.csp_SWSLA WHERE COMPANY_ID=$companyId$) DS, \
		(SELECT * FROM csp.csp_SLAEXCEPTIONS WHERE COMPANY_ID=$companyId$ and ACTIVE = 'Y') DE \
		where dp.DOCUMENT_ID =DS.DOCUMENT_ID(+) \
		AND dp.PRODUCT_taxID =DE.PRODUCT_ID(+) \
		AND dp.DOCUMENT_ID IN (:docIds) \
		ORDER BY 1,2

GET_ALL_USERS=SELECT mu.id as id, mu.firstName as firstName, mu.lastName as lastName, mu.email as email FROM MasterUser as mu, MasterUserRole as mur , MasterRoles as mr WHERE mur.userId = mu.id AND mr.roleId = mur.roleId AND mu.activeFlag = 'Y' AND LOWER(mr.roleName) = LOWER('Engineer') ORDER BY LOWER(mu.firstName) ASC 
GET_EXISTING_ENGINEERS=SELECT mu.id as id, mu.firstName as firstName, mu.lastName as lastName, mu.email as email FROM MasterUser as mu, CSPProductEngineer as dp, ProductTaxonomy as dpt WHERE mu.activeFlag = 'Y' AND LOWER(dp.isActive) IN ('y') AND dp.productEngineerId = mu.id AND LOWER(dpt.recordActive) = 'y' AND dp.productTaxId = dpt.productTaxId AND dpt.productTaxId = ? ORDER BY mu.firstName ASC 

FETCH_NOTIFY_USER_GROUP=\
SELECT DISTINCT  \
G.GROUP_ID,G.GROUP_NAME   \
FROM   \
CSP.CSP_SLA_GROUP G INNER JOIN  \
(  \
	SELECT   \
	L.GROUP_ID  \
	FROM  \
	(  \
		SELECT   \
		K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY  \
		FROM  \
		(  \
			SELECT DISTINCT  \
			A.GROUP_ID,B.COMPANY_ID  \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
		) K  \
		GROUP BY K.GROUP_ID  \
		HAVING COUNT(K.COMPANY_ID) = 2  \
	) L INNER JOIN  \
	(  \
		SELECT  \
		A.GROUP_ID,B.COMPANY_ID  \
		FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
		MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
	) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN  \
	CSP.CSP_SLA_GROUPSLA A ON L1.COMPANY_ID = A.COMPANY_ID  \
	WHERE L1.COMPANY_ID = 3  \
	UNION  \
	SELECT  \
	L.GROUP_ID \
	FROM  \
	(  \
		SELECT   \
		K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY  \
		FROM  \
		(  \
			SELECT DISTINCT  \
			A.GROUP_ID,B.COMPANY_ID  \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
		) K  \
		GROUP BY K.GROUP_ID  \
		HAVING COUNT(K.COMPANY_ID) = 1  \
	) L INNER JOIN  \
	(  \
		SELECT  \
		A.GROUP_ID,B.COMPANY_ID  \
		FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
		MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
	) L1 ON L.GROUP_ID = L1.GROUP_ID INNER JOIN  \
	CSP.CSP_SLA_GROUPSLA A ON L1.COMPANY_ID = A.COMPANY_ID  \
	WHERE L1.COMPANY_ID <> 3  \
	UNION  \
	SELECT L.GROUP_ID  \
	FROM  \
	(  \
		SELECT   \
		K.GROUP_ID,COUNT(K.COMPANY_ID) AS RN_COMPANY  \
		FROM  \
		(  \
			SELECT DISTINCT  \
			A.GROUP_ID,B.COMPANY_ID  \
			FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
			MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
		) K  \
		GROUP BY K.GROUP_ID  \
		HAVING COUNT(K.COMPANY_ID) = 1  \
	) L INNER JOIN  \
	(  \
		SELECT  \
		A.GROUP_ID,B.COMPANY_ID  \
		FROM CSP.CSP_SLA_USER_GROUP A INNER JOIN  \
		MASTER.MASTER_USER B ON A.USER_ID = B.USER_ID  \
	) L1 ON L.GROUP_ID = L1.GROUP_ID  \
	WHERE L1.COMPANY_ID = 3  \
) T1 ON G.GROUP_ID = T1.GROUP_ID   \
--INNER JOIN CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID = UG.GROUP_ID   \
LEFT JOIN CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID = GO.GROUP_ID   \
--LEFT JOIN MASTER.MASTER_USER M ON M.USER_ID = UG.USER_ID   \
--INNER JOIN CSP.CSP_SLA_GROUPSLA S ON G.GROUP_ID = S.GROUP_ID  \
WHERE   \
G.TYPE = 0   \
--AND S.COMPANY_ID > 0   \
AND G.RECORD_ACTIVE = 'Y' 

########## GET SLA STATUS ############

GET_SLA_STATUS = SELECT DISTINCT A.User_id, \
  U.First_name \
  || U.Last_name "Full Name", \
  U.login_name, \
  A.Sla_id, \
  A.Company_id, \
  MC.Company_name \
FROM CSP.CSP_MYSLAALERTS A \
INNER JOIN master.Master_User U \
ON A.User_id = U.User_id \
INNER JOIN csp.V_Sla S \
ON S.Slaid = A.Sla_id \
INNER JOIN master.master_company mc \
ON mc.COMPANY_ID        = A.COMPANY_ID \
WHERE Lower(S.Status) IN('completed','completed non-standard') \
AND A.NOTIFIED_TIME    IS NULL

######################################

######## Update My SLA Alerts ########

UPDATE_MY_SLA_ALERTS=update CSP.CSP_MYSLAALERTS set notified_time = ? where user_id = ? and sla_id = ?

######################################

GET_VERIFIED_3PL=SELECT SHORT_CODE FROM CSP.CSP_T_THIRDPARTYLICENSES TP, \
			master.MASTER_COMPANY MC, \
			CSP.CSP_COMPANYTPL DC \
			WHERE MC.COMPANY_ID = DC.COMPANY_ID \
			AND DC.VERIFIED = 'Y'  \
			AND DC.TLICENSE_ID = TP.TLICENSE_ID \
			AND MC.COMPANY_ID = :companyId 
			
FETCH_THIRD_PARTY_DETAILS=SELECT SHORT_CODE, THIRD_PARTY_LICENSE \
			FROM CSP.CSP_T_THIRDPARTYLICENSES TP \
			WHERE SHORT_CODE IN (:shortCodes)

########################################

GET_AUDIT_REPORT=SELECT DISTINCT \
                 TO_CHAR(U.ACCESS_TIME,'MM/DD/YYYY HH:MI:SS AM') AS DOWNLOADTIME, \
                 TO_CHAR(NVL(TO_CHAR(D.DOCUMENT_ID),' '||' ')) AS DOCUMENTID, \
                 TO_CHAR(NVL(D.DOCFILE_NAME,' '||' ')) AS DOCFILENAME, \
                 D.STATUS, \
                 TO_CHAR(NVL(DPT.PRODUCT_NAME,' '||' ')) AS PRODNAME, \
                 C.COMPANY_NAME AS COMPANYNAME, \
                 (NVL(M.FIRST_NAME,' ')|| ' '||NVL(M.LAST_NAME,' ')) AS USER_NAME, \
                 NVL(M.LOGIN_NAME,' ') AS EMAIL, \
                 TPL.THIRD_PARTY_LICENSE AS THIRDPARTYLICENSE \
                 FROM CSP.CSP_USAGELOGS U INNER JOIN \
                 CSP.CSP_DOCUMENT D ON U.DOCUMENT_ID = D.DOCUMENT_ID INNER JOIN \
                 CSP.CSP_PRODUCT_DOCUMENTS PD ON D.DOCUMENT_ID = PD.DOCUMENT_ID INNER JOIN \
                 MASTER.MASTER_PRODUCT_TAXONOMY DPT ON PD.PRODUCT_TAXID = DPT.PRODUCT_TAXID INNER JOIN \
                 CSP.CSP_SWTPLICENSES SW ON D.DOCUMENT_ID = SW.DOCUMENT_ID INNER JOIN \
                 CSP.CSP_T_THIRDPARTYLICENSES TPL ON SW.TLICENSE_ID = TPL.TLICENSE_ID INNER JOIN \
                 MASTER.MASTER_USER M ON U.USER_ID = M.USER_ID INNER JOIN \
                 MASTER.MASTER_COMPANY C ON M.COMPANY_ID = C.COMPANY_ID INNER JOIN \
                 MASTER.MASTER_COUNTRY MC ON M.COUNTRY_ID = MC.COUNTRY_ID \
                 WHERE \
                 D.ISSOFTWARE = 'Y' \
                 AND (TRUNC(U.ACCESS_TIME) >= TO_DATE(:fromDate,'MM/DD/YYYY') \
                 AND TRUNC(U.ACCESS_TIME)  <= TO_DATE(:toDate,'MM/DD/YYYY'))

 ##############################################################
 GET_COMPANY_LICENSE_REPORT=SELECT \
                            MC.COMPANY_NAME, \
                            TPL.SHORT_CODE, \
                            TPL.THIRD_PARTY_LICENSE \
                            FROM CSP.CSP_COMPANYTPL CTPL INNER JOIN \
                            MASTER.MASTER_COMPANY MC ON CTPL.COMPANY_ID = MC.COMPANY_ID INNER JOIN \
                            CSP.CSP_T_THIRDPARTYLICENSES TPL ON CTPL.TLICENSE_ID = TPL.TLICENSE_ID \
                            WHERE CTPL.VERIFIED = 'Y' \
                            ORDER BY UPPER(MC.COMPANY_NAME),TPL.SHORT_CODE
                            
FETCH_EXT_TPLICENSE=select A.*,(select first_name||' '||last_name user_name from master.master_user where user_id=A.updated_by) user_name \
FROM \
      (SELECT L.third_party_license, L.updated_by,L.update_date,L.tlicense_id,L.short_code \
      FROM csp.csp_T_ThirdPartyLicenses L)A Order by upper(Third_Party_License)
      
DOC_USER_PERMISSION = {CALL CSP.docuserpermission(?, ?, ?)}

FETCH_TPLICENSE_BY_DOCUMENTID=SELECT L.third_party_license \
FROM csp.csp_T_ThirdPartyLicenses L, \
  csp.csp_swtplicenses sw where sw.TLICENSE_ID = L.TLICENSE_ID \
AND sw.document_id                          =:documentId

FETCH_FILE_UPLOAD_STATUS=SELECT * \
			FROM csp.csp_file_scan_STAGE \
			WHERE ARC_FILE_NAME = :fileName \
			AND SCAN_STATUS IN ('I', 'C') \
			AND TRUNC(UPLOAD_DT) = TO_DATE(TO_CHAR(:date,'MM/DD/YYYY'),'MM/DD/YYYY')
			

#FETCH_USERGROUP_PERMISSION=	SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
#FROM  \
#	CSP.CSP_SLA_GROUP G inner join \
#	CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID left outer join \
#	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join \
#	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID \
#WHERE \
#	G.TYPE  = 0  \
#	AND G.RECORD_ACTIVE  = 'Y' \
#	ORDER BY LOWER(G.GROUP_NAME)
#FETCH_USERGROUP_PERMISSION_BASLA=SELECT * FROM (SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
#FROM \
#	CSP.CSP_SLA_GROUP G inner join \
#	CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID left outer join \
#	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join \
#	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID \
#	INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID  = M.COMPANY_ID \
#WHERE \
#	G.TYPE  = 0  \
#	AND G.RECORD_ACTIVE  = 'Y' \
#	AND MC.INTERNAL = 'Y' \
#    UNION \
#    SELECT DISTINCT G.GROUP_ID,G.GROUP_NAME \
#FROM \
#	CSP.CSP_SLA_GROUP G inner join \
#	CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID left outer join \
#	CSP.CSP_SLA_GROUPOWNER GO ON G.GROUP_ID  = GO.GROUP_ID left outer join \
#	MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID \
#	INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID  = M.COMPANY_ID \
#    left outer join CSP.CSP_SLA_GROUPSLA S ON G.GROUP_ID=S.GROUP_ID \
#WHERE \
#	G.TYPE  = 0 \
#	AND G.RECORD_ACTIVE  = 'Y' \
#    AND S.COMPANY_ID>0 \
#	AND MC.INTERNAL = 'N') \
#	ORDER BY LOWER(GROUP_NAME)
	
FETCH_USERGROUP_PERMISSION= select GROUP_ID, GROUP_NAME from CSP.CSP_GROUP_SLA_MASTER_TBL where lower(group_status) = lower('Complete') \
and group_type = 0 AND RECORD_ACTIVE  = 'Y' \
order by lower(GROUP_NAME) \

FETCH_USERGROUP_PERMISSION_BASLA=select distinct GROUP_ID, GROUP_NAME from CSP.CSP_GROUP_SLA_MASTER_TBL where lower(group_status) = lower('Complete') \
and group_type = 0 and group_id in \
( \
SELECT DISTINCT G.GROUP_ID \
FROM \
              CSP.CSP_SLA_GROUP G inner join \
              CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID inner join \
              MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID \
              INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID  = M.COMPANY_ID \
WHERE \
              G.TYPE  = 0 \
              AND G.RECORD_ACTIVE  = 'Y' \
              AND MC.INTERNAL = 'Y' \
UNION \
SELECT DISTINCT G.GROUP_ID \
FROM \
              CSP.CSP_SLA_GROUP G inner join \
              CSP.CSP_SLA_USER_GROUP UG ON G.GROUP_ID  = UG.GROUP_ID inner join \
              MASTER.MASTER_USER M ON M.USER_ID  = UG.USER_ID \
              INNER JOIN MASTER.MASTER_COMPANY MC ON MC.COMPANY_ID  = M.COMPANY_ID \
                left outer join CSP.CSP_SLA_GROUPSLA S ON G.GROUP_ID=S.GROUP_ID \
WHERE \
              G.TYPE  = 0 \
              AND G.RECORD_ACTIVE  = 'Y' \
    AND S.COMPANY_ID>0 \
              AND MC.INTERNAL = 'N' \
) order by lower(GROUP_NAME) \

GET_ALL_PENDING_REQUESTS=\
SELECT \
    dcswreq.sw_request_id, \
    dcswreq.contact_first_name, \
    dcswreq.contact_last_name, \
    dcswreq.contact_email, \
    dcswreq.other_information, \
    dcswreq.cc_emails, \
    mu.first_name, \
    mu.last_name, \
    dcswtypes.request_type_name, \
    nvl(ds.countid,0) users, \
    coalesce( ( \
        SELECT \
            LISTAGG(sla_id, \
            ',') WITHIN GROUP( \
            ORDER BY \
                sla_id \
            ) cnt \
        FROM \
            csp.csp_swrequestslas \
        WHERE \
            sw_request_id = dcswreq.sw_request_id \
    ),'-') AS slaids, \
    nvl(drc.countid,0) softwares, \
    req_status.listaggstatus request_status, \
    mc.company_name, \
    dcswreq.request_date, \
    dcswreqstatus.sw_request_status_name \
FROM \
    csp.csp_swrequests dcswreq, \
    csp.csp_l_swrequesttypes dcswtypes, \
    csp.csp_l_swrequeststatuses dcswreqstatus, \
    master.master_user mu, \
    master.master_company mc, \
    ( \
        SELECT \
            st.sw_request_id, \
            LISTAGG(DECODE(st.sw_approval_status_id,2,'p:' || st.cnt,4,'G:' || st.cnt,3,'D:' || st.cnt), '-') WITHIN GROUP( \
            ORDER BY st.sw_approval_status_id) listaggstatus \
        FROM \
            ( \
                SELECT \
                    sw_request_id, \
                    sw_approval_status_id, \
                    COUNT(sw_request_id) cnt \
                FROM \
                    csp.csp_requestsws \
                WHERE \
                    sw_approval_status_id IN ( \
                        2, \
                        3, \
                        4 \
                    ) \
                GROUP BY \
                    sw_request_id, \
                    sw_approval_status_id \
            ) st \
        GROUP BY \
            st.sw_request_id\
    ) req_status, \
    ( \
        SELECT \
            rt.sw_request_id, \
            rt.request_type_id, \
            COUNT(dr.sw_request_id) countid \
        FROM \
            csp.csp_swrequests rt, \
            csp.csp_requestsws dr \
        WHERE \
            rt.sw_request_id = dr.sw_request_id (+) \
        GROUP BY \
            rt.sw_request_id, \
            rt.request_type_id \
    ) drc, \
    ( \
        SELECT \
            sw_request_id, \
            COUNT(sw_request_id) countid \
        FROM \
            csp.csp_swrequestusers \
        GROUP BY \
            sw_request_id \
    ) ds, \
    ( \
        SELECT \
            sw_request_id, \
            CASE \
                    WHEN instr( \
                        LISTAGG(sla_id,',') WITHIN GROUP( \
                        ORDER BY \
                            sla_id \
                        ),',',1,10) > 0 THEN substr( \
                        LISTAGG(sla_id,',') WITHIN GROUP( \
                        ORDER BY \
                            sla_id \
                        ),1,instr( \
                        LISTAGG(sla_id,',') WITHIN GROUP( \
                        ORDER BY \
                            sla_id \
                        ),',',1,10) - 1) \
                    || '..more' \
                    ELSE \
                        LISTAGG(sla_id, \
                        ',') WITHIN GROUP( \
                        ORDER BY \
                            sla_id \
                        ) \
                END \
            listaggrslids \
        FROM \
            ( \
                SELECT \
                    sw_request_id, \
                    sla_id, \
                    ROW_NUMBER() OVER( \
                        PARTITION BY sw_request_id \
                        ORDER BY \
                            sla_id ASC \
                    ) AS rn \
                FROM \
                    csp.csp_swrequestslas \
                ORDER BY \
                    1, \
                    2 \
            ) \
        WHERE \
            rn <= 15 \
        GROUP BY \
            sw_request_id \
    ) slid, \
    ( \
        SELECT \
            dcswreq.sw_request_id \
        FROM \
            csp.csp_swrequests dcswreq, \
            csp.csp_requestsws dr, \
            csp.csp_product_documents dpr, \
            csp.csp_slaexceptions dsex \
        WHERE \
            dcswreq.sw_request_id = dr.sw_request_id \
            AND   dr.document_id = dpr.document_id \
            AND   dpr.product_taxid = dsex.product_id \
            AND   dcswreq.company_id = dsex.company_id \
        GROUP BY \
            dcswreq.sw_request_id \
    ) slaexcp \
WHERE \
    1 = 1 \
    AND   dcswreq.sw_request_status_id IN ( \
        '0', \
        '1' \
    ) \
    AND   dcswreq.company_id = mc.company_id \
    AND   dcswreq.request_type_id = dcswtypes.request_type_id \
    AND   dcswreq.requester_id = mu.user_id \
    AND   dcswreq.sw_request_status_id = dcswreqstatus.sw_request_status_id \
    AND   dcswreq.sw_request_id = req_status.sw_request_id (+) \
    AND   dcswreq.sw_request_id = drc.sw_request_id \
    AND   dcswreq.sw_request_id = ds.sw_request_id (+) \
    AND   dcswreq.sw_request_id = slid.sw_request_id (+) \
    AND   dcswreq.sw_request_id = slaexcp.sw_request_id (+) \
    AND   ( \
        CASE \
            WHEN drc.request_type_id = 1    THEN nvl(slid.sw_request_id,slaexcp.sw_request_id) \
            WHEN drc.request_type_id = 2 \
                 AND   drc.countid > 0 THEN nvl(slid.sw_request_id,slaexcp.sw_request_id) \
            WHEN drc.request_type_id = 2 \
                 AND   drc.countid = 0 THEN coalesce(slid.sw_request_id,slaexcp.sw_request_id,dcswreq.sw_request_id) \
        END \
    ) = dcswreq.sw_request_id \
    AND   dcswreq.request_type_id = :softwareRequestType \
    AND   dcswreq.create_date >= ((SYSDATE)-90) \
ORDER BY \
    dcswreq.update_date DESC \
    
GET_APPROVER_PENDING_REQUESTS=\
SELECT \
    sw_request_id, \
    request_date, \
    company_id, \
    company_name, \
    requestandcompany, \
    noofdayspending, \
    usercount, \
    plmid, \
    plmid2, \
    COUNT(document_id) \
FROM \
    ( \
        SELECT DISTINCT \
            dcreqsw.sw_request_id, \
            TO_CHAR(dcswreq.request_date,'dd-MM-yyyy') request_date, \
            dcswreq.company_id, \
            mc.company_name, \
            CAST(dcswreq.sw_request_id AS VARCHAR(10) ) \
            || ':' \
            || mc.company_name AS requestandcompany, \
            trunc(SYSDATE) - trunc(dcswreq.request_date) AS noofdayspending, \
            ( \
                SELECT \
                    COUNT(requsers.sw_request_id) \
                FROM \
                    csp.csp_swrequestusers requsers \
                WHERE \
                    requsers.sw_request_id = dcswreq.sw_request_id \
            ) usercount, \
            ( \
                SELECT \
                    COUNT(reqs.sw_request_id) \
                FROM \
                    csp.csp_requestsws reqs \
                WHERE \
                    reqs.sw_request_id = dcswreq.sw_request_id \
            ) swcount, \
            dcreqsw.document_id, \
            dcdoc.doc_number, \
            dcdoc.doc_title, \
            dcswcat.swcategory_desc, \
            dcswatt.require_sla, \
            swreqstatus.sw_approval_status_name, \
            coalesce(plm1.listaggruser,apr.ename) plmid, \
            coalesce(plm2.listaggrlogin_name,apr.mail) plmid2, \
            dp.listaggrslids product_name \
        FROM \
            csp.csp_requestsws dcreqsw, \
            csp.csp_document dcdoc, \
            csp.csp_swattributes dcswatt, \
            csp.csp_sds_l_swcategories dcswcat, \
            csp.csp_swapprovalstatuses swreqstatus, \
            csp.csp_swrequests dcswreq, \
            master.master_company mc, \
            ( \
                SELECT \
                    sw_request_id, \
                    document_id, \
                    plmid, \
                    CASE \
                            WHEN instr( \
                                LISTAGG(ename,',') WITHIN GROUP( \
                                ORDER BY \
                                    ename \
                                ),',',1,10) > 0 THEN substr( \
                                LISTAGG(ename,',') WITHIN GROUP( \
                                ORDER BY \
                                    ename \
                                ),1,instr( \
                                LISTAGG(ename,',') WITHIN GROUP( \
                                ORDER BY \
                                    ename \
                                ),',',1,10) - 1) \
                            || '..more' \
                            ELSE \
                                LISTAGG(ename, \
                                ',') WITHIN GROUP( \
                                ORDER BY \
                                    ename \
                                ) \
                        END \
                    listaggrsenames \
                FROM \
                    ( \
                        SELECT \
                            dr.sw_request_id, \
                            dr.document_id, \
                            dplm.plmid, \
                            mu.first_name \
                            || ' ' \
                            || mu.last_name ename, \
                            ROW_NUMBER() OVER( \
                                PARTITION BY dr.sw_request_id, \
                                dr.document_id \
                                ORDER BY \
                                    dplm.plmid ASC \
                            ) AS rn \
                        FROM \
                            csp.csp_requestsws dr, \
                            csp.csp_product_documents dp, \
                            master.master_product_taxonomy dpt, \
                            csp.csp_product_plms dplm, \
                            master.master_user mu \
                        WHERE \
                            1 = 1 \
                            AND   dr.document_id = dp.document_id \
                            AND   dp.product_taxid = dpt.product_taxid \
                            AND   dpt.product_taxid = dplm.product_taxid \
                            AND   dplm.plmid = mu.user_id \
                            AND   dplm.isprimary = 'Y' \
                            AND   dplm.record_activity = 'Y' \
                            AND   EXISTS ( \
                                SELECT \
                                    1 \
                                FROM \
                                    master.master_product_taxonomy \
                                WHERE \
                                    sw_require_approval = 'Y' \
                                    AND   product_taxid IN ( \
                                        SELECT \
                                            product_taxid \
                                        FROM \
                                            csp.csp_product_documents \
                                        WHERE \
                                            document_id = dp.document_id \
                                    ) \
                            ) \
                        GROUP BY \
                            dr.sw_request_id, \
                            dr.document_id, \
                            dplm.plmid, \
                            mu.first_name \
                            || ' ' \
                            || mu.last_name \
                        ORDER BY \
                            1, \
                            2, \
                            3 \
                    ) \
                WHERE \
                    rn <= 15 \
                GROUP BY \
                    sw_request_id, \
                    document_id, \
                    plmid \
            ) plm, \
            ( \
                SELECT \
                    document_id, \
                    CASE \
                            WHEN instr( \
                                LISTAGG(first_name \
                                || ' ' \
                                || last_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    first_name \
                                    || ' ' \
                                    || last_name \
                                ),',',1,10) > 0 THEN substr( \
                                LISTAGG(first_name \
                                || ' ' \
                                || last_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    first_name \
                                    || ' ' \
                                    || last_name \
                                ),1,instr( \
                                LISTAGG(first_name \
                                || ' ' \
                                || last_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    first_name \
                                    || ' ' \
                                    || last_name \
                                ),',',1,10) - 1) \
                            || '..more' \
                            ELSE \
                                LISTAGG(first_name \
                                || ' ' \
                                || last_name, \
                                ',') WITHIN GROUP( \
                                ORDER BY \
                                    first_name \
                                    || ' ' \
                                    || last_name \
                                ) \
                        END \
                    listaggruser \
                FROM \
                    ( \
                        SELECT \
                            dp.document_id, \
                            mu.first_name, \
                            mu.last_name, \
                            ROW_NUMBER() OVER( \
                                PARTITION BY dp.document_id \
                                ORDER BY \
                                    mu.first_name, \
                                    mu.last_name ASC \
                            ) AS rn \
                        FROM \
                            csp.csp_product_documents dp, \
                            master.master_product_taxonomy dpt, \
                            csp.csp_product_plms dplm, \
                            master.master_user mu \
                        WHERE \
                            1 = 1 \
                            AND   dp.product_taxid = dpt.product_taxid \
                            AND   dpt.product_taxid = dplm.product_taxid \
                            AND   dplm.plmid = mu.user_id \
                            AND   dplm.isprimary = 'Y' \
                            AND   dplm.record_activity = 'Y' \
                            AND   EXISTS ( \
                                SELECT \
                                    1 \
                                FROM \
                                    master.master_product_taxonomy \
                                WHERE \
                                    sw_require_approval = 'Y' \
                                    AND   product_taxid IN ( \
                                        SELECT \
                                            product_taxid \
                                        FROM \
                                            csp.csp_product_documents \
                                        WHERE \
                                            document_id = dp.document_id \
                                    ) \
                            ) \
                        GROUP BY \
                            dp.document_id, \
                            mu.first_name, \
                            mu.last_name \
                        ORDER BY \
                            1, \
                            2, \
                            3 \
                    ) \
                WHERE \
                    rn <= 15 \
                GROUP BY \
                    document_id \
            ) plm1, \
            ( \
            SELECT document_id, \
                    CASE \
                            WHEN instr(LISTAGG(login_name,',') WITHIN GROUP(ORDER BY login_name),',',1,10) > 0 THEN substr( \
                            LISTAGG(login_name,',') WITHIN GROUP(ORDER BY login_name),1,instr(LISTAGG(login_name,',') \
                            WITHIN GROUP(ORDER BY login_name),',',1,10) - 1) || '..more' ELSE LISTAGG(login_name,',') WITHIN \
                            GROUP(ORDER BY login_name) END listaggrlogin_name \
                FROM \
                    ( \
                        SELECT \
                         dp.document_id,mu.login_name,ROW_NUMBER() OVER(PARTITION BY dp.document_id ORDER BY mu.login_name ASC \
                            ) AS rn \
                        FROM \
                            csp.csp_product_documents dp, \
                            master.master_product_taxonomy dpt, \
                            csp.csp_product_plms dplm, \
                            master.master_user mu \
                        WHERE \
                            1 = 1 \
                            AND   dp.product_taxid = dpt.product_taxid \
                            AND   dpt.product_taxid = dplm.product_taxid \
                            AND   dplm.plmid = mu.user_id \
                            AND   dplm.isprimary = 'Y' \
                            AND   dplm.record_activity = 'Y' \
                            AND   EXISTS ( \
                                SELECT \
                                    1 \
                                FROM \
                                    master.master_product_taxonomy \
                                WHERE \
                                    sw_require_approval = 'Y' \
                                    AND   product_taxid IN ( \
                                        SELECT \
                                            product_taxid \
                                        FROM \
                                            csp.csp_product_documents \
                                        WHERE \
                                            document_id = dp.document_id \
                                    ) \
                            ) \
                        GROUP BY \
                            dp.document_id, \
                            mu.login_name \
                        ORDER BY \
                            1, \
                            2, \
                            3 \
                    ) \
                WHERE \
                    rn  <= 15 \
                GROUP BY \
                    document_id \
            ) plm2, \
            ( \
                SELECT \
                    document_id, \
                    CASE \
                            WHEN instr( \
                                LISTAGG(product_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    product_name \
                                ),',',1,20) > 0 THEN substr( \
                                LISTAGG(product_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    product_name \
                                ),1,instr( \
                                LISTAGG(product_name,',') WITHIN GROUP( \
                                ORDER BY \
                                    product_name \
                                ),',',1,20) - 1) \
                            || '..more' \
                            ELSE \
                                LISTAGG(product_name, \
                                ',') WITHIN GROUP( \
                                ORDER BY \
                                    product_name \
                                ) \
                        END \
                    listaggrslids \
                FROM \
                    ( \
                        SELECT \
                            dpd.document_id, \
                            dpt.product_name, \
                            ROW_NUMBER() OVER( \
                                PARTITION BY dpd.document_id \
                                ORDER BY \
                                    dpt.product_name ASC \
                            ) AS rn \
                        FROM \
                            csp.csp_product_documents dpd, \
                            master.master_product_taxonomy dpt \
                        WHERE \
                            dpt.product_taxid = dpd.product_taxid \
                        ORDER BY \
                            1, \
                            2, \
                            3 \
                    ) \
                WHERE \
                    rn <= 15 \
                GROUP BY \
                    document_id \
            ) dp, \
            ( \
                SELECT \
                    dr.sw_request_id, \
                    dr.document_id, \
                    da.approver_id, \
                    mu.first_name \
                    || ' ' \
                    || mu.last_name ename, \
                    mu.login_name mail \
                FROM \
                    csp.csp_requestsws dr, \
                    csp.csp_product_documents dp, \
                    master.master_product_taxonomy dpt, \
                    csp.csp_documentapprover da, \
                    master.master_user mu \
                WHERE \
                    dr.document_id = dp.document_id \
                    AND   dp.product_taxid = dpt.product_taxid \
                    AND   da.approver_id = mu.user_id \
                    AND   NOT EXISTS ( \
                        SELECT \
                            1 \
                        FROM \
                            master.master_product_taxonomy \
                        WHERE \
                            sw_require_approval = 'Y' \
                            AND   product_taxid IN ( \
                                SELECT \
                                    product_taxid \
                                FROM \
                                    csp.csp_product_documents \
                                WHERE \
                                    document_id = dp.document_id \
                            ) \
                    ) \
                    AND   dr.document_id = da.document_id \
                GROUP BY \
                    dr.sw_request_id, \
                    dr.document_id, \
                    da.approver_id, \
                    mu.first_name \
                    || ' ' \
                    || mu.last_name, \
                    mu.login_name \
            ) apr \
        WHERE \
            1 = 1 \
            AND   dcreqsw.sw_request_id = ? \
            AND   dcdoc.document_id = dcreqsw.document_id \
            AND   dcswatt.document_id (+) = dcreqsw.document_id \
            AND   dcswcat.swcategory_id (+) = dcswatt.swcategory_id \
            AND   swreqstatus.sw_approval_status_id (+) = dcreqsw.sw_approval_status_id \
            AND   dcreqsw.sw_request_id = plm.sw_request_id (+) \
            AND   dcreqsw.document_id = plm.document_id (+) \
            AND   dcreqsw.document_id = plm1.document_id (+) \
            AND   dcreqsw.document_id = plm2.document_id (+) \
            AND   dcreqsw.sw_request_id = apr.sw_request_id (+) \
            AND   dcreqsw.document_id = apr.document_id (+) \
            AND   dcreqsw.sw_approval_status_id = 2 \
            AND   dcreqsw.document_id = dp.document_id (+) \
            AND   dcswreq.sw_request_id = dcreqsw.sw_request_id (+) \
            AND   dcswreq.company_id = mc.company_id (+) \
        ORDER BY \
            noofdayspending \
    ) \
GROUP BY \
    sw_request_id, \
    request_date, \
    company_id, \
    company_name, \
    requestandcompany, \
    noofdayspending, \
    usercount, \
    plmid, \
    plmid2
    
REQUEST_DOC_USER_INSERT_PROC=call csp.REQUEST_DOC_USER_INSERT (?, ?,?,?,?,?,?,?,?)
SEL_DEL_DOC_INSERT_PROC=call csp.SEL_DEL_DOC_INSERT (?, ?,?,?,?)
EMAIL_DOC_USER_INSERT_PROC = call csp.EMAIL_DOC_USER_INSERT (?, ?,?,?) 
DOC_USER_DOCSET_INSERT_PROC = call csp.DOC_USER_DOCSET_INSERT (?, ?,?,?,?)
UPDATE_REQUESTSWS_PROC = call CSP.UPDATE_REQUESTSWS(?, ?,?,?)
REMOVE_DOCPERMISSION_PROC = call CSP.REMOVE_DOCPERMISSION(?,?)
SFG_DOCSETPERMISSIONS_PROC = call CSP.SFG_DOCSETPERMISSIONS(?, ?,?,?)
SFG_DOC_USER_INSERT_PROC = call CSP.SFG_DOC_USER_INSERT(?, ?,?,?,?, ?,?,?,?)

DELETE_MULTIPLE_REQUEST_SOFTWARES=\
delete from RequestSWS where swRequestId =:requestId and documentId IN (:documentId)

DELETE_MULTIPLE_REQUEST_USERS=\
delete from SWRequestUsers where swRequestId =:requestId and userId IN (:userId)

DELETE_MULTIPLE_REQUEST_SLA=\
delete from SWRequestSLA where swRequestId =:requestId and slaId IN (:slaId)


GET_REQUEST_SWS = SELECT REQUEST_SWS_ID,SW_REQUEST_ID,DOCUMENT_ID,SW_APPROVAL_STATUS_ID,CREATE_DATE,CREATED_BY FROM CSP.CSP_REQUESTSWS WHERE SW_REQUEST_ID= :requestId

FETCH_USER_DETAILS_FOR_USER_GROUP = \
select  distinct m.USER_ID, \
m.FIRST_NAME||' '||m.LAST_NAME as name, \
c.COMPANY_NAME as company, \
m.LOGIN_NAME as email,m.city||','||m.STATE_NAME||','||mc.COUNTRY_NAME as location \
from MASTER.MASTER_USER m INNER JOIN MASTER.MASTER_COMPANY c ON m.COMPANY_ID=c.COMPANY_ID INNER JOIN MASTER.MASTER_COUNTRY mc  \
ON m.COUNTRY_ID=mc.COUNTRY_ID \
where c.COMPANY_ID IN ( :companyIdsList ) and c.ISACTIVE='Y' and m.ACTIVE_FLAG='Y'


GET_COMPANY_FOR_GROUP = \
SELECT \
	DISTINCT  \
	MC.COMPANY_NAME AS companyName, \
	MC.COMPANY_ID AS COMPANY_ID \
FROM \
	MASTER.MASTER_USER MU \
JOIN CSP.CSP_SLA_USER_GROUP UG ON \
	MU.USER_ID = UG.USER_ID \
JOIN MASTER.MASTER_COMPANY MC ON \
	MU.COMPANY_ID = MC.COMPANY_ID \
WHERE \
	MU.ACTIVE_FLAG = 'Y' \
	AND UG.group_id = :groupId
	

SEARCH_EULA = \
SELECT A.EULA_ID,A.EULA_ALIAS,A.TITLE,A.CONTENT,A.STATUS FROM CSP.CSP_EULA A INNER JOIN CSP.CSP_DOCUMENT_LOOKUP B ON A.STATUS = B.LOOKUP_ID \
WHERE UPPER(B.LOOKUP_TYPE)=UPPER( :eula ) \
AND UPPER(B.LOOKUP_NAME) = UPPER( :status ) AND UPPER(B.LOOKUP_VALUE) IN ( :statlist )

PENDING_APPROVAL_REQUEST_COUNT= \
 SELECT COUNT(*) FROM (SELECT MC.COMPANY_NAME AS COMPANY_NAME, \
      REQ.REQUEST_ID AS REQUEST_ID, \
      REQ.REQUEST_DATE AS REQUEST_DATE, \
      REQTYPE.REQUEST_TYPENAME , \
      DRD1.COUNTID DOC , \
      DRU.COUNTID USERS , \
      REQ.REQUEST_STATUS_ID , \
      REQ.COMPETITOR , \
      REQ.EXPECTED_REVENUE , \
      REQ.OTHER_INFORMATION , \
      REQ.ORIGINATOR_NAME , \
      REQ.ORIGINATOR_EMAIL , \
      MU.FIRST_NAME \
      || ' ' \
      || MU.LAST_NAME AS REQUESTERNAME , \
      MU.LOGIN_NAME       AS REQUESTEREMAIL , \
      REQ.QUALIFYING_INFORMATION , \
      REQ.NDAIDS , \
      NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER \
    FROM CSP.CSP_REQUESTS REQ , \
      MASTER.MASTER_USER MU , \
      MASTER.MASTER_COMPANY MC , \
      CSP.CSP_L_REQUESTTYPES REQTYPE , \
      CSP.CSP_REQUESTSTATUSES REQSTAT , \
      (SELECT ST.REQUEST_ID, \
        LISTAGG( DECODE(ST.DOC_APPROVAL_STATUS_ID,1,'A:' \
        ||ST.CNT,2,'P:' \
        ||ST.CNT,4,'G:' \
        ||ST.CNT,3,'D:' \
        ||ST.CNT),'-') WITHIN GROUP ( \
      ORDER BY ST.DOC_APPROVAL_STATUS_ID) LISTAGGSTATUS , \
        NVL(LISTAGG( DECODE(ST.DOC_APPROVAL_STATUS_ID, 1 ,ST.CNT)) WITHIN GROUP ( \
      ORDER BY ST.DOC_APPROVAL_STATUS_ID),0) STATUS_ORDER \
      FROM \
        (SELECT REQUEST_ID, \
          DOC_APPROVAL_STATUS_ID, \
          COUNT(REQUEST_ID) CNT \
        FROM CSP.CSP_REQUEST_DOCUMENTS \
        WHERE DOC_APPROVAL_STATUS_ID IN (2) \
        GROUP BY REQUEST_ID, \
          DOC_APPROVAL_STATUS_ID \
        ) ST \
      GROUP BY ST.REQUEST_ID \
      ) REQ_STATUS , \
      (SELECT REQUEST_ID, \
        COUNT(ID) COUNTID \
      FROM CSP.CSP_REQUEST_DOCUMENTS \
      WHERE DOC_APPROVAL_STATUS_ID = 2 \
      AND DOCUMENT_ID           IN \
        (SELECT PRODDOCS.DOCUMENT_ID \
    FROM CSP.CSP_PRODUCT_DOCUMENTS PRODDOCS,CSP.CSP_DOCUMENT DOCS \
    WHERE PRODDOCS.DOCUMENT_ID = DOCS.DOCUMENT_ID AND DOCS.DOC_CATEGORY = 'CAT-2' AND PRODUCT_TAXID IN \
      (SELECT PRODUCT_ID FROM CSP.CSP_PRODUCT_FAE_APPROVER WHERE USER_ID = :userId and ISACTIVE = 'Y') \
	  UNION \
	  SELECT PRODDOCS.DOCUMENT_ID \
    FROM CSP.CSP_PRODUCT_DOCUMENTS PRODDOCS,CSP.CSP_DOCUMENT DOCS \
    WHERE PRODDOCS.DOCUMENT_ID = DOCS.DOCUMENT_ID AND DOCS.DOC_CATEGORY = 'CAT-3' AND PRODUCT_TAXID IN \
          (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_PLMS WHERE PLMID = :userId AND RECORD_ACTIVITY = 'Y') \
		) \
      GROUP BY REQUEST_ID \
      ) DRD1 , \
      (SELECT REQUEST_ID, \
        COUNT(REQUEST_USER_ID) COUNTID \
      FROM CSP.CSP_REQUESTUSERS \
      GROUP BY REQUEST_ID \
      ) DRU \
    WHERE MC.ISACTIVE        ='Y' \
    AND REQTYPE.REQUEST_TYPEID= REQ.REQUEST_TYPE_ID \
    AND REQ.ROUTED           ='Y' \
    AND MU.USER_ID            =REQ.REQUESTER_ID \
    AND MC.COMPANY_ID         = REQ.COMPANY_ID \
    AND REQ.REQUEST_STATUS_ID  = REQSTAT.REQUEST_STATUS_ID \
    AND REQ_STATUS.REQUEST_ID =REQ.REQUEST_ID \
    AND DRD1.REQUEST_ID       =REQ.REQUEST_ID \
    AND DRU.REQUEST_ID        =REQ.REQUEST_ID \
    AND REQ.REQUEST_STATUS_ID  = 1 \
    AND REQ.REQUEST_ID NOT   IN (SELECT REQUEST_ID FROM CSP.CSP_REQCORRESPONDENCESTATUS WHERE PLMID= :userId)
    
PENDING_APPROVAL_REQUEST_FOR_FAE_COUNT=\
	  SELECT COUNT(*) FROM ( \
	  SELECT MC.COMPANY_NAME AS COMPANY_NAME, \
      REQ.REQUEST_ID AS REQUEST_ID, \
      REQ.REQUEST_DATE AS REQUEST_DATE, \
      REQTYPE.REQUEST_TYPENAME , \
      DRD1.COUNTID DOC , \
      DRU.COUNTID USERS , \
      REQ.REQUEST_STATUS_ID , \
      REQ.COMPETITOR , \
      REQ.EXPECTED_REVENUE , \
      REQ.OTHER_INFORMATION , \
      REQ.ORIGINATOR_NAME , \
      REQ.ORIGINATOR_EMAIL , \
      MU.FIRST_NAME \
      || ' ' \
      || MU.LAST_NAME AS REQUESTERNAME , \
      MU.LOGIN_NAME       AS REQUESTEREMAIL , \
      REQ.QUALIFYING_INFORMATION , \
      REQ.NDAIDS , \
      NVL(TO_NUMBER(REQ_STATUS.STATUS_ORDER),0) STATUS_ORDER \
    FROM CSP.CSP_REQUESTS REQ , \
      MASTER.MASTER_USER MU , \
      MASTER.MASTER_COMPANY MC , \
      CSP.CSP_L_REQUESTTYPES REQTYPE , \
      CSP.CSP_REQUESTSTATUSES REQSTAT , \
      (SELECT ST.REQUEST_ID, \
        LISTAGG( DECODE(ST.DOC_APPROVAL_STATUS_ID,1,'A:' \
        ||ST.CNT,2,'P:' \
        ||ST.CNT,4,'G:' \
        ||ST.CNT,3,'D:' \
        ||ST.CNT),'-') WITHIN GROUP ( \
      ORDER BY ST.DOC_APPROVAL_STATUS_ID) LISTAGGSTATUS , \
        NVL(LISTAGG( DECODE(ST.DOC_APPROVAL_STATUS_ID, 1 ,ST.CNT)) WITHIN GROUP ( \
      ORDER BY ST.DOC_APPROVAL_STATUS_ID),0) STATUS_ORDER \
      FROM \
        (SELECT REQUEST_ID, \
          DOC_APPROVAL_STATUS_ID, \
          COUNT(REQUEST_ID) CNT \
        FROM CSP.CSP_REQUEST_DOCUMENTS \
        WHERE DOC_APPROVAL_STATUS_ID IN (2) \
        GROUP BY REQUEST_ID, \
          DOC_APPROVAL_STATUS_ID \
        ) ST \
      GROUP BY ST.REQUEST_ID \
      ) REQ_STATUS , \
      (SELECT REQUEST_ID, \
        COUNT(ID) COUNTID \
      FROM CSP.CSP_REQUEST_DOCUMENTS \
      WHERE DOC_APPROVAL_STATUS_ID = 2 \
      AND DOCUMENT_ID           IN \
        (SELECT PRODDOCS.DOCUMENT_ID \
    FROM CSP.CSP_PRODUCT_DOCUMENTS PRODDOCS,CSP.CSP_DOCUMENT DOCS \
    WHERE PRODDOCS.DOCUMENT_ID = DOCS.DOCUMENT_ID AND DOCS.DOC_CATEGORY = 'CAT-2' AND PRODUCT_TAXID IN \
      (SELECT PRODUCT_ID FROM CSP.CSP_PRODUCT_FAE_APPROVER WHERE USER_ID = :userId and ISACTIVE = 'Y') \
                              AND Request_id IN \
        (SELECT Request_id \
        FROM csp.csp_Requests Rdc, \
          MASTER.Master_User Rmu, \
          MASTER.Master_Country Rmc, \
          CSP.CSP_PRODUCT_FAE_APPROVER pa \
        WHERE Rmu.User_id  = Rdc.Requester_id \
        AND Rmc.Country_id = Rmu.Country_id \
         AND Rmc.Region_id  = $regionId$ \
        ) \
                 UNION \
                 SELECT PRODDOCS.DOCUMENT_ID \
    FROM CSP.CSP_PRODUCT_DOCUMENTS PRODDOCS,CSP.CSP_DOCUMENT DOCS \
    WHERE PRODDOCS.DOCUMENT_ID = DOCS.DOCUMENT_ID AND DOCS.DOC_CATEGORY = 'CAT-3' AND PRODUCT_TAXID IN \
          (SELECT PRODUCT_TAXID FROM CSP.CSP_PRODUCT_PLMS WHERE PLMID = :userId AND RECORD_ACTIVITY = 'Y') \
                              ) \
      GROUP BY REQUEST_ID \
      ) DRD1 , \
      (SELECT REQUEST_ID, \
        COUNT(REQUEST_USER_ID) COUNTID \
      FROM CSP.CSP_REQUESTUSERS \
      GROUP BY REQUEST_ID \
      ) DRU \
    WHERE MC.ISACTIVE        ='Y' \
    AND REQTYPE.REQUEST_TYPEID= REQ.REQUEST_TYPE_ID \
    AND REQ.ROUTED           ='Y'  \
    AND MU.USER_ID            =REQ.REQUESTER_ID \
    AND MC.COMPANY_ID         = REQ.COMPANY_ID \
    AND REQ.REQUEST_STATUS_ID  = REQSTAT.REQUEST_STATUS_ID \
    AND REQ_STATUS.REQUEST_ID =REQ.REQUEST_ID \
    AND DRD1.REQUEST_ID       =REQ.REQUEST_ID \
    AND DRU.REQUEST_ID        =REQ.REQUEST_ID \
    AND REQ.REQUEST_STATUS_ID  = 1 \
    AND REQ.REQUEST_ID NOT   IN (SELECT REQUEST_ID FROM CSP.CSP_REQCORRESPONDENCESTATUS WHERE PLMID= :userId)
    
PENDING_PLM_QUERY_COUNT=\
                             select   count(*) \
           from csp.csp_requests req \
           ,master.master_company mc \
           ,csp.csp_L_RequestTypes reqtype \
           ,master.master_user mu \
          ,(select st.request_id, \
            listagg( decode(st.doc_approval_status_id,1,'A:'||st.cnt,2,'P:'||st.cnt,4,'G:'||st.cnt,3,'D:'||st.cnt),'-')   within group (order by st.doc_approval_status_id) listaggstatus \
            , nvl(listagg( decode(st.doc_approval_status_id, 1 ,st.cnt))   within group (order by st.doc_approval_status_id),0) statusOrder \
            from \
            (select request_id,doc_approval_status_id,count(request_id) cnt from csp.csp_request_documents \
            where doc_approval_status_id in (1,2,3,4) \
            group by request_id,doc_approval_status_id) st \
            group by st.request_id) req_status \
            ,(select request_id,count(id) countid \
            from \
            csp.csp_request_documents \
            group by request_id) drd1 \
            ,(SELECT request_id,COUNT(request_user_id) countid  FROM  csp.csp_requestusers \
            group by request_id) dru  \
            where mc.isactive='Y'  \
            and mc.company_Id = req.company_Id \
            and reqtype.request_typeid= req.request_type_id \
            and req.routed='Y'  \
            and req.Request_Status_Id =1 \
            and mu.user_id=req.requester_Id \
            and mc.company_Id = req.company_Id \
            and req_status.request_id(+)=req.request_Id \
            and drd1.request_id(+)=req.request_Id \
            and dru.request_id(+)=req.request_Id \
            And Req.Request_id In(Select Request_id From csp.csp_Request_Documents Docrq,csp.csp_Document Docs Where \
    		Docrq.Document_id =Docs.Document_id  \
    		AND docs.doc_category = 'CAT-3') \
    		
PENDING_NDA_FILTER_QUERY_COUNT = SELECT count(*) \
FROM CSP.CSP_REQUESTS req , \
  MASTER.MASTER_COMPANY mc , \
  CSP.CSP_L_REQUESTTYPES reqtype , \
  MASTER.MASTER_USER mu , \
  (SELECT st.REQUEST_ID, \
    listagg( DECODE(st.DOC_APPROVAL_STATUS_ID,1,'A:' \
    ||st.cnt,2,'P:' \
    ||st.cnt,4,'G:' \
    ||st.cnt,3,'D:' \
    ||st.cnt),'-') within GROUP ( \
  ORDER BY st.DOC_APPROVAL_STATUS_ID) listaggstatus , \
    NVL(listagg( DECODE(st.DOC_APPROVAL_STATUS_ID, 2 ,st.cnt)) within GROUP ( \
  ORDER BY st.DOC_APPROVAL_STATUS_ID),0) status_order \
  FROM \
    (SELECT REQUEST_ID, \
      DOC_APPROVAL_STATUS_ID , \
      COUNT(REQUEST_ID) cnt \
    FROM CSP.CSP_REQUEST_DOCUMENTS \
    WHERE DOC_APPROVAL_STATUS_ID IN (1,2,3,4) \
    GROUP BY REQUEST_ID, \
      DOC_APPROVAL_STATUS_ID \
    ) st \
  GROUP BY st.REQUEST_ID \
  ) req_status , \
  (SELECT REQUEST_ID, \
    COUNT(id) countid \
  FROM CSP.CSP_REQUEST_DOCUMENTS \
  GROUP BY REQUEST_ID \
  ) drd1 , \
  (SELECT REQUEST_ID, \
    COUNT(REQUEST_USER_ID) countid \
  FROM CSP.CSP_REQUESTUSERS \
  GROUP BY REQUEST_ID \
  ) dru \
WHERE mc.ISACTIVE           ='Y' \
AND mc.COMPANY_ID           = req.COMPANY_ID \
AND reqtype.REQUEST_TYPEID  = req.REQUEST_TYPE_ID \
AND req.ROUTED              ='N' \
AND req.REQUEST_STATUS_ID   =1 \
AND mu.USER_ID              =req.REQUESTER_ID \
AND mc.COMPANY_ID           = req.COMPANY_ID \
AND req_status.REQUEST_ID(+)=req.REQUEST_ID \
AND drd1.REQUEST_ID(+)      =req.REQUEST_ID \
AND dru.REQUEST_ID(+)       =req.REQUEST_ID \
AND req.NDA_REQUIRED        ='Y'

GET_REGION_LIST_FROM_MASTER_COUNTRY=\
select * from master.master_country \
where country_id In (Select mu.country_id From master.master_user mu \
where user_id = :userId)


IMPACTED_DOC_COUNT = SELECT COUNT(DOCUMENT_ID) FROM (SELECT DISTINCT A.DOCUMENT_ID FROM CSP.CSP_SWATTRIBUTES A INNER JOIN CSP.CSP_DOCUMENT B \
ON A.DOCUMENT_ID=B.DOCUMENT_ID WHERE UPPER(A.EULA_ALIAS)=UPPER( :eulaAlias ))

ARCHIVE_IMPACTED_DOCS = UPDATE CSP.CSP_DOCUMENT SET STATUS= :status WHERE DOCUMENT_ID IN (SELECT DISTINCT A.DOCUMENT_ID FROM CSP.CSP_SWATTRIBUTES A \
INNER JOIN CSP.CSP_DOCUMENT B ON A.DOCUMENT_ID=B.DOCUMENT_ID WHERE UPPER(A.EULA_ALIAS)=UPPER( :eulaAlias ))


ARCHIVE_VERSIONED_DOCS=UPDATE CSP.CSP_DOCUMENT SET STATUS= :status WHERE VERSION_ID= :versionId


GET_REQUESTUSERS_LIST=\
select mu.USER_ID, mu.LOGIN_NAME, mu.FIRST_NAME	|| ' ' || mu.LAST_NAME as fullName  from CSP.CSP_SWREQUESTS dcReq \
inner join CSP.CSP_SWREQUESTUSERS dcReqUser on dcReqUser.SW_REQUEST_ID=dcReq.SW_REQUEST_ID \
inner join MASTER.MASTER_USER mu on mu.USER_ID=dcReqUser.USER_ID \
where dcReq.SW_REQUEST_ID= :requestId:

GET_COMPANY_MAPPED_TO_REQUEST=\
select * from master.master_company where company_id in \
(select company_id from csp.csp_swrequests where sw_request_id = $requestId$)

GET_PRODUCT_NAME_FROM_DOCUMENT_ID=\
select * from master.master_product_taxonomy where product_taxid in \
(select product_taxid from csp.csp_product_documents where document_id = $documentId$)

GET_DOCUMENT_DETAILS=\
select cd.document_id, cd.doc_number, cd.doc_title, crd.sw_approval_status_id, cd.docfile_name from csp.csp_document cd \
inner join csp.csp_requestsws crd on crd.document_id=cd.document_id where cd.document_id in (:documentId) \
and crd.sw_request_id in (:requestId)

GET_USER=\
select first_name || ' ' || last_name || ',' || login_name from master.master_user where lower(user_id)= :userId

GET_REQUEST_SLA=\
select * from CSP.CSP_SWREQUESTSLAS where sw_request_id = $requestId$

GET_SLA_TYPE_FROM_DOCUMENT_ID=\
select document_id,DECODE(REQUIRE_SLA, 'N', 'Generic', 'Y', 'Basla') AS applicableSla from  CSP.CSP_SWATTRIBUTES where document_id= $documentId$

SEARCH_PRODUCT_AP=\
SELECT \
distinct \
   doc_ap_mapper.access_profile_id, \
    mapt.name "ACCESS_PROFILE_TYPE", \
    mp.access_profile_code, \
    mp.access_profile_desc, \
    doc_ap_mapper.has_documents "HAS_DOCUMENTS", \
    CASE \
            WHEN mapt.name = 'COMPANY'   THEN ( ap_mapper.company_name \
            || ( \
            CASE \
                    WHEN ap_mapper.tag_name IS NULL THEN '' \
                    ELSE ' - ' \
                    || ap_mapper.tag_name \
                END \
            ) ) \
            WHEN mapt.name = 'TAG'       THEN ( \
                CASE \
                    WHEN ap_mapper.tag_name IS NULL THEN '' \
                    ELSE ap_mapper.tag_name \
                END \
            ) \
            WHEN mapt.name = 'ROLE' THEN ( \
                CASE \
                    WHEN ap_mapper.name IS NULL THEN '' \
                    ELSE ap_mapper.name \
                END \
            ) \
            WHEN mapt.name = 'PROMOCODE' THEN 'PROMO CODE - ' \
            || ap_mapper.promo_code \
            || ( \
                CASE \
                    WHEN ap_mapper.company_name IS NOT NULL THEN ' (' \
                    || ap_mapper.company_name \
                    || ')' \
                    ELSE '' \
                END \
            ) \
            WHEN mapt.name = 'OTHERS'    THEN 'OTHERS' \
        END \
    "ACCESS_PROFILE_PARAMS", \
    crtnm.created_by_name, \
    uptnm.updated_by_name \
FROM \
    ( \
        SELECT DISTINCT \
            access_profile_id, \
            0 has_documents, \
            nvl(type_id,0) "TYPE_ID" \
        FROM \
            master.master_access_profile \
        WHERE \
            access_profile_id NOT IN ( \
                SELECT \
                   mdmap.access_profile_id \
                FROM \
                    master.master_access_profile map, \
                    master.master_document_mapper mdmap \
                WHERE \
                    mdmap.access_profile_id = map.access_profile_id \
                    AND   document_id = $docId$ $inactiveDocMapping$\
            ) \
        UNION \
        SELECT DISTINCT \
            mdmap.access_profile_id, \
            1 has_documents, \
            nvl(map.type_id,0) "TYPE_ID" \
        FROM \
            master.master_access_profile map, \
            master.master_document_mapper mdmap \
        WHERE \
            mdmap.access_profile_id = map.access_profile_id \
            AND   document_id = $docId$ $activeDocMapping$ \
    ) doc_ap_mapper, \
    ( \
        SELECT \
            access_profile_code, \
            MAX(access_profile_id) AS access_profile_id, \
            MAX(access_profile_desc) AS access_profile_desc, \
            LISTAGG(company_name, \
            ',') WITHIN GROUP( \
            ORDER BY \
                company_name \
            ) AS company_name, \
            MAX(promo_code) AS promo_code, \
            MAX(name) AS name, \
            MAX(tag_id) AS tag_id, \
            MAX(tag_name) AS tag_name \
        FROM \
            ( \
                SELECT \
                    mapm.access_profile_id, \
                    mp.access_profile_code, \
                    mp.access_profile_desc, \
                    ( \
                        CASE \
                            WHEN mapm.company_id IS NULL THEN NULL \
                            ELSE ( \
                                SELECT \
                                    company_name \
                                FROM \
                                    master.master_company mc \
                                WHERE \
                                    mapm.company_id = mc.company_id \
                            ) \
                        END \
                    ) AS company_name, \
                    ( \
                        CASE \
                            WHEN mapm.promo_id IS NULL THEN NULL \
                            ELSE ( \
                                SELECT \
                                    mpc.promo_code \
                                FROM \
                                    master.master_promo_code mpc \
                                WHERE \
                                    mpc.promo_id = mapm.promo_id \
                            ) \
                        END \
                    ) AS promo_code, \
                    ( \
                        CASE \
                            WHEN mapm.profile_role_id IS NULL THEN NULL \
                            ELSE ( \
                                SELECT \
                                    mapr.name \
                                FROM \
                                    master.master_access_profile_role mapr \
                                WHERE \
                                    mapm.profile_role_id = mapr.profile_role_id \
                            ) \
                        END \
                    ) AS name, \
                    mapm.tag_id, \
                    ( \
                        CASE \
                            WHEN mapm.tag_id IS NULL THEN NULL \
                            ELSE ( \
                                SELECT \
                                    mctm.name \
                                FROM \
                                    master.master_company_tag mctm \
                                WHERE \
                                    mapm.tag_id = mctm.tag_id \
                            ) \
                        END \
                    ) AS tag_name \
                FROM \
                    master.master_access_profile_mapper mapm, \
                    master.master_access_profile mp \
                WHERE \
                    mapm.access_profile_id = mp.access_profile_id \
            ) \
        GROUP BY \
            access_profile_code \
    ) "AP_MAPPER", \
    ( \
        SELECT DISTINCT \
            mdm.access_profile_id, \
            ( mu.first_name \
            || ' ' \
            || mu.last_name ) created_by_name \
        FROM \
            master.master_user mu \
            JOIN master.master_access_profile mdm ON ( TO_CHAR(mu.user_id) = mdm.created_by ) \
    ) crtnm, \
    ( \
        SELECT DISTINCT \
            mdm.access_profile_id, \
            ( mu.first_name \
            || ' ' \
            || mu.last_name ) updated_by_name \
        FROM \
            master.master_user mu \
            JOIN master.master_access_profile mdm ON ( TO_CHAR(mu.user_id) = mdm.updated_by ) \
    ) uptnm, \
    master.master_access_profile_type mapt, \
    master.master_access_profile mp \
WHERE \
    1 = 1 \
   $productBasedAccessProfiles$ \
   $accessProfileDesc$ \
    AND   mp.type_id = 5 \
    AND   mapt.type_id = doc_ap_mapper.type_id \
    AND   mp.access_profile_id = doc_ap_mapper.access_profile_id \
    AND   crtnm.access_profile_id = doc_ap_mapper.access_profile_id \
    AND   uptnm.access_profile_id = doc_ap_mapper.access_profile_id \
    AND   mp.is_active = 'Y'
    
    
GET_PRODUCT_BASED_ACCESS_PROFILE=\
select distinct mapp.access_profile_id from master.master_access_profile mapp inner join master.accessprofile_product_mapper apm on \
mapp.access_profile_id=apm.access_profile_id where 1=1 $fileTypeCondition$

FETCH_MASTER_USER_GROUPS_WITH_COMPLETED_SLA_COVERAGE_NEW=\
select GROUP_ID,GROUP_NAME from csp.CSP_SWREQ_GROUP_MASTER_TBL where 1=1 \

CHECK_EXCLUDE_USER = SELECT USER_EMAIL FROM MASTER.USER_NOTIFICATION_EXCLUSION WHERE USER_EMAIL IN ($email$) AND EXCLUDE_NOTIFICATIONS='Y'